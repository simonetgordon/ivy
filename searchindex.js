Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[840,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[391,0,0,"-"],creation_functions:[392,0,0,"-"],data_type_functions:[396,0,0,"-"],data_types:[400,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[393,2,1,""],tril:[394,2,1,""],zeros:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[396,1,1,""],finfo:[398,2,1,""],iinfo:[399,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[396,3,1,""],bits:[396,3,1,""],eps:[396,3,1,""],max:[396,3,1,""],min:[396,3,1,""],smallest_normal:[396,3,1,""]},"ivy.functional.backends.numpy.core":{device:[439,0,0,"-"],general:[441,0,0,"-"],gradients:[475,0,0,"-"],image:[480,0,0,"-"],linear_algebra:[484,0,0,"-"],logic:[488,0,0,"-"],math:[489,0,0,"-"],random:[491,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[440,1,1,""],clear_mem_on_dev:[439,2,1,""],dev:[439,2,1,""],dev_from_str:[439,2,1,""],dev_to_str:[439,2,1,""],gpu_is_available:[439,2,1,""],num_gpus:[439,2,1,""],to_dev:[439,2,1,""],tpu_is_available:[439,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[440,3,1,""],start:[440,3,1,""],stop:[440,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[441,2,1,""],arange:[442,2,1,""],argmax:[443,2,1,""],argmin:[444,2,1,""],array:[445,2,1,""],asarray:[441,2,1,""],astype:[441,2,1,""],cast:[446,2,1,""],clip:[441,2,1,""],compile:[447,2,1,""],concatenate:[448,2,1,""],constant_pad:[441,2,1,""],container_types:[441,2,1,""],copy_array:[441,2,1,""],cumprod:[449,2,1,""],current_framework_str:[441,2,1,""],dtype:[450,2,1,""],dtype_bits:[451,2,1,""],dtype_from_str:[452,2,1,""],dtype_to_str:[453,2,1,""],equal:[441,2,1,""],floor:[441,2,1,""],floormod:[441,2,1,""],full:[454,2,1,""],gather:[455,2,1,""],gather_nd:[456,2,1,""],get_num_dims:[441,2,1,""],identity:[457,2,1,""],indices_where:[458,2,1,""],inplace_arrays_supported:[441,2,1,""],inplace_decrement:[459,2,1,""],inplace_increment:[460,2,1,""],inplace_update:[461,2,1,""],inplace_variables_supported:[441,2,1,""],is_array:[462,2,1,""],linear_resample:[463,2,1,""],linspace:[464,2,1,""],logspace:[465,2,1,""],matmul:[441,2,1,""],meshgrid:[441,2,1,""],multiprocessing:[441,2,1,""],one_hot:[466,2,1,""],ones_like:[467,2,1,""],round:[441,2,1,""],scatter_flat:[468,2,1,""],scatter_nd:[469,2,1,""],shape:[441,2,1,""],split:[470,2,1,""],squeeze:[471,2,1,""],to_list:[441,2,1,""],to_numpy:[441,2,1,""],to_scalar:[441,2,1,""],transpose:[472,2,1,""],unstack:[473,2,1,""],where:[441,2,1,""],zero_pad:[441,2,1,""],zeros_like:[474,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[476,2,1,""],is_variable:[477,2,1,""],stop_gradient:[478,2,1,""],variable:[479,2,1,""],variable_data:[475,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[481,2,1,""],gradient_image:[482,2,1,""],stack_images:[483,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[485,2,1,""],qr:[486,2,1,""],vector_to_skew_symmetric_matrix:[487,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[490,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[492,2,1,""],randint:[491,2,1,""],random_normal:[491,2,1,""],random_uniform:[491,2,1,""],seed:[491,2,1,""],shuffle:[491,2,1,""]},"ivy.functional.ivy":{array_api:[841,0,0,"-"],core:[879,0,0,"-"],nn:[1218,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[842,0,0,"-"],creation_functions:[843,0,0,"-"],data_type_functions:[847,0,0,"-"],data_types:[850,0,0,"-"],elementwise_functions:[851,0,0,"-"],function_and_method_signatures:[865,0,0,"-"],linear_algebra:[866,0,0,"-"],manipulation_functions:[869,0,0,"-"],searching_functions:[871,0,0,"-"],set_functions:[872,0,0,"-"],sorting_functions:[873,0,0,"-"],statistical_functions:[875,0,0,"-"],utility_functions:[876,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[842,4,1,""],nan:[842,4,1,""],pi:[842,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[844,2,1,""],tril:[845,2,1,""],zeros:[846,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[848,2,1,""],iinfo:[849,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[852,2,1,""],bitwise_and:[853,2,1,""],ceil:[854,2,1,""],cos:[855,2,1,""],cosh:[856,2,1,""],isfinite:[857,2,1,""],isnan:[858,2,1,""],less:[859,2,1,""],log1p:[860,2,1,""],log2:[861,2,1,""],logical_not:[862,2,1,""],sqrt:[863,2,1,""],tanh:[864,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[867,2,1,""],vector_norm:[868,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[870,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[874,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[877,2,1,""],any:[878,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[880,0,0,"-"],compilation:[919,0,0,"-"],device:[921,0,0,"-"],dtype:[971,0,0,"-"],general:[995,0,0,"-"],gradients:[1092,0,0,"-"],image:[1108,0,0,"-"],linalg:[1115,0,0,"-"],logic:[1123,0,0,"-"],math:[1126,0,0,"-"],meta:[1142,0,0,"-"],multi_node:[1146,0,0,"-"],nest:[1190,0,0,"-"],random:[1202,0,0,"-"],reductions:[1209,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[881,2,1,""],builtin_add:[882,2,1,""],builtin_and:[883,2,1,""],builtin_bool:[884,2,1,""],builtin_contains:[885,2,1,""],builtin_deepcopy:[886,2,1,""],builtin_dir:[887,2,1,""],builtin_eq:[888,2,1,""],builtin_float:[889,2,1,""],builtin_floordiv:[890,2,1,""],builtin_ge:[891,2,1,""],builtin_getattr:[892,2,1,""],builtin_getattribute:[893,2,1,""],builtin_getitem:[894,2,1,""],builtin_gt:[895,2,1,""],builtin_int:[896,2,1,""],builtin_invert:[897,2,1,""],builtin_le:[898,2,1,""],builtin_lt:[899,2,1,""],builtin_mul:[900,2,1,""],builtin_ne:[901,2,1,""],builtin_neg:[902,2,1,""],builtin_or:[903,2,1,""],builtin_pos:[904,2,1,""],builtin_pow:[905,2,1,""],builtin_radd:[906,2,1,""],builtin_rand:[907,2,1,""],builtin_rfloordiv:[908,2,1,""],builtin_rmul:[909,2,1,""],builtin_ror:[910,2,1,""],builtin_rpow:[911,2,1,""],builtin_rsub:[912,2,1,""],builtin_rtruediv:[913,2,1,""],builtin_rxor:[914,2,1,""],builtin_setitem:[915,2,1,""],builtin_sub:[916,2,1,""],builtin_truediv:[917,2,1,""],builtin_xor:[918,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[920,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[921,1,1,""],DevClonedItem:[923,1,1,""],DevClonedIter:[924,1,1,""],DevClonedNest:[925,1,1,""],DevDistItem:[926,1,1,""],DevDistIter:[927,1,1,""],DevDistNest:[928,1,1,""],DevManager:[921,1,1,""],DevMapper:[930,1,1,""],DevMapperMultiProc:[931,1,1,""],MultiDev:[921,1,1,""],MultiDevItem:[933,1,1,""],MultiDevIter:[934,1,1,""],MultiDevNest:[935,1,1,""],Profiler:[936,1,1,""],clear_mem_on_dev:[937,2,1,""],default_device:[938,2,1,""],dev:[939,2,1,""],dev_clone:[940,2,1,""],dev_clone_array:[941,2,1,""],dev_clone_iter:[942,2,1,""],dev_clone_nest:[943,2,1,""],dev_dist:[944,2,1,""],dev_dist_array:[945,2,1,""],dev_dist_iter:[946,2,1,""],dev_dist_nest:[947,2,1,""],dev_from_str:[948,2,1,""],dev_to_str:[949,2,1,""],dev_unify:[950,2,1,""],dev_unify_array:[951,2,1,""],dev_unify_iter:[952,2,1,""],dev_unify_nest:[953,2,1,""],dev_util:[954,2,1,""],get_all_arrays_on_dev:[955,2,1,""],gpu_is_available:[956,2,1,""],num_arrays_on_dev:[957,2,1,""],num_cpu_cores:[958,2,1,""],num_gpus:[959,2,1,""],percent_used_mem_on_dev:[960,2,1,""],print_all_arrays_on_dev:[961,2,1,""],set_default_device:[962,2,1,""],set_split_factor:[963,2,1,""],split_factor:[964,2,1,""],split_func_call:[965,2,1,""],to_dev:[966,2,1,""],total_mem_on_dev:[967,2,1,""],tpu_is_available:[968,2,1,""],unset_default_device:[969,2,1,""],used_mem_on_dev:[970,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[921,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[921,3,1,""],da_tune_step:[921,3,1,""],dim_size:[921,3,1,""],ds_tune_step:[921,3,1,""],map:[921,3,1,""],repeated_config_check:[921,3,1,""],tune_step:[921,3,1,""],tuned:[921,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[930,3,1,""],map:[930,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[931,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[921,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[933,3,1,""],items:[933,3,1,""],keys:[933,3,1,""],shape:[933,3,1,""],values:[933,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[934,3,1,""],at_dev:[934,3,1,""],at_devs:[934,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[935,3,1,""],at_dev:[935,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[936,3,1,""],start:[936,3,1,""],stop:[936,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[971,1,1,""],DefaultFloatDtype:[971,1,1,""],DefaultIntDtype:[971,1,1,""],astype:[971,2,1,""],cast:[975,2,1,""],closest_valid_dtype:[976,2,1,""],convert_dtype:[977,2,1,""],default_dtype:[978,2,1,""],default_float_dtype:[979,2,1,""],default_int_dtype:[980,2,1,""],dtype:[981,2,1,""],dtype_bits:[982,2,1,""],dtype_from_str:[983,2,1,""],dtype_to_str:[984,2,1,""],invalid_dtype:[985,2,1,""],is_float_dtype:[986,2,1,""],is_int_dtype:[987,2,1,""],set_default_dtype:[988,2,1,""],set_default_float_dtype:[989,2,1,""],set_default_int_dtype:[990,2,1,""],unset_default_dtype:[991,2,1,""],unset_default_float_dtype:[992,2,1,""],unset_default_int_dtype:[993,2,1,""],valid_dtype:[994,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[971,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[971,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[971,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1019,2,1,""],abs:[996,2,1,""],all_equal:[997,2,1,""],arange:[998,2,1,""],arg_names:[999,2,1,""],argmax:[1000,2,1,""],argmin:[1001,2,1,""],array:[1002,2,1,""],array_equal:[1003,2,1,""],arrays_equal:[1004,2,1,""],asarray:[995,2,1,""],assert_supports_inplace:[1005,2,1,""],broadcast_to:[1006,2,1,""],cache_fn:[1007,2,1,""],clip:[1008,2,1,""],clip_matrix_norm:[1009,2,1,""],clip_vector_norm:[1010,2,1,""],concatenate:[1011,2,1,""],constant_pad:[1012,2,1,""],container_types:[1013,2,1,""],copy_array:[1014,2,1,""],cross:[1015,2,1,""],cumprod:[1016,2,1,""],cumsum:[1017,2,1,""],current_framework_str:[1018,2,1,""],einops_rearrange:[1020,2,1,""],einops_reduce:[1021,2,1,""],einops_repeat:[1022,2,1,""],equal:[1023,2,1,""],exists:[1024,2,1,""],expand_dims:[1025,2,1,""],floor:[1026,2,1,""],floormod:[1027,2,1,""],fourier_encode:[1028,2,1,""],full:[1029,2,1,""],gather:[1030,2,1,""],gather_nd:[1031,2,1,""],get_all_arrays_in_memory:[1032,2,1,""],get_min_base:[1033,2,1,""],get_min_denominator:[1034,2,1,""],get_num_dims:[1035,2,1,""],get_referrers_recursive:[1036,2,1,""],has_nans:[1037,2,1,""],identity:[1038,2,1,""],indices_where:[1039,2,1,""],inplace_arrays_supported:[1040,2,1,""],inplace_decrement:[1041,2,1,""],inplace_increment:[1042,2,1,""],inplace_update:[1043,2,1,""],inplace_variables_supported:[1044,2,1,""],is_array:[1045,2,1,""],isinf:[1046,2,1,""],linear_resample:[1047,2,1,""],linspace:[1048,2,1,""],logspace:[1049,2,1,""],match_kwargs:[1050,2,1,""],matmul:[1051,2,1,""],maximum:[1052,2,1,""],meshgrid:[1053,2,1,""],minimum:[1054,2,1,""],multiprocessing:[1055,2,1,""],num_arrays_in_memory:[1056,2,1,""],one_hot:[1057,2,1,""],ones:[1058,2,1,""],ones_like:[1059,2,1,""],print_all_arrays_in_memory:[1060,2,1,""],queue_timeout:[1061,2,1,""],repeat:[1062,2,1,""],reshape:[1063,2,1,""],round:[1064,2,1,""],scatter_flat:[1065,2,1,""],scatter_nd:[1066,2,1,""],set_min_base:[1067,2,1,""],set_min_denominator:[1068,2,1,""],set_queue_timeout:[1069,2,1,""],set_tmp_dir:[1070,2,1,""],shape:[1071,2,1,""],shape_to_tuple:[1072,2,1,""],split:[1073,2,1,""],squeeze:[1074,2,1,""],stable_divide:[1075,2,1,""],stable_pow:[1076,2,1,""],stack:[1077,2,1,""],supports_inplace:[1078,2,1,""],swapaxes:[1079,2,1,""],tile:[1080,2,1,""],tmp_dir:[1081,2,1,""],to_list:[1082,2,1,""],to_numpy:[1083,2,1,""],to_scalar:[1084,2,1,""],transpose:[1085,2,1,""],try_else_none:[1086,2,1,""],unstack:[1087,2,1,""],value_is_nan:[1088,2,1,""],where:[1089,2,1,""],zero_pad:[1090,2,1,""],zeros_like:[1091,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1092,1,1,""],adam_step:[1094,2,1,""],adam_update:[1095,2,1,""],execute_with_gradients:[1096,2,1,""],gradient_descent_update:[1097,2,1,""],is_variable:[1098,2,1,""],lamb_update:[1099,2,1,""],lars_update:[1100,2,1,""],optimizer_update:[1101,2,1,""],set_with_grads:[1102,2,1,""],stop_gradient:[1103,2,1,""],unset_with_grads:[1104,2,1,""],variable:[1105,2,1,""],variable_data:[1106,2,1,""],with_grads:[1107,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1092,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1109,2,1,""],float_img_to_uint8_img:[1110,2,1,""],gradient_image:[1111,2,1,""],random_crop:[1112,2,1,""],stack_images:[1113,2,1,""],uint8_img_to_float_img:[1114,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1116,2,1,""],inv:[1117,2,1,""],matrix_norm:[1118,2,1,""],pinv:[1119,2,1,""],qr:[1120,2,1,""],svd:[1121,2,1,""],vector_to_skew_symmetric_matrix:[1122,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1124,2,1,""],logical_or:[1125,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1127,2,1,""],acosh:[1128,2,1,""],asin:[1129,2,1,""],atan2:[1131,2,1,""],atan:[1130,2,1,""],atanh:[1132,2,1,""],cosh:[1133,2,1,""],divide:[1134,2,1,""],erf:[1135,2,1,""],exp:[1136,2,1,""],log:[1137,2,1,""],sin:[1138,2,1,""],sinh:[1139,2,1,""],tan:[1140,2,1,""],tanh:[1141,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1143,2,1,""],maml_step:[1144,2,1,""],reptile_step:[1145,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1146,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1191,2,1,""],copy_nest:[1192,2,1,""],index_nest:[1193,2,1,""],map:[1194,2,1,""],map_nest_at_index:[1195,2,1,""],map_nest_at_indices:[1196,2,1,""],multi_index_nest:[1197,2,1,""],nested_indices_where:[1198,2,1,""],nested_map:[1199,2,1,""],set_nest_at_index:[1200,2,1,""],set_nest_at_indices:[1201,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1203,2,1,""],randint:[1204,2,1,""],random_normal:[1205,2,1,""],random_uniform:[1206,2,1,""],seed:[1207,2,1,""],shuffle:[1208,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1210,2,1,""],reduce_max:[1211,2,1,""],reduce_mean:[1212,2,1,""],reduce_min:[1213,2,1,""],reduce_prod:[1214,2,1,""],reduce_std:[1215,2,1,""],reduce_sum:[1216,2,1,""],reduce_var:[1217,2,1,""]},"ivy.functional.ivy.nn":{activations:[1219,0,0,"-"],layers:[1227,0,0,"-"],losses:[1240,0,0,"-"],norms:[1244,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1220,2,1,""],leaky_relu:[1221,2,1,""],relu:[1222,2,1,""],sigmoid:[1223,2,1,""],softmax:[1224,2,1,""],softplus:[1225,2,1,""],tanh:[1226,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1228,2,1,""],conv1d_transpose:[1229,2,1,""],conv2d:[1230,2,1,""],conv2d_transpose:[1231,2,1,""],conv3d:[1232,2,1,""],conv3d_transpose:[1233,2,1,""],depthwise_conv2d:[1234,2,1,""],dropout:[1235,2,1,""],linear:[1236,2,1,""],lstm_update:[1237,2,1,""],multi_head_attention:[1238,2,1,""],scaled_dot_product_attention:[1239,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1241,2,1,""],cross_entropy:[1242,2,1,""],sparse_cross_entropy:[1243,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1245,2,1,""]},"ivy.stateful":{activations:[1249,0,0,"-"],converters:[1252,0,0,"-"],initializers:[1254,0,0,"-"],layers:[1263,0,0,"-"],module:[1275,0,0,"-"],norms:[1277,0,0,"-"],optimizers:[1279,0,0,"-"],sequential:[1285,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1250,1,1,""],GELU:[1251,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1250,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1251,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1253,2,1,""]},"ivy.stateful.initializers":{Constant:[1254,1,1,""],FirstLayerSiren:[1256,1,1,""],GlorotUniform:[1257,1,1,""],KaimingNormal:[1254,1,1,""],Ones:[1259,1,1,""],Siren:[1260,1,1,""],Uniform:[1254,1,1,""],Zeros:[1262,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1254,3,1,""],create_variables:[1254,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1256,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1257,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1254,3,1,""],create_variables:[1254,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1259,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1260,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1254,3,1,""],create_variables:[1254,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1262,3,1,""]},"ivy.stateful.layers":{Conv1D:[1264,1,1,""],Conv1DTranspose:[1265,1,1,""],Conv2D:[1266,1,1,""],Conv2DTranspose:[1267,1,1,""],Conv3D:[1268,1,1,""],Conv3DTranspose:[1269,1,1,""],DepthwiseConv2D:[1270,1,1,""],Dropout:[1271,1,1,""],LSTM:[1272,1,1,""],Linear:[1273,1,1,""],MultiHeadAttention:[1274,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1267,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1268,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1269,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1270,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1271,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1272,3,1,""],get_initial_state:[1272,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1273,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1274,3,1,""]},"ivy.stateful.module":{Module:[1276,1,1,""]},"ivy.stateful.module.Module":{__init__:[1276,3,1,""],build:[1276,3,1,""],build_mode:[1276,3,1,""],built:[1276,3,1,""],check_submod_rets:[1276,3,1,""],get_mod_key:[1276,3,1,""],mod_depth:[1276,3,1,""],mod_height:[1276,3,1,""],mod_with_top_mod_key_chain:[1276,3,1,""],save_weights:[1276,3,1,""],show_mod_in_top_mod:[1276,3,1,""],show_structure:[1276,3,1,""],show_v_in_top_v:[1276,3,1,""],sub_mods:[1276,3,1,""],track_submod_call_order:[1276,3,1,""],track_submod_rets:[1276,3,1,""],v_with_top_v_key_chains:[1276,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1278,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1278,3,1,""]},"ivy.stateful.optimizers":{Adam:[1280,1,1,""],LAMB:[1281,1,1,""],LARS:[1282,1,1,""],Optimizer:[1283,1,1,""],SGD:[1284,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1280,3,1,""],set_state:[1280,3,1,""],state:[1280,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1281,3,1,""],set_state:[1281,3,1,""],state:[1281,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1282,3,1,""],set_state:[1282,3,1,""],state:[1282,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1283,3,1,""],set_state:[1283,3,1,""],step:[1283,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1284,3,1,""],set_state:[1284,3,1,""],state:[1284,3,1,""]},"ivy.stateful.sequential":{Sequential:[1286,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1286,3,1,""]},"ivy.verbosity":{cprint:[1291,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1290,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1279,1280,1281],"02886":1246,"100":[1146,1246,1288],"141592653589793":842,"2021":1246,"2102":1246,"360":[1126,1138,1140],"718281828459045":842,"754":[842,847,848,851,863],"999":[1092,1094,1095,1099,1279,1280,1281],"abstract":[921,936,1246,1279,1283],"boolean":[40,41,851,853,862,921,956,968,971,985,994,995,997,1003,1004,1037,1039,1040,1044,1045,1046,1078,1088,1092,1098,1123,1124,1125,1142,1143,1144,1146],"break":43,"case":[15,18,19,40,41,42,43,851,852,854,855,856,861,863,921,960,967,970,995,998,1063,1065,1066,1115,1118,1120,1146,1190,1193,1197,1246,1263,1274,1275,1276,1279,1283,1292],"catch":[995,1019],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,396,439,440,847,849,921,923,924,925,926,927,928,930,931,933,934,935,936,948,949,971,995,999,1050,1092,1106,1146,1190,1192,1199,1240,1242,1243,1246,1249,1250,1251,1252,1253,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1292],"default":[15,18,19,40,41,42,43,843,844,845,846,866,867,868,869,870,873,874,876,877,878,919,920,921,930,931,938,939,943,944,945,946,947,950,951,952,953,960,963,964,965,970,971,978,979,980,981,995,997,998,1000,1001,1009,1010,1011,1012,1015,1016,1017,1028,1029,1030,1035,1037,1038,1047,1049,1050,1053,1055,1058,1061,1062,1065,1066,1069,1071,1073,1075,1076,1085,1087,1088,1092,1095,1097,1098,1099,1100,1101,1103,1107,1115,1118,1120,1142,1143,1144,1145,1146,1190,1191,1192,1194,1198,1199,1202,1203,1205,1206,1209,1211,1212,1213,1214,1215,1216,1217,1219,1220,1224,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],"final":[40,41,43,995,1028,1048,1049,1146,1263,1274,1289],"float":[40,41,42,43,842,843,844,846,847,848,851,852,854,855,856,861,863,864,866,868,880,899,905,921,930,931,954,960,963,967,970,971,979,986,995,998,1009,1010,1012,1028,1029,1033,1034,1049,1067,1068,1069,1075,1076,1092,1094,1095,1097,1099,1100,1101,1108,1110,1114,1126,1134,1142,1143,1144,1145,1146,1202,1205,1206,1219,1221,1227,1235,1238,1239,1240,1241,1242,1243,1244,1245,1263,1271,1274,1277,1278,1279,1280,1281,1282,1283,1284],"function":[15,40,41,43,393,394,395,398,399,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,842,844,845,846,848,849,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,868,870,874,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1249,1250,1251,1279,1282,1283,1284,1288,1289,1292],"import":[43,1246,1289,1292],"int":[40,41,42,43,392,393,394,395,491,843,844,845,846,847,848,849,866,867,868,869,870,873,874,876,877,878,880,899,905,919,920,921,943,944,945,946,947,950,951,952,953,958,959,965,971,980,982,987,995,1000,1001,1006,1011,1012,1016,1017,1020,1021,1022,1025,1028,1029,1030,1035,1038,1047,1048,1049,1057,1058,1062,1063,1065,1066,1071,1072,1073,1074,1077,1079,1080,1085,1087,1090,1092,1094,1095,1099,1108,1112,1113,1115,1118,1142,1143,1144,1145,1146,1190,1199,1202,1203,1204,1206,1207,1209,1211,1212,1213,1214,1215,1216,1217,1219,1224,1227,1228,1229,1230,1231,1232,1233,1234,1238,1240,1242,1243,1244,1245,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1277,1278],"long":[43,1227,1237],"new":[40,41,43,491,843,844,846,851,860,971,975,995,996,1006,1020,1021,1022,1025,1028,1029,1030,1031,1058,1063,1065,1066,1067,1068,1075,1076,1077,1092,1095,1097,1099,1100,1101,1108,1110,1112,1114,1126,1128,1132,1133,1139,1141,1146,1190,1200,1201,1202,1203,1244,1245,1246,1252,1253,1263,1273,1277,1278,1279,1280,1281,1282,1283,1284,1289,1292],"public":[995,1013],"return":[15,16,17,18,19,40,41,42,43,491,843,844,845,846,851,852,853,854,855,856,857,858,859,861,862,863,864,866,867,868,873,874,876,877,878,880,899,905,919,920,921,930,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,956,957,959,960,964,965,966,967,968,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,994,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1062,1063,1064,1065,1066,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1190,1191,1192,1194,1198,1199,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1252,1253,1263,1272,1273,1279,1283,1288,1289,1292],"short":[43,1227,1237,1246,1292],"static":[40,41,919,920],"super":1146,"true":[40,41,42,441,447,475,478,491,492,851,857,858,862,866,868,873,874,876,877,878,919,920,921,995,997,1005,1007,1024,1028,1037,1039,1088,1089,1092,1095,1097,1098,1099,1100,1101,1103,1115,1118,1142,1143,1144,1145,1146,1190,1191,1198,1202,1203,1209,1211,1212,1213,1214,1215,1216,1217,1219,1220,1227,1235,1240,1241,1242,1243,1263,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],"try":[40,41,995,1086,1146],"var":[40,41,1142,1143,1144,1292],"while":[40,41,42,851,862,1146],AND:[851,853,876,877,1123,1124],But:1292,For:[43,851,852,854,855,856,861,863,995,998,1008,1077,1092,1098,1106,1115,1120,1126,1127,1246,1252,1253,1289,1292],Its:[1126,1130],NOT:[851,862],Not:842,One:[40,41,43,995,1021,1063,1202,1204,1292],Ones:[1246,1254],PRs:43,Such:[995,1013],That:1289,The:[15,16,17,18,19,40,41,42,43,843,845,851,852,853,854,855,856,857,858,859,861,862,863,864,866,867,868,869,870,873,874,876,877,878,880,899,905,919,920,921,930,931,937,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,960,963,964,965,966,967,970,971,975,976,977,982,983,984,985,994,995,998,1002,1003,1006,1007,1009,1010,1011,1012,1014,1015,1018,1019,1023,1028,1030,1031,1038,1041,1042,1043,1045,1047,1049,1051,1053,1055,1058,1059,1062,1063,1065,1066,1067,1068,1069,1072,1073,1074,1075,1076,1077,1080,1088,1091,1092,1094,1095,1097,1099,1100,1101,1103,1106,1108,1110,1112,1114,1115,1118,1120,1121,1126,1127,1129,1130,1134,1135,1136,1137,1138,1140,1142,1143,1144,1145,1146,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1289,1292],There:[43,1246,1289],These:[43,1246],Use:43,Used:[1190,1191,1198,1275,1276],Using:[1246,1247,1292],With:[40,41,1115,1118,1209,1211,1212,1213,1214,1215,1216,1217,1246,1288,1292],__array__:[995,1002],__call__:[1263,1274,1275,1276],__del__:1146,__dict__:[1146,1289],__enter__:1146,__exit__:1146,__getitem__:1146,__getstate__:1146,__init__:[40,41,42,43,59,60,82,214,396,397,439,440,521,652,921,922,929,930,931,932,933,934,935,936,971,972,973,974,1092,1093,1146,1150,1157,1246,1249,1250,1251,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1292],__iter__:1146,__len__:1146,__next__:1146,__pow__:43,__repr__:1146,_assign_vari:1288,_axi:1146,_base:[1190,1191,1198],_compute_node_da_ratio:1146,_compute_node_strs_da:1146,_concat_unify_arrai:1146,_counter:1146,_cur_framework:[43,1146],_da_direct:1146,_da_directions_flip:1146,_da_step_tim:1146,_da_tim:1146,_da_tune_count:1146,_data:1146,_delta_da_dim_s:1146,_delta_sf:1146,_dict:1146,_dim_siz:1146,_first_da_tune_step:1146,_first_ns_tune_step:1146,_fn:1146,_forward:[1246,1288],_get_kalman_param:1292,_get_prior:1292,_get_some_model:1292,_handle_flat_arrays_in_out:43,_index:[1190,1191,1198],_input_queu:1146,_length:1146,_max_depth:1146,_max_node_dim_step_ratio:1146,_max_node_dim_step_s:1146,_max_split_factor_step_s:1146,_mean_unify_arrai:1146,_min_bas:[995,1076,1244,1245,1277,1278],_min_denomin:[995,1075],_min_node_dim_s:1146,_min_sf_tune_step:1146,_min_unit_node_tune_step:1146,_model:1292,_native_wrapp:43,_node_mapp:1146,_node_percent_mem:1146,_node_str:1146,_node_str_da_ratio:1146,_node_strs_da:1146,_node_strs_kei:1146,_node_strs_n:1146,_node_util:1146,_ns_step_tim:1146,_ns_time:1146,_ns_tune_count:1146,_num_nod:1146,_num_work:1146,_observed_config:1146,_output_queu:1146,_paramet:1288,_percent_mem_inc_per_sf:1146,_percent_mem_inc_per_unit_da_dim:1146,_percent_util_inc_per_unit_da_dim:1146,_ret_fn:1146,_safety_factor:1146,_save_dir:1146,_shift_da_split:1146,_shift_n:1146,_slice:1146,_step:[1279,1283],_sum_unify_arrai:1146,_timeout:1146,_tune:1146,_tune_da:1146,_tune_n:1146,_tune_step:1146,_unit_da_tune_count:1146,_unroll_step:1292,_with_node_mappig:1146,_worker:1146,_worker_class:1146,_worker_fn:1146,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,921,930,936,1146,1275,1276,1279,1283],abil:1246,abl:[40,41],about:[847,848,849],abov:[43,843,845,866,867,1202,1204],above_height:[40,41],abs:[296,441,571,703,866,868,995,1146],absolut:[40,41,995,996],abstractmethod:1146,accept:[15,43,851,862,1246],access:[40,41,43,1289],accord:[40,41,847,848,995,1012,1030,1065,1066,1085,1090],accordingli:[866,868,876,877,878],accur:[59,396,439,440,921,933,934,935,936,971,1092,1254,1256,1257,1259,1260,1262],aco:[791,1126],acosh:[791,1126],across:[40,41,921,930,931,940,941,943,944,945,946,947,953,963,964,995,1000,1001,1003,1004,1146,1190,1194],act:43,activ:[1220,1221,1222,1223,1224,1225,1226,1246,1250,1251],actual:1289,adam:[1092,1094,1095,1099,1246,1279,1281,1288],adam_step:1092,adam_upd:1092,adapt:[1092,1100,1279,1282],add:[40,41,43,1146,1240,1241,1242,1243,1244,1245,1246,1277,1278,1289],added:[43,995,1075,1076,1285,1286],adding:[43,995,1006],addit:[40,41,43,995,1020,1021,1022,1244,1245,1263,1273],addition:43,address:43,adher:43,adjac:[995,998],adopt:[43,995,1013],affect:[995,998],affin:[1277,1278],after:[851,863,995,1047,1092,1095,1096,1097,1099,1100,1101,1108,1109,1244,1245,1279,1280,1281,1282,1283,1284,1292],after_1:[995,1012,1090],after_n:[995,1012,1090],again:43,against:[40,41,1115,1118,1209,1211,1212,1213,1214,1215,1216,1217],agnost:[43,1246,1288,1289],aim:1292,algebra:1115,algorithm:[1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270,1292],align:[40,41,43,995,1006],aliv:[921,955,957,961,995,1032,1056,1060],all:[15,16,17,18,19,40,41,43,111,238,426,550,681,843,845,866,868,869,870,876,919,920,921,930,955,961,995,996,997,1003,1004,1013,1032,1038,1060,1074,1115,1120,1142,1143,1144,1145,1146,1190,1191,1192,1198,1199,1202,1203,1206,1209,1211,1212,1213,1214,1215,1216,1217,1227,1237,1246,1289,1292],all_depth:[40,41],all_equ:995,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1190,all_tru:[40,41],alloc:[43,843,845,921,1146],allow:[995,1048,1049,1050,1275,1276],allow_dupl:[995,1050],alon:[921,960,970,1146,1246],along:[40,41,43,491,866,868,869,870,873,874,876,877,878,921,944,945,946,947,950,951,952,953,965,995,1011,1016,1017,1030,1047,1048,1049,1062,1073,1077,1080,1087,1115,1118,1142,1143,1144,1145,1146,1202,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],alongsid:[1288,1289],alpha:[1219,1221],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,851,854,921,1146],also:[40,41,43,995,998,1092,1095,1142,1143,1144,1145,1190,1191,1192,1198,1199,1227,1236,1246,1263,1273,1288],altern:1288,alwai:[40,41,43,1092,1098,1103],among:[40,41],amount:[921,967,1146,1246],angl:[851,856,864,1126,1127,1131],ani:[15,16,17,18,19,40,41,43,111,238,426,550,681,876,919,920,921,923,926,930,931,933,942,943,946,947,952,995,997,998,1002,1019,1020,1021,1022,1023,1024,1037,1045,1050,1075,1076,1092,1096,1146,1190,1191,1194,1198,1199,1200,1201,1202,1206,1246,1252,1253,1275,1276,1288,1289,1292],anoth:[40,41,43,971,977,1246],another_backend:43,anyth:[43,1292],anywai:43,apart:43,api:[1246,1247],appear:[43,995,1025],append:[40,41,866,867,1146],appli:[15,18,19,40,41,995,1020,1021,1022,1092,1099,1100,1115,1121,1123,1124,1125,1142,1143,1144,1190,1194,1197,1199,1219,1220,1221,1222,1223,1224,1225,1226,1227,1236,1238,1239,1244,1245,1246,1249,1250,1251,1277,1278],applic:[1190,1194,1199,1227,1238,1239,1246,1292],approxim:[43,851,852,855,856,860,861,864,880,905,1219,1220],arang:[131,296,441,491,571,703,995,1048,1049],arbitrari:[40,41,921,950,951,953,1146],arc:[1126,1131],arcco:[1126,1127],arctan:[1126,1130],area:[851,852,1246],arg:[15,16,17,40,41,43,59,63,921,930,943,947,953,965,995,1020,1021,1022,1066,1146,1252,1253,1275,1276],arg_nam:995,arg_stateful_idx:[1275,1276],argmax:[131,441,571,703,995],argmin:[131,441,571,703,995],args_clon:1146,args_dist:1146,args_to_ivi:[15,1246],args_to_n:[15,1246],args_uni:1146,argsort:[108,235,423,547,678,873],argument:[15,16,17,18,19,40,41,42,43,59,63,919,920,921,930,931,943,947,953,995,998,999,1007,1019,1050,1066,1126,1127,1146,1190,1194,1252,1253,1275,1276],aris:[1246,1292],arithmet:[43,1209,1212,1215,1217],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:491,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,131,296,441,491,571,703,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,868,869,870,873,874,876,877,878,899,905,921,939,940,941,944,945,946,947,950,951,952,953,955,957,961,965,966,971,975,981,986,987,995,996,997,998,1000,1001,1003,1004,1005,1006,1008,1009,1010,1011,1012,1014,1015,1016,1017,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1031,1032,1035,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1051,1052,1053,1054,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1071,1073,1074,1077,1078,1079,1080,1082,1083,1084,1085,1087,1088,1089,1090,1091,1092,1094,1095,1098,1099,1103,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1146,1190,1192,1199,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1263,1271,1272,1274,1279,1283,1288,1289],arrang:[995,1020],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,392,393,394,395,396,398,399,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,868,869,870,873,874,876,877,878],array_api_methods_to_test:43,array_builtin:[43,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918],array_equ:[296,703,995],array_lik:[491,995,1002],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,995],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1246],arraywithgener:[22,1246],arraywithgradi:[24,1246],arraywithimag:[26,1246],arraywithlinalg:[28,1246],arraywithlog:[30,1246],arraywithmath:[32,1246],arraywithmeta:[34,1246],arraywithrandom:[36,1246],arraywithreduct:[38,1246],arriv:[40,41,42],articl:1246,arxiv:1246,as_arrai:[40,41,995,1035,1071],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[439,441,450,921,939,971,978,979,980,981],as_tensor:441,as_vari:[40,41],as_zero:[40,41],asarrai:[441,995],ascend:[873,874],asin:[791,1126],asinh:[86,401,525,656,851],aspect:[1108,1113],assert:[40,41,995,1005,1146],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:995,associ:[43,1115,1122],assum:[851,855,1289,1292],astyp:[441,971],asynchron:[40,41,42],at_dev:[40,42,921,934,935],at_kei:[40,41],at_key_chain:[40,41],at_nod:1146,atan2:[791,1126],atan:[791,1126],atanh:[791,1126],attent:[43,1227,1238,1239,1263,1274],attribut:[0,6,40,41,847,848,849,995,1059,1091],audienc:[1246,1289],author:1246,automat:43,avail:[40,41,43,921,956,958,959,968,995,1021,1146],averag:[1092,1094,1095,1099,1142,1143,1144,1209,1212],average_across_step:[1142,1143,1144],avoid:[43,921,1146,1289],axes:[40,41,43,441,472,484,485,866,868,869,870,876,877,878,921,965,995,1000,1001,1012,1025,1079,1085,1090,1115,1118,1146,1209,1211,1212,1213,1214,1215,1216,1217],axes_length:[40,41,995,1020,1021,1022],axi:[40,41,441,443,444,448,449,455,463,464,465,470,471,473,866,867,868,869,870,873,874,876,877,878,921,923,926,933,944,945,946,947,950,951,952,953,965,995,1000,1001,1011,1012,1015,1016,1017,1025,1030,1047,1048,1049,1062,1073,1074,1077,1079,1080,1087,1090,1146,1202,1208,1209,1211,1212,1213,1214,1215,1216,1217,1219,1224,1240,1242,1243],axis0:[40,41,995,1079],axis1:[40,41,866,867,995,1079],axis2:[866,867],back:[43,1275,1276,1279,1283],backend:[15,17,19,40,41,392,393,394,395,396,398,399,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,921,956,959,968,971,977,985,994,995,1040,1044,1092,1095,1097,1099,1100,1101,1106,1146,1246,1247,1252,1253,1279,1280,1281,1282,1283,1284,1288,1289,1292],backend_nam:43,background:[1246,1289],backprop:1292,backward:[876,877,878,1288],band:[995,1028],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,396,439,440,441,465,851,860,861,880,905,921,923,924,925,926,927,928,930,931,933,934,935,936,971,995,1033,1049,1067,1076,1092,1146,1209,1210,1246,1249,1250,1251,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1292],basi:43,batch:[40,41,866,868,921,963,964,995,1028,1038,1108,1112,1115,1121,1142,1143,1144,1145,1146,1227,1236,1244,1245,1277,1278],batch_shap:[441,457,995,1038,1057,1108,1109,1110,1111,1112,1113,1114,1115,1122,1202,1203,1227,1237,1238,1239,1263,1272],batch_siz:[491,492,1146,1202,1203,1227,1228,1229,1230,1231,1232,1233,1234],bayesian:1292,becaus:[43,995,998],becom:[43,995,1008,1126,1131,1292],been:[995,1020,1021,1022,1202,1203],befor:[40,41,43,921,965,1142,1143,1144,1146,1190,1199,1209,1211,1212,1213,1214,1215,1216,1217,1227,1238,1239,1292],before_1:[995,1012,1090],before_n:[995,1012,1090],begin:[1190,1191,1198,1289],behaviour:[43,1292],behind:[1092,1095,1097,1099,1100,1101,1246],being:[40,41,43,995,998,1061,1069,1146],believ:43,belong:[40,41],below:[43,843,845,866,867,1246,1289,1292],below_depth:[40,41],benefit:1246,bernoul:[1227,1235,1263,1271],best:[43,995,1050,1246],beta1:[1092,1094,1095,1099,1279,1280,1281],beta2:[1092,1094,1095,1099,1279,1280,1281],beta:[1244,1245],between:[40,41,42,847,848,995,998,1115,1120,1190,1194,1202,1204,1240,1242,1243,1279,1281],bia:[1227,1236,1237,1263,1264,1265,1266,1267,1268,1269,1270,1273],bias_initi:[1263,1264,1265,1266,1267,1268,1269,1270,1273],bilinear:[1108,1109],bilinear_resampl:[167,350,480,614,776,1108],bilinearli:[1108,1109],binari:[851,853,1240,1241],binary_cross_entropi:1240,bit:[396,847,848,849,971,982,1108,1110,1114,1246],bitwis:[851,853],bitwise_and:[86,218,401,525,656,851],bitwise_oper:[0,7,8],block:[1246,1289],bool:[15,18,19,40,41,42,43,851,857,858,859,862,866,868,873,874,876,877,878,880,899,919,920,921,939,952,956,960,965,968,970,971,981,995,997,1003,1004,1016,1019,1023,1024,1028,1035,1037,1045,1050,1071,1073,1087,1088,1089,1092,1095,1096,1097,1098,1099,1100,1101,1103,1115,1118,1142,1143,1144,1145,1146,1190,1191,1192,1194,1198,1199,1202,1203,1209,1211,1212,1213,1214,1215,1216,1217,1219,1220,1227,1235,1252,1253,1263,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],both:[43,995,1015],bottom:1246,boundari:[40,41,1202,1206],branch:[43,919,920],brittl:43,broadcast:[40,41,43,851,853,859,866,868,876,877,878,880,899,905,995,1006,1023,1052,1053,1054,1062,1115,1118,1126,1131,1134,1209,1211,1212,1213,1214,1215,1216,1217],broadcast_to:[296,703,995],build:[1146,1246,1263,1274,1275,1276],build_mod:[1263,1274,1275,1276],builder:[43,1246],built:[921,995,998,1146,1263,1274,1275,1276],builtin:43,builtin_ab:[251,880],builtin_add:[251,880],builtin_and:[251,880],builtin_bool:[251,880],builtin_contain:[251,880],builtin_deepcopi:[251,880],builtin_dir:[251,880],builtin_eq:[251,880],builtin_float:[251,880],builtin_floordiv:[251,880],builtin_g:[251,880],builtin_getattr:[251,880],builtin_getattribut:[251,880],builtin_getitem:[251,880],builtin_gt:[251,880],builtin_int:[251,880],builtin_invert:[251,880],builtin_l:[251,880],builtin_lt:[251,559,690,880],builtin_mul:[251,880],builtin_n:[251,880],builtin_neg:[251,880],builtin_or:[251,880],builtin_po:[251,880],builtin_pow:[43,251,880],builtin_radd:[251,880],builtin_rand:[251,880],builtin_rfloordiv:[251,880],builtin_rmul:[251,880],builtin_ror:[251,880],builtin_rpow:[251,880],builtin_rsub:[251,880],builtin_rtruediv:[251,880],builtin_rxor:[251,880],builtin_setitem:[251,880],builtin_some_op:43,builtin_sub:[251,880],builtin_truediv:[251,880],builtin_xor:[251,880],busi:43,bypass:1289,cach:[921,937,995,1007],cache_fn:995,calcul:[40,41,42,43,851,852,855,856,860,861,863,864,880,905,1126,1134],call:[43,921,965,995,1061,1069,1086,1092,1096,1146,1190,1191,1194,1198,1263,1274,1275,1276,1279,1283,1289,1292],callabl:[40,41,919,920,921,930,931,965,995,1007,1019,1021,1050,1086,1142,1143,1144,1145,1146,1190,1194,1195,1196,1198,1199,1227,1238],can:[43,921,963,964,965,995,1063,1108,1110,1146,1246,1288,1289,1292],cancel_join_thread:1146,cannot:43,captur:1246,cast:[40,41,131,296,441,571,703,971,995,1011,1108,1110,1114],catch_except:[995,1019],categori:43,caus:43,ceil:[86,218,401,525,656,851,995,998],cell:[1227,1237,1263,1272],certain:[40,41,995,998,1048,1049],chain:[40,41,1142,1143,1144,1285,1286],chang:[43,921,995,1063,1146,1190,1192,1199,1246,1288],channel:[995,1028,1108,1110,1111,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273],check:[15,16,17,18,19,40,41,43,921,960,970,971,976,985,994,995,1005,1024,1037,1045,1078,1088,1092,1098,1146,1190,1191,1198,1246,1289],check_nest:[1190,1198],check_shap:[40,41],check_submod_ret:[1275,1276],check_typ:[40,41],choic:[1246,1289],choleski:[780,1115],choos:[851,862,995,1089,1115,1120,1126,1131,1246],choose_random_framework:59,chosen:[40,41,995,998,1089],chunk:[921,963,964,965,1146],chunk_siz:[921,965,1146],circl:[1126,1127,1129],clark:1246,clear:[43,921,937,1146],clear_framework_stack:59,clear_mem_on_dev:[439,695,921],click:1246,clip:[40,41,296,441,703,995,1009,1010,1052,1054,1246],clip_matrix_norm:995,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,995],clipped_delta:1146,clone:[40,41,921,940,941,942,943,1146],clone_arrai:1146,clone_it:1146,clone_nest:1146,clonedit:1146,cloneditem:1146,clonednest:1146,close:[43,1108,1113,1126,1129,1146,1292],closest:[851,854,971,976],closest_valid_dtyp:971,code:[40,41,42,43,491,1246,1247,1288,1289],codebas:[921,963,964,1146,1246,1289,1292],codomain:[851,852,855,856,861,863,864],colab:1246,collect:[15,40,41,439,441,475,480,484,488,489,491,880,919,921,971,995,1092,1108,1115,1123,1126,1146,1190,1202,1209,1219,1227,1240,1244,1249,1263,1277,1279],color:[40,41,42,1290,1291],column:[995,1038],combin:[40,41,42,1108,1113,1246,1292],combined_batch_s:1146,come:1289,command:1246,comment:43,commit:1292,common:[40,41,43,1126,1131],common_key_chain:[40,41],commun:[43,1246,1289],communuti:43,compar:[40,41,873,874,995,997,1003,1004],comparison_oper:[0,9,10],compat:[43,851,853,859,866,868,876,877,878,880,899,905,995,1023,1063,1126,1134,1246,1292],compil:[296,441,703,1275,1276,1279,1280,1281,1282,1283,1284],compile_on_next_step:[1275,1276,1279,1280,1281,1282,1283,1284],complet:[40,41,43,1115,1120,1146],complex:[1289,1292],compliant:[851,862],compon:[995,1015],composit:43,comput:[40,41,851,853,859,862,866,868,880,899,921,965,995,1009,1010,1016,1017,1023,1051,1092,1094,1095,1096,1097,1099,1100,1101,1103,1105,1108,1111,1115,1116,1117,1118,1119,1120,1123,1124,1125,1126,1127,1129,1130,1131,1135,1136,1137,1138,1140,1190,1194,1209,1210,1211,1212,1213,1214,1215,1216,1217,1227,1228,1229,1230,1231,1232,1233,1234,1236,1238,1240,1241,1242,1243],concat:[40,41,921,950,951,952,953,965,995,1028,1146],concaten:[40,41,131,296,441,571,703,995,1028,1146,1246],concatten:[40,41,921,950,951,952,953,965,1146],condit:[441,919,920,995,1089,1190,1198],conditon:[1190,1198],config:[40,41,1146],config_list:1146,configur:[40,41],conflict:43,conform:43,conjunct:1289,connect:[1263,1273,1274],consid:[40,41,851,862,1115,1120,1288,1292],consist:[40,41,921,953,1146,1209,1210,1275,1276,1289],constant:[921,930,931,995,1012,1146,1190,1194,1240,1241,1242,1243,1244,1245,1254,1255,1259,1262,1275,1276,1277,1278,1289],constant_kwarg:1146,constant_pad:[296,441,571,703,995],constitu:[40,41],construct:[995,1080,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288],constructor:[40,41,42,995,999,1285,1286],consum:[921,1146],cont_feat_dim:[1227,1238],contaienr:[40,41],contain:[15,18,19,42,43,843,844,845,846,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,868,876,877,878,880,899,905,921,940,944,965,971,975,995,996,1000,1001,1008,1009,1010,1013,1023,1037,1052,1054,1064,1075,1076,1092,1094,1095,1097,1099,1100,1101,1126,1134,1142,1143,1144,1145,1146,1202,1203,1209,1211,1212,1213,1215,1217,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[441,703,995],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[441,995,1055,1227,1238,1263,1274],context_dim:[1263,1274],contextmanag:[59,60],continu:[43,1146,1289],contract:[40,41,1209,1210],contribut:[1246,1247],contributor:[43,1246],control:1246,conv1d:[198,381,505,832,1227,1246,1263],conv1d_transpos:[198,381,505,832,1227],conv1dtranspos:[1246,1263],conv2d:[198,381,505,640,832,1227,1246,1263],conv2d_transpos:[198,381,505,832,1227],conv2dtranspos:[1246,1263],conv3d:[198,381,505,640,832,1227,1246,1263],conv3d_transpos:[198,381,505,832,1227],conv3dtranspos:[1246,1263],convent:[40,41,1209,1210],conver:[921,937,948,960,967,970,1146],convers:[16,17,18,19,40,41,1146,1246],convert:[15,16,17,18,19,40,41,43,921,948,949,971,977,983,984,995,1072,1083,1084,1108,1110,1114,1115,1122,1146,1190,1192,1199,1246,1253],convert_dtyp:971,convolut:[1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270],cool:43,cooler:43,coordin:[995,1053,1126,1127,1129,1131],copi:[40,41,43,491,995,1014,1146,1190,1192],copy_arrai:[441,703,995],copy_nest:1190,core:[439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1246],corner:43,correct:[43,1246,1289],correctli:[40,41,43,1115,1118,1126,1131,1209,1211,1212,1213,1214,1215,1216,1217],correspond:[40,41,43,880,905,995,1011,1202,1203],cos:[86,401,525,656,851,995,1028,1126,1127,1140,1289],cosh:[86,401,525,656,791,851,1126],cosin:[851,855,856,1126,1127,1128,1133],cost:[1092,1094,1095,1097,1099,1100,1101,1142,1143,1144,1145],cost_fn:[1142,1145],could:1292,count:[40,41,869,870,876,877,878,1146,1209,1214,1216],cours:43,cprint:1290,cpu:[40,41,43,921,958,960,966,967,970,995,998,1002,1030,1031,1038,1048,1049,1057,1058,1059,1065,1066,1091,1146,1202,1203,1204,1205,1206,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1288,1289],creat:[40,41,843,844,846,921,930,931,995,998,1002,1029,1030,1031,1038,1048,1049,1057,1058,1059,1065,1066,1082,1091,1092,1105,1146,1202,1203,1204,1205,1206,1246,1247,1252,1253,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1292],create_if_abs:[40,41],create_vari:1254,creation:[40,41,42,43],creation_funct:[392,393,394,395,843,844,845,846],crop:[1108,1112],crop_siz:[1108,1112],cross:[296,703,995,1240,1241,1242,1243],cross_entropi:1240,cuda:[40,41,921,930,949,966,995,998,1002,1030,1031,1038,1048,1049,1057,1058,1059,1065,1066,1091,1146,1202,1203,1204,1205,1206,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286],cumprod:[131,296,441,703,995],cumsum:[703,995],cumul:[995,1016,1017],current:[40,41,42,43,921,930,954,955,957,961,971,977,985,994,995,1018,1032,1040,1044,1056,1060,1146,1190,1191,1198,1246,1292],current_framework:59,current_framework_str:[441,703,995,1146],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1227,1228,1229,1230,1231,1232,1233],d_out:[1227,1228,1229,1230,1231,1232,1233],da_can_termin:1146,da_dim_s:[921,1146],da_direct:1146,da_tune_step:[921,1146],dai:1292,daniel:1246,data:[40,41,42,43,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,861,862,863,864,866,867,868,869,870,873,874,876,877,878,880,899,905,921,923,924,925,926,927,928,933,934,935,949,971,975,976,977,981,982,983,984,985,986,987,994,995,998,1002,1023,1029,1038,1045,1058,1059,1063,1074,1078,1091,1092,1098,1106,1126,1134,1146,1227,1236,1246],data_format:[1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270],data_type_funct:[396,398,399,847,848,849],dataset:[40,41],datatyp:[40,41,971,976,986,987],dcdw:[1092,1094,1095,1097,1099,1100],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1092,1099,1100,1279,1281,1282],decay_lambda:[1092,1099,1100,1279,1281,1282],decid:[40,41,1292],decompos:[1115,1116,1120],decomposit:[1115,1116,1120,1121],decor:43,decrement:[995,1041],dedic:[1092,1106,1252,1253],deep:[40,41,1246],deep_copi:[40,41],deeper:[921,943,947,953,1146,1190,1199,1246],deepli:[1190,1192],def:[43,60,82,214,397,521,652,922,929,932,972,973,974,1093,1146,1150,1157,1246,1255,1258,1261,1288,1289,1292],default_dev:43,default_devic:921,default_dtyp:[43,971],default_float_dtyp:971,default_int_dtyp:971,default_key_color:[40,41,42],default_nod:1146,default_rng:491,default_v:[995,1019],defaultdevic:[921,922],defaultdtyp:[971,972],defaultfloatdtyp:[971,973],defaultintdtyp:[971,974],defer:43,defin:[43,995,1015,1057,1059,1091,1202,1204],definit:43,degre:[1126,1138,1140],del:1146,delai:43,delet:43,delta:[1092,1094,1146],delta_dim_s:1146,delta_percent_mem:1146,delta_sf:1146,delta_util:1146,demo:1246,denomin:[995,1027,1034,1068,1075,1076,1244,1245,1277,1278],denot:43,dens:[1263,1273],depend:[43,851,852,855,856,860,861,864,873,874,880,905,995,1089,1115,1121,1246],depth:[40,41,441,466,921,943,947,953,995,1036,1057,1146,1190,1199,1275,1276],depth_cutoff:[40,41],depthwis:[1227,1234,1263,1270],depthwise_conv2d:[198,381,505,640,832,1227],depthwiseconv2d:[1246,1263],deriv:[1092,1094,1095,1097,1099,1100,1101,1190,1192,1199,1246,1275,1279,1283,1285],descend:[873,874,1115,1121],descent:[1092,1097,1279,1284],describ:[40,41,1209,1210],descript:[866,868],design:[1246,1247],desir:[40,41,921,966,971,975,995,998,1002,1038,1039,1058,1059,1091,1108,1113,1146,1209,1211,1212,1213,1215,1217],desired_aspect_ratio:[480,483,1108,1113],desired_percent_increas:1146,detail:1292,detect:[40,41,1190,1191,1198],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,851,852,853,855,856,857,858,861,863,866,867,868,876,877,878,880,905,921,956,958,959,968,971,975,976,982,985,986,987,994,995,997,998,1002,1003,1004,1037,1040,1044,1045,1078,1088,1092,1098,1126,1134,1142,1143,1144,1145,1146,1227,1238],dev:[40,41,42,43,124,290,439,441,442,445,455,456,457,464,465,466,467,468,469,474,491,492,564,695,921,924,925,927,928,930,931,934,935,937,938,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,957,960,961,962,963,964,965,966,967,970,995,998,1002,1030,1031,1038,1048,1049,1057,1058,1059,1065,1066,1091,1092,1107,1202,1203,1204,1205,1206,1252,1253,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286],dev_clon:[40,41,921],dev_clone_arrai:921,dev_clone_it:921,dev_clone_nest:921,dev_dist:[40,41,921],dev_dist_arrai:921,dev_dist_it:921,dev_dist_nest:921,dev_from_str:[43,124,290,439,564,695,921],dev_mapp:921,dev_str:[40,41],dev_to_str:[124,290,439,564,695,921],dev_unifi:921,dev_unify_arrai:921,dev_unify_it:921,dev_unify_nest:921,dev_util:921,devclonedit:921,devcloneditem:921,devclonednest:921,devdistit:921,devdistitem:921,devdistnest:921,develop:[43,1246,1289,1292],deviat:[40,41,1202,1205,1209,1215,1244,1245,1277,1278],devic:[21,40,41,43,392,393,395,440,441,454,843,844,845,846,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,995,998,1002,1029,1030,1031,1038,1048,1049,1057,1058,1059,1065,1066,1091,1092,1107,1202,1203,1204,1205,1206,1246,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286],devmanag:[921,929],devmapp:[921,931],devmappermultiproc:921,diag:[1115,1121],diagon:[101,228,416,540,671,843,845,866,995,1038],dict:[15,16,17,18,19,40,41,42,921,923,926,930,931,933,943,944,945,946,947,995,1020,1021,1022,1050,1142,1143,1144,1146,1190,1192,1193,1194,1197,1199,1252,1253],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,847,848,921,940,941,944,945,1115,1120,1146,1227,1236,1246,1289,1292],differenti:[1246,1289],dilat:[1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270],dim:[40,41,43,995,1057,1108,1109,1113,1115,1121,1146,1263,1274],dim_siz:[40,41,921,1146],dimens:[40,41,42,843,845,866,867,868,869,870,876,877,878,921,952,995,1006,1011,1015,1020,1021,1022,1025,1028,1035,1047,1057,1062,1063,1073,1074,1077,1085,1087,1108,1112,1115,1118,1121,1142,1143,1144,1145,1146,1202,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1224,1227,1228,1229,1230,1231,1232,1233,1234,1237,1240,1242,1243,1263,1264,1265,1266,1267,1268,1269,1270,1273,1274],dimension:[40,41,491,866,868,876,877,878,995,1073,1074,1115,1121],direct:1146,directli:[43,1190,1199,1289,1292],directori:[995,1070,1081],discord:43,discret:[1240,1242],discuss:43,disk:[40,41,1108,1110],distanc:[995,998],distribut:[40,41,921,940,944,945,946,947,1146,1202,1203,1204,1205,1206,1227,1235,1263,1271,1275,1276],distribute_nest:1146,distributedarrai:[40,41],distrubt:[1240,1242],dive:[1246,1289],divid:[40,41,995,1073,1075,1126],dividend:[1126,1134],divis:[995,1027,1034,1068,1075,1076,1092,1094,1095,1099,1126,1134,1279,1280,1281],divisor:[1092,1094,1095,1099,1126,1134,1279,1280,1281],doc:1246,docstr:43,document:43,doe:[40,41,43,995,998,1073,1288],doesn:[1115,1120,1246],doing:43,domain:[851,852,855,856,861,863,864,1126,1127],don:[43,1246],done:43,door:1292,dot:[1115,1117,1227,1238,1239,1263,1274],down:1288,downscal:[995,1009,1010],drag:[1246,1292],draw:[1202,1203,1205,1206],drawn:[1202,1203,1204,1205,1206],drop:[1246,1292],dropout:[1227,1246,1263,1274],dropout_r:[1263,1274],ds_tune_step:921,dtype:[40,41,43,131,296,392,393,395,396,398,399,441,442,445,446,454,457,467,474,571,703,843,844,846,847,848,849,975,976,977,978,979,980,982,983,984,985,986,987,988,989,990,991,992,993,994,995,998,1002,1029,1038,1057,1058,1059,1091],dtype_bit:[131,296,441,571,703,971],dtype_from_str:[43,131,296,441,571,703,971],dtype_in:[441,451,452,453,971,977,982,983,984,985,986,987,994],dtype_to_str:[131,296,441,571,703,971],duplic:[40,41,43],dure:[40,41,43,919,920,995,1086,1092,1094,1095,1099,1142,1143,1144,1145,1275,1276,1279,1280,1281,1283],dynam:[43,441,447,919,920],each:[40,41,42,43,851,852,853,854,855,856,857,858,859,860,861,862,863,864,880,899,905,921,930,931,940,941,942,943,944,945,946,952,964,965,995,996,997,1012,1023,1062,1073,1077,1080,1090,1092,1095,1097,1099,1100,1101,1108,1111,1115,1121,1126,1129,1134,1136,1137,1146,1190,1194,1202,1203,1209,1210,1227,1228,1229,1230,1231,1232,1233,1234,1235,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1289],eager:1289,easi:1292,easili:1246,econom:1292,ecosystem:1246,edg:[995,1008,1012,1090],effect:[1092,1101],effective_grad:[1092,1101],effici:1292,einop:[40,41,995,1020,1021,1022],einops_rearrang:[40,41,995],einops_reduc:[40,41,995],einops_repeat:[40,41,995],einstein:[40,41,1209,1210],einsum:[40,41,184,369,493,630,812,1209],either:[40,41,43,851,861,995,1019,1050,1053,1055,1142,1143,1144,1145,1146,1263,1274,1275,1276,1289],eleg:1146,element:[40,41,43,491,843,845,851,852,853,854,855,856,857,858,859,860,861,862,863,864,869,870,876,877,878,880,899,905,921,942,946,952,971,975,995,996,998,1000,1001,1003,1004,1008,1009,1010,1016,1017,1023,1026,1027,1038,1039,1052,1054,1062,1064,1073,1084,1089,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1146,1209,1210,1212,1214,1216,1219,1220,1221,1222,1223,1224,1225,1226,1227,1235,1263,1271],elementwis:[40,41],elementwise_affin:[1277,1278],elementwise_funct:[851,852,853,854,855,856,857,858,859,860,861,862,863,864],elemtn:[1202,1203],elif:1146,els:[43,995,1005,1019,1024,1146],elsewher:[995,1089],emphas:1246,empti:[40,41,876,877,878,1115,1120,1146],enabl:[40,41,42,43,1246],encapsul:[847,849],encod:[995,1028,1108,1110],end:[995,998,1246,1289],engag:43,ensur:43,entir:[40,41,876,877,878,921,965,1146,1246,1263,1272],entri:[40,41,995,1048,1049,1073,1074],entropi:[1240,1241,1242,1243],enumer:1146,environ:1246,eps:[396,847,848],epsilon:[1092,1094,1095,1099,1240,1241,1242,1243,1244,1245,1277,1278,1279,1280,1281],equal:[40,41,441,571,703,851,857,866,867,873,874,995,997,1003,1004,1012,1073,1090,1126,1138,1140,1202,1206],equality_matrix:[995,997],equat:[40,41,1209,1210],equival:[851,862,866,868,995,998,1126,1140],erf:[489,791,1126],error:[40,41,43,921,995,1074,1126,1135,1146,1219,1220,1275,1276,1279,1283],essenti:43,etc:[40,41,43,921,966,995,998,1002,1030,1031,1038,1048,1049,1057,1058,1059,1065,1066,1091,1146,1202,1203,1204,1205,1206,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1292],euclidean:[866,868],euler:842,evalu:[40,41,851,860,861,876,877,878,995,1053,1190,1191,1198],even:[43,1292],evenli:[40,41,995,998,1048,1049,1073],everi:[43,995,997,1292],exact:[40,41],exampl:[43,919,920,995,1008,1077,1115,1120,1246,1288,1289,1292],example_input:[441,447,919,920],exc_tb:1146,exc_typ:1146,exc_val:1146,exce:[995,1054],except:[40,41,44,47,876,877,878,995,998,1005,1011,1019,1086,1146],excess_s:1146,excit:[1246,1289],exclud:[59,61,995,998,1202,1206],exclus:[40,41,441,449,462,475,477,995,1016,1045,1092,1098,1202,1204],execut:[43,995,1086,1289],execute_with_gradi:[164,345,475,609,770,1092,1246,1288],exist:[40,41,995,1019,1146,1246,1279,1283,1292],exp:[791,1126],expand:[40,41,995,1025,1028],expand_dim:[40,41,296,703,995,1146],expect:[995,999],explain:[43,1289],explicitli:[43,1263,1272,1274,1275,1276,1289],expon:[43,880,905,995,1076],exponenti:[43,880,905,1126,1135,1136],expos:[995,1002,1013],express:[851,855,995,1053],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1092,1096],eye:[1115,1117],fabian:1246,fabio:1246,factor:[921,930,963,964,965,1092,1094,1095,1099,1100,1115,1121,1146,1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270,1279,1280,1281,1282],fail:43,falck:1246,fall:[1275,1276,1279,1283],fallback_to_non_compil:[1275,1276,1279,1283],fals:[15,18,19,40,41,42,59,66,67,68,69,70,439,441,449,450,462,470,473,475,476,477,484,485,851,857,858,862,866,868,873,874,876,877,878,921,939,952,960,965,970,971,978,979,980,981,995,997,1016,1019,1024,1028,1035,1045,1050,1071,1073,1087,1089,1092,1095,1096,1097,1098,1099,1100,1101,1115,1118,1142,1143,1144,1145,1146,1190,1191,1192,1194,1198,1199,1209,1211,1212,1213,1214,1215,1216,1217,1252,1253,1275,1276,1279,1280,1281,1282,1283,1284],fan_in:1254,fan_mod:1254,fan_out:1254,far:[1190,1191,1198,1288],faster:[919,920],favourit:[1246,1288],feasibl:1292,feat_dim:[1227,1238,1239],fed:[921,965,1146],feed:[921,965,1146],few:43,field:1292,file:[40,41,43,995,1070,1081,1275,1276],filepath:[40,41],fill:[40,41,843,844,846,995,1029,1058,1202,1204],fill_valu:[441,454,995,1029],filter:[1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270,1292],filter_s:[1263,1264,1265],filter_shap:[1263,1266,1267,1268,1269,1270],find:[40,41,43,1292],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,213,214,396,397,520,521,651,652,847],finish:[1246,1292],finit:[851,857],first:[40,41,43,491,851,853,859,866,867,919,920,921,952,995,1003,1011,1015,1023,1048,1049,1077,1079,1092,1096,1115,1121,1142,1143,1144,1145,1146,1190,1191,1198,1202,1208,1209,1214,1216,1263,1274,1275,1276,1279,1283,1289,1292],firstlayersiren:[1246,1254],firstli:[1289,1292],fist:[921,965,1146],fit:[40,41,439,441,475,480,484,488,489,491,995,1062,1108,1113],fix:43,fkt:1292,flag:[40,41,43,1092,1098],flat:[40,41,43,995,1062,1065],flat_list:[40,41],flatten:[40,41,866,868,995,1028,1062,1209,1211,1212,1213,1215,1217],flatten_key_chain:[40,41,1275,1276],flexibl:[1246,1289],flip:[40,41,104,231,419,543,674,869],float32:[43,441,457,971,975,983,984,995,998,1002,1038,1058,1059,1091],float_dtyp:[971,979,989],float_img_to_uint8_img:1108,floor:[296,441,703,995,1027,1146],floormod:[296,441,703,995],fluid:1292,folder:[43,1246],follow:[40,41,43,847,849,866,868,921,965,995,1041,1042,1043,1075,1076,1092,1095,1097,1099,1100,1101,1146,1190,1194,1199,1227,1238,1239,1246,1263,1273,1279,1283],followng:[847,848],fomaml_step:1142,forget:[1092,1094,1095,1099,1279,1280,1281],fork:[995,1055,1246,1247],forkserv:[995,1055,1146],form:[15,16,17,18,19,40,41,843,845,866,867,995,1002,1092,1095,1097,1099,1100,1101,1190,1192,1199,1227],format:[40,41,43,921,939,971,975,977,981,995,998,1002,1038,1058,1059,1091,1146,1209,1210,1246,1288,1289],format_fn:[40,41],format_key_chain:[40,41],forward:[1275,1276,1279,1283,1288],found:[40,41,42],fourier:[995,1028],fourier_encod:995,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,105,109,112,113,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,178,179,180,181,182,183,185,186,187,188,189,190,191,194,196,197,199,200,201,202,203,204,205,210,211,212,214,215,216,219,220,221,222,223,224,225,226,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,414,417,418,420,424,427,428,440,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,481,482,483,485,486,487,490,492,494,495,496,497,498,499,500,503,504,506,507,508,509,510,511,512,517,518,519,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,538,541,542,544,548,551,552,560,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,610,611,612,613,615,616,617,619,620,621,622,626,627,628,629,631,632,633,634,635,636,637,641,642,643,648,649,650,652,653,654,657,658,659,660,661,662,663,664,665,666,667,668,669,672,673,675,679,682,683,691,696,697,698,699,700,701,702,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,771,772,773,774,775,777,778,779,781,782,783,784,785,786,787,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,806,807,808,809,810,811,813,814,815,816,817,818,819,822,823,824,825,826,827,828,830,831,833,834,835,836,837,838,839,844,845,846,848,849,852,853,854,855,856,857,858,859,860,861,862,863,864,867,868,870,874,877,878,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1241,1242,1243,1245,1246,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1291,1292],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1146,framewrk:[995,1055],free:43,freed:43,freeli:43,frequenc:[995,1028],from:[40,41,42,43,851,863,866,867,869,870,876,877,878,921,930,931,965,971,977,995,1019,1030,1031,1038,1063,1074,1082,1089,1092,1095,1099,1108,1112,1115,1120,1142,1143,1144,1145,1146,1190,1192,1199,1202,1203,1204,1205,1206,1209,1214,1216,1227,1235,1238,1246,1252,1253,1263,1271,1274,1279,1283,1288,1289],from_cal:[1275,1276],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,131,296,441,571,703,847,848,995,1115,1120,1246],full_matric:[1115,1121],fulli:[43,1246,1263,1273,1274,1288],func:[40,41,441,447,475,476,919,920,921,965,995,1007,1092,1096,1146],further:[43,1292],furthermor:1292,futur:1292,gain:1254,gamma:[1244,1245],gather:[40,41,131,296,441,571,703,995,1031],gather_nd:[40,41,131,296,441,571,703,995],gauss:[1126,1135],gaussian:[1219,1220],geglu:[1246,1249],gelu:[379,502,821,1219,1246,1249],gener:[23,40,41,43,439,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,491,919,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1098,1202,1204,1206,1207,1246,1279,1283],geometr:[995,1028],get:[40,41,43,847,848,849,921,930,931,939,954,955,960,964,967,970,971,981,982,995,999,1032,1033,1034,1061,1146,1246,1263,1272,1292],get_all_arrays_in_memori:995,get_all_arrays_on_dev:921,get_framework:59,get_initial_st:[1263,1272],get_min_bas:995,get_min_denomin:995,get_mod_kei:[1275,1276],get_num_dim:[441,703,995],get_referrers_recurs:995,getfullargspec:1146,gist:1246,give:[43,995,1063,1289],given:[40,41,43,869,870,921,954,960,963,964,965,967,970,971,975,995,998,1002,1008,1016,1017,1031,1048,1049,1058,1059,1062,1065,1066,1073,1080,1085,1087,1091,1092,1094,1095,1097,1099,1100,1101,1115,1117,1122,1126,1127,1146,1190,1195,1196,1202,1205,1206,1208,1209,1212,1214,1215,1216,1217,1227,1228,1229,1230,1231,1232,1233,1234,1252,1253,1292],global:[40,41,42,921,930,931,938,963,964,965,971,978,979,980,995,1018,1033,1034,1061,1067,1068,1069,1075,1076,1092,1107,1146,1244,1245,1277,1278],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1246,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273],good:43,googl:1246,got:[43,1246],gpu0:43,gpu2:43,gpu:[921,956,959,1146],gpu_is_avail:[439,921,1146],grad:[1246,1279,1283,1288],gradient:[25,40,41,476,477,478,479,921,965,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1111,1142,1143,1144,1145,1246,1279,1280,1281,1282,1283,1284,1288,1292],gradient_descent_upd:[1092,1142,1143,1144,1145],gradient_imag:[167,350,480,614,776,1108],gradienttrack:[1092,1093],graph:[1092,1095,1097,1099,1100,1101,1275,1276],greater:[40,41,995,998,1026,1074,1202,1206],green:[40,41,42,1290,1291],grid:[995,1053],group:[1108,1113],guid:[43,1246,1247,1292],gym:1246,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1292,half:[995,998,1146,1202,1206],hand:1246,handl:[40,41,42,43,919,920,921,937,939,948,949,960,967,970,1092,1095,1097,1099,1100,1101,1146,1279,1280,1281,1282,1283,1284],happen:43,has:[40,41,43,995,1077,1115,1120,1126,1130],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,995],hasattr:1146,have:[40,41,43,843,844,845,846,847,848,851,852,853,854,855,856,857,858,859,861,862,863,864,866,867,868,869,870,873,874,876,877,878,880,899,905,995,1011,1015,1020,1021,1022,1023,1029,1077,1092,1098,1106,1115,1121,1126,1134,1146,1246,1288,1289],haven:43,hdf5:[40,41,1275,1276],head:[1227,1238,1263,1274],head_dim:[1263,1274],height:[1108,1113],height_cutoff:[40,41],help:[43,59,396,439,440,921,933,934,935,936,971,1092,1246,1254,1256,1257,1259,1260,1262],here:[43,1246],hidden:[1227,1237,1263,1272],hierarch:[995,1013],hierarchi:[40,41],high:[40,41,491,1202,1204,1206],higher:[1092,1095,1097,1099,1100,1101,1115,1121],highest:[1202,1204],highest_util:1146,highest_util_nod:1146,highli:1246,highlight:1292,hint:43,hkt:1292,hold:[971,975,995,998,1002,1065,1066],host:1246,hot:[995,1057],hour:43,how:[1246,1263,1274,1275,1276,1289,1292],howev:[43,1289],http:1292,hyperbol:[851,852,856,864,1126,1128,1132,1133,1139,1141,1219,1226],hypothet:[43,1292],icon:1246,idea:1246,ident:[40,41,43,131,296,441,571,703,995],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[842,847,848,851,863],if_exist:[40,41],ignor:[40,41,1279,1283],ignore_key_error:[40,41],ignore_miss:[1279,1283],ignore_non:[40,41],iii:43,iinfo:[81,213,396,520,651,847],imag:[27,481,482,483,995,1047,1109,1110,1111,1112,1113,1114,1227,1228,1229,1230,1231,1233,1234,1246,1292],image_dim:[1108,1112],imkkhk:1292,immedi:[1246,1289,1292],implement:[43,851,852,855,856,860,861,864,873,874,880,905,1246,1289,1292],in_featur:[1227,1236],inadvert:43,includ:[40,41,43,866,868,876,877,878,995,998,1037,1075,1076,1088,1190,1191,1202,1206,1263,1273,1274,1277,1278,1288],include_deriv:[1190,1192,1199],include_empti:[40,41],include_inf:[40,41,995,1037,1088],include_nest:[1190,1191],include_self:[40,41],inclus:[43,1202,1204],incom:[1227,1236],increas:[921,943,947,953,995,1012,1025,1090,1146,1190,1199],increasingli:1292,increment:[995,1042,1146],inde:1246,indent:[40,41,42],independ:[1202,1203],index:[40,41,441,491,873,874,995,1000,1001,1030,1031,1053,1074,1077,1190,1193,1195,1196,1197,1200],index_nest:1190,indic:[40,41,441,455,456,466,468,469,866,868,873,874,995,1000,1001,1030,1031,1039,1057,1065,1066,1190,1191,1193,1195,1196,1197,1198,1200,1201,1202,1203,1219,1224,1227,1228,1229,1230,1231,1232,1233,1234,1244,1245,1263,1264,1265,1266,1267,1268,1269,1270,1275,1276],indices_wher:[131,296,441,703,995],indistinguish:[851,863],inevit:1292,inf:[40,41,866,868,995,1037,1046,1088,1126,1130],infer:[919,920,995,1035,1038,1063,1071,1108,1112,1115,1120,1289,1292],infin:[851,852,854,855,856,857,861,863,864,866,868,876,877,878,995,1046],infinit:[851,863],inform:[847,848,849,1092,1103],init_c:[1227,1237],init_h:[1227,1237],init_on_first_step:[1279,1283],initi:[40,41,42,43,59,396,439,440,921,933,934,935,936,971,1092,1146,1227,1237,1246,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1279,1283],initialz:[1275,1276],inner:[1142,1143,1144,1145],inner_batch_fn:[1142,1143,1144],inner_batch_shap:[1227,1236],inner_cost_fn:[1142,1143,1144],inner_grad_step:[1142,1143,1144,1145],inner_learning_r:[1142,1143,1144,1145],inner_optimization_step:[1142,1143,1144,1145],inner_v:[1142,1143,1144],innermost:[843,845,866,867],inp:1146,inplac:[40,41,995,1005,1040,1044,1078,1092,1095,1097,1099,1100,1101,1252,1253,1279,1280,1281,1282,1283,1284],inplace_arrays_support:[441,995],inplace_decr:[131,296,441,571,703,995],inplace_incr:[131,296,441,571,703,995],inplace_oper:[0,11,12],inplace_upd:[40,41,131,296,441,571,703,995,1252,1253],inplace_variables_support:[441,995],input:[15,18,19,40,41,42,43,843,845,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,868,869,870,873,874,876,877,878,919,920,921,930,931,938,939,940,943,944,947,953,965,966,971,975,976,978,979,980,981,982,986,987,995,996,997,1000,1001,1003,1004,1005,1006,1008,1009,1010,1011,1012,1014,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1035,1037,1038,1039,1041,1042,1043,1045,1046,1047,1051,1052,1053,1054,1062,1064,1071,1072,1074,1077,1078,1079,1080,1082,1083,1084,1085,1087,1088,1090,1092,1096,1098,1103,1107,1108,1109,1110,1111,1112,1114,1115,1118,1120,1121,1123,1124,1125,1126,1128,1130,1132,1133,1134,1138,1139,1140,1141,1142,1143,1144,1145,1146,1202,1203,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1244,1245,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1277,1278,1289],input_ax:[921,965,1146],input_channel:[1263,1264,1265,1266,1267,1268,1269,1272,1273],input_queu:1146,inputs_split:1146,insert:[995,1025],insid:43,inspect:1146,inspir:1292,instal:1246,instanc:[15,16,17,18,19,40,41,43,491,880,899,905,921,930,1146,1252,1253,1285,1286],instead:[40,41,43,491,1209,1211,1212,1213,1214,1215,1216,1217,1292],int32:43,int64:[971,975,995,998,1002,1038,1058,1059,1091],int_dtyp:[971,980,990],integ:[40,41,491,847,849,851,853,854,866,868,876,877,878,971,987,995,998,1026,1064,1073,1202,1204,1207],integr:1246,intend:43,inter:1246,interact:1246,interchang:[40,41,995,1079],interest:1246,interfac:[995,1002,1289],intermedi:[40,41],intern:[40,41,921,1092,1106,1146,1190,1191,1198,1199,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1285,1286],interpol:[995,1047],intersect:[1126,1127],interv:[40,41,876,877,878,995,998,1008,1048,1049,1126,1129,1202,1206],introduc:1292,inv:[780,1115,1292],invalid:[876,877,878],invalid_dtyp:971,invers:[851,852,1115,1117,1119,1126,1127,1128,1129,1130,1132,1292],invert:[1115,1117,1119],invest:1292,investig:43,invoc:[919,920],irrespect:1246,is_al:1146,is_arrai:[131,296,441,571,703,995,1146],is_float_dtyp:971,is_int_dtyp:971,is_mean:1146,is_sum:1146,is_vari:[164,345,475,609,770,1092],isfinit:[86,218,401,525,656,851],isinf:[296,571,703,995],isinst:1146,isnan:[86,218,401,525,656,851],isnumer:1146,issu:[1246,1247],issue_numb:43,item:[15,19,40,41,880,892,893,921,930,931,933,940,942,944,946,952,971,978,995,1013,1036,1075,1076,1146,1190,1194,1195,1196,1199,1200,1201,1246,1275,1276,1288],iter:[15,16,17,18,19,40,41,42,919,920,921,924,925,927,928,930,931,934,935,942,944,945,946,947,952,965,995,997,1006,1011,1012,1038,1053,1058,1062,1063,1066,1071,1073,1077,1080,1085,1090,1146,1190,1191,1192,1194,1198,1199],iterbal:[921,942,946,952,1146],its:[491,921,965,995,1038,1063,1079,1085,1146,1246],itself:[43,1190,1199],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,868,869,870,873,874,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1290,1291],ivy_backend:[40,41],ivy_bay:1292,ivy_test:43,ivyfcmodel:1288,ivyh:[40,41,42],ivymodul:[195,829],jame:1246,jax:[43,1092,1098,1246,1292],jax_concat:1246,jnp:1246,join:[40,41,995,1011,1077,1146],journal:1246,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1246,1263,1272,1292],kaimingnorm:[1254,1258],kalman:1292,kalman_filt:1292,kalman_filter_step:1292,kalman_filter_upd:1292,keep:[40,41,921,966,995,1087,1146,1246,1247,1292],keep_inner_v:[1142,1143,1144],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1142,1143,1144],keepdim:[40,41,441,473,484,485,866,868,876,877,878,995,1087,1115,1118,1209,1211,1212,1213,1214,1215,1216,1217],kei:[15,16,17,40,41,42,43,880,885,921,933,995,1013,1142,1143,1144,1146,1190,1193,1197,1227,1238,1239,1246,1252,1253,1263,1274,1279,1283],kept:[40,41,42,1142,1143,1144],kera:1292,kernel:[1227,1237],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,921,930,931,943,947,953,995,999,1020,1021,1022,1050,1146,1190,1194,1275,1276],keyword_color_dict:[40,41,42],kind:[847,848,849,1292],kwarg:[15,16,17,40,41,42,59,63,921,930,943,947,953,995,1050,1146,1252,1253,1275,1276],kwarg_stateful_idx:[1275,1276],kwargs_clon:1146,kwargs_dist:1146,kwargs_uni:1146,label:[43,1240,1241,1242,1243],lamb:[1092,1099,1246,1279],lamb_upd:1092,lambda:[1146,1279,1282,1284,1288],lar:[1092,1099,1100,1246,1279],larger:[847,848,995,1008],largest:[40,41,847,848,849,995,1000,1026],lars_upd:1092,last:[40,41,866,867,869,870,873,874,876,877,878,995,998,1015,1047,1073,1077,1115,1118,1121,1209,1214,1216,1219,1224,1227,1237,1263,1273],later:[40,41,995,1007],latest:[1263,1272],layer:[1092,1095,1097,1099,1101,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1244,1245,1246,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1292],layer_norm:1244,layernorm:[1246,1277],layerwis:[1092,1100,1279,1282],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1190,1191,1198],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1219,1220,1221],leaky_relu:[821,1219],learn:[1092,1095,1097,1099,1100,1101,1115,1120,1142,1143,1144,1145,1202,1208,1246,1279,1280,1281,1282,1283,1284,1289,1292],learnabl:[1244,1245,1277,1278],least:43,leav:[15,18,19,40,41,1190,1191,1192,1198,1199],left:[40,41,43,1115,1118,1209,1211,1212,1213,1214,1215,1216,1217,1246],leftmost:[40,41],len:1146,length:[40,41,42,995,998,1063,1074,1085],lenton2021ivi:1246,lenton:1246,less:[40,41,43,86,218,401,525,656,851,854,861,863,866,868,1146,1202,1206],less_util_node_str:1146,let:[1289,1292],level:1246,librari:[851,862,1246,1288,1292],lightweight:1246,like:[43,1092,1098,1202,1206,1246,1288,1289,1292],likewis:43,limit:[40,41,42,43,847,848,849,995,1008,1009,1010],linalg:[29,1116,1117,1118,1119,1120,1121,1122,1246],line:43,linear0:[1246,1288],linear1:1246,linear2:1288,linear:[995,1028,1047,1115,1219,1220,1221,1222,1227,1235,1246,1263,1264,1265,1266,1267,1268,1269,1270,1288],linear_algebra:[484,485,486,487,866,867,868],linear_resampl:[131,296,441,571,703,995],linearli:[995,1028],link:[43,1246],linspac:[131,296,441,571,703,995,998],list:[15,18,19,40,41,392,393,395,843,844,846,869,870,876,877,878,921,930,931,940,941,943,944,945,947,950,951,965,995,998,1002,1004,1053,1072,1073,1082,1087,1142,1143,1144,1146,1190,1191,1192,1194,1198,1199,1227,1228,1229,1230,1231,1232,1233,1234,1246,1247,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270],list_join:[40,41,42],list_stack:[40,41],liter:[866,868],littl:1289,load:[40,41],loaded_kwarg:1146,loader:1246,local:43,local_set:[995,1036],locat:[43,995,1046,1202,1203],log1p:[86,401,525,656,851],log2:[86,401,525,656,851],log:[791,851,860,995,1049,1126,1146,1240,1241,1242,1243],logarithm:[851,860,861,1126,1137],logic:[31,851,862,876,877,878,1124,1125,1246],logical_and:[360,788,1123],logical_not:[86,218,401,525,656,851],logical_or:[360,788,1123],logit:[1240,1243],logspac:[131,296,441,571,703,995],look:[43,1289,1292],loop:[1142,1143,1144,1145],loss:[1241,1242,1243,1246,1288],loss_fn:[1246,1288],lot:1289,low:[40,41,491,1202,1204,1206],lower:[40,41,43,843,845,995,1052,1202,1206],lower_depth:[1275,1276],lowest:[15,18,19,40,41,1190,1199,1202,1204],lstm:[1227,1237,1246,1263],lstm_updat:[43,1227],machin:[847,848,849,1115,1120,1202,1208,1246,1289,1292],made:43,mai:[851,862,873,874,995,998,1019,1023,1246,1289,1292],main:[843,845,866,867,995,1038,1246],mainli:1246,maintain:[43,873,874],make:[43,491,921,1146,1246,1289],maml:[1142,1143,1144],maml_step:1142,manag:[921,1146],manhattan:[866,868],mani:[40,41,43,995,1073,1246],manipulation_funct:[869,870],manner:[15,18,19,40,41,43,1190,1199],manual:[1190,1191,1198,1292],map:[40,41,42,921,930,995,1046,1146,1190,1195,1196,1199,1263,1274,1288],map_cont:[40,41],map_nest_at_index:1190,map_nest_at_indic:1190,map_sequ:[40,41],mapper:[921,930,931,1146],mark:43,mask:[1227,1238,1239],master:43,match:[40,41,995,1050],match_kwarg:995,math:[33,490,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1146,1246],mathbb:[1115,1122],mathbf:[1115,1122],mathemat:[842,866,868],matmul:[43,296,441,571,703,995,1292],matplotlib:1289,matric:[843,845,866,867,1227,1236],matrix:[40,41,843,845,866,867,995,997,1009,1051,1115,1116,1117,1118,1119,1120,1122,1227,1236,1263,1273],matrix_norm:[40,41,171,354,484,618,780,1115],matter:1246,max:[40,41,396,847,848,849,995,1009,1010,1021,1052,1065,1066,1146,1209,1211,1279,1281],max_batch_s:[40,41],max_chunk_s:[921,965,1146],max_depth:[40,41,921,925,928,935,943,947,953,995,1036,1146,1190,1199],max_dev_dim_step_ratio:921,max_freq:[995,1028],max_length:[40,41],max_node_dim_step_ratio:1146,max_norm:[40,41,995,1009,1010],max_split_factor_step_s:[921,1146],max_trust_ratio:[1092,1099,1279,1281],maxim:[1246,1289,1292],maximis:1246,maximum:[40,41,42,703,921,943,947,953,965,995,1000,1008,1009,1010,1028,1092,1099,1146,1190,1199,1209,1211],mayb:[15,18,19],mdi:1146,mean:[40,41,491,921,950,951,952,953,965,995,1021,1142,1143,1144,1145,1146,1190,1194,1202,1205,1209,1212,1215,1217,1254,1288,1292],measur:[1227,1238,1263,1274],mech:1246,mechan:[1246,1292],medic:1292,member:43,memori:[921,937,960,965,967,970,1146,1227,1237,1246],mention:43,merg:43,merge_with_upstream:43,meshgrid:[296,441,703,995],messag:[1290,1291],meta:[35,1143,1144,1145,1246],method:[40,41,42,43,491,995,1002,1013,1053,1065,1066,1092,1099,1100,1146,1190,1191,1198,1199,1246,1263,1274,1275,1276,1289],might:[995,1019,1292],min:[40,41,396,847,848,849,866,868,995,1021,1054,1065,1066,1075,1115,1120,1146,1209,1213],min_bas:[995,1076],min_denomin:[995,1075],min_dev_dim_s:921,min_node_dim_s:1146,min_sf_tune_step:[921,1146],min_unit_dev_tune_step:921,min_unit_node_tune_step:1146,mind:1246,mini:[1244,1245,1277,1278],minimum:[40,41,703,921,971,975,995,998,1001,1002,1008,1033,1034,1067,1068,1075,1076,1146,1209,1213],miss:[1279,1283],ml_framework:[995,998,1115,1120],mod:[995,1027],mod_depth:[1275,1276],mod_height:[1275,1276],mod_with_top_mod_key_chain:[1275,1276],mode:[40,41,484,486,919,920,921,950,951,952,953,965,1115,1120,1121,1146,1289],model:[1246,1288],modul:[40,41,42,59,995,1055,1146,1246,1247,1249,1250,1251,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1277,1278,1285,1286,1292],moment:[1092,1094,1095,1099,1279,1280,1281],more:[43,869,870,995,1077,1146,1246,1289,1292],more_util_node_str:1146,most:[40,41,43,1115,1120,1246,1292],move:[40,41,43,921,966,1146],much:[43,1246,1292],multi:[491,995,1055,1227,1238,1263,1274],multi_head_attent:1227,multi_index_nest:1190,multi_map:[40,41],multi_nod:1146,multidev:[921,932,933,934,953],multidevcontain:[40,41],multidevic:[921,930],multidevit:[921,924,927,930,931,935],multidevitem:[921,923,926],multidevnest:[921,925,928],multiheadattent:[1246,1263],multinod:[1146,1150],multinodecontain:1146,multinodeit:1146,multinodeitem:1146,multinodenest:1146,multinomi:[177,364,491,625,805,1202],multipl:[40,41,876,877,878,995,1050,1073,1115,1117,1209,1211,1212,1213,1214,1215,1217,1244,1245,1263,1273,1289],multipli:[40,41,995,1016,1209,1214],multiprocess:[40,41,42,441,703,921,930,995,1146],must:[40,41,42,43,843,844,845,846,851,852,853,854,855,856,857,859,861,862,863,864,866,867,868,869,870,873,874,876,877,878,880,899,905,921,950,951,952,953,965,995,998,1011,1013,1015,1023,1052,1054,1066,1077,1126,1131,1134,1146,1202,1207,1279,1283],mutabl:[1190,1192,1199],mutlidevic:[921,930],mutlinod:1146,mw_tm1:[1092,1095,1099],mx_concat:1246,mxn:[843,845,866,867],mxnet:[43,1246,1292],my_func:43,mymodel:1246,name:[43,919,920,1288],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1289],nan:[40,41,43,842,851,852,854,855,856,857,858,861,863,876,877,878,995,1037,1088],nativ:[15,17,18,19,40,41,43,921,937,939,948,949,960,967,970,971,976,983,984,1146,1246,1247,1252,1253],native_modul:[1252,1253],native_module_class:[1252,1253],nativearrai:[15,18,19,43,843,845,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,868,869,870,873,874,876,877,878,880,899,905,921,939,965,966,971,975,981,986,987,995,996,997,998,1000,1001,1002,1003,1004,1006,1008,1009,1010,1011,1012,1014,1015,1016,1017,1020,1021,1022,1023,1025,1026,1027,1028,1030,1031,1035,1037,1038,1039,1046,1047,1048,1049,1051,1052,1053,1054,1057,1058,1059,1062,1063,1064,1065,1066,1071,1073,1074,1077,1079,1080,1082,1083,1084,1085,1087,1088,1089,1090,1091,1146,1190,1192,1199],natur:[851,860,1126,1137,1292],ncdhw:[1227,1232,1233,1263,1268,1269],nchw:[1227,1230,1231,1234,1263,1266,1267,1270],ncw:[1227,1228,1229,1263,1264,1265],ndarrai:[43,392,393,394,395,396,398,399,491,995,1083],ndhwc:[1227,1232,1233,1263,1268,1269],nearest:[995,1064],need:[43,995,1009,1010,1227,1229,1231,1233,1246,1263,1265,1267,1269,1292],neg:[40,41,851,857,866,868,869,870,876,877,878,1209,1214,1216,1219,1221],negative_slop:1254,neither:1146,nest:[15,16,17,18,19,40,41,42,921,943,947,953,995,1002,1082,1142,1143,1144,1146,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1275,1276,1279,1280,1281,1282,1283,1284],nested_indices_wher:1190,nested_map:[1146,1190],network:[1227,1236,1246,1247,1249,1263,1275,1276,1292],neural:[1227,1246,1249,1263,1288],never:43,new_node_percent_mem:1146,new_node_util:1146,new_node_utils_kei:1146,new_std:[1244,1245,1277,1278],newli:[43,919,920,995,1006,1007],newlin:[40,41,42],newshap:[995,1006,1063],next:[847,848,1146,1275,1276,1279,1280,1281,1282,1283,1284],nhwc:[1227,1230,1231,1234,1263,1266,1267,1270],node:[40,41,1190,1191,1198],node_clon:1146,node_dist:1146,node_dist_arrai:1146,node_dist_it:1146,node_in:1146,node_mapp:1146,node_str:1146,node_to_str:1146,node_util:1146,nodedistit:1146,nodedistitem:1146,nodedistnest:1146,nodemanag:[1146,1157],nodemapp:1146,nodemappermultiproc:1146,noinspect:[43,922,972,973,974,1093,1146],non:[40,41,851,862,866,868,876,877,878,919,920,971,985,1275,1276,1279,1283,1289],none:[40,41,42,43,59,61,64,392,393,395,439,441,442,445,447,454,455,456,457,464,465,466,467,468,469,470,471,472,474,484,485,491,492,843,844,846,847,848,849,866,868,869,870,876,877,878,919,920,921,930,931,937,938,963,964,965,966,971,978,979,980,995,998,1002,1018,1019,1024,1029,1030,1031,1036,1038,1040,1041,1042,1043,1044,1048,1049,1055,1057,1058,1059,1062,1065,1066,1067,1068,1073,1074,1075,1076,1085,1086,1091,1092,1095,1097,1099,1100,1101,1107,1108,1112,1115,1118,1120,1142,1143,1144,1145,1146,1190,1191,1194,1198,1199,1202,1203,1204,1205,1206,1209,1211,1212,1213,1214,1215,1216,1217,1227,1229,1231,1233,1236,1237,1238,1239,1244,1245,1252,1253,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],norm:[40,41,866,868,995,1009,1010,1115,1118,1245,1246,1278,1279,1281],normal:[1202,1205,1244,1245,1277,1278],normalized_idx:[1244,1245],normalized_shap:[1277,1278],notat:[40,41,1209,1210],note:[43,1115,1120],noth:[40,41,1289],notimplementederror:1146,now:[40,41,43,921,966,995,996,1146,1246,1263,1274,1275,1276,1288,1289,1292],np_concat:1246,np_finfo:396,ns_tune_step:1146,num:[441,464,465,995,1048,1049],num_arrai:[40,41],num_arrays_in_memori:995,num_arrays_on_dev:921,num_band:[995,1028],num_channel:[1263,1270],num_chunk:1146,num_chunks_floor:1146,num_class:[1202,1203],num_cpu_cor:921,num_gpu:[124,439,921,1146],num_head:[1227,1238,1263,1274],num_kei:[1227,1238,1239],num_lay:[1263,1272],num_or_size_split:[40,41,441,470,995,1073],num_output:1146,num_queri:[1227,1238,1239],num_sampl:[441,463,491,492,995,1047,1108,1109,1202,1203],num_task:[1142,1143,1144,1145],number:[40,41,42,842,847,848,849,851,854,876,877,878,919,920,921,957,958,959,971,982,986,987,995,998,1008,1012,1025,1028,1035,1038,1047,1048,1049,1052,1056,1062,1073,1080,1084,1088,1090,1115,1121,1142,1143,1144,1145,1146,1202,1203,1207,1209,1211,1212,1213,1215,1217,1227,1238,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1289,1292],numer:[43,851,854,857,858,859,862,880,899,905,995,1033,1034,1067,1068,1075,1076,1126,1134,1254],numhead:[1227,1238],numpi:[40,41,43,392,393,394,395,396,398,399,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,995,1083,1115,1120,1121,1209,1210,1246,1288,1289,1292],nwc:[1227,1228,1229,1263,1264,1265],obj:[40,41],object:[40,41,42,59,396,847,848,921,971,975,995,998,1002,1092,1190,1193,1195,1196,1197,1200,1201,1202,1208,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1275,1276],object_in:[441,445,995,1002],observ:1146,obvious:43,occupi:[847,848,849,995,1065,1066],off:[866,867,995,998],offer:1246,offset:[866,867,1244,1245],often:1289,old:[40,41],on_init:[1263,1274,1275,1276],onc:[43,921,965,1146,1202,1203,1246],one:[40,41,43,866,868,869,870,921,950,951,952,953,965,971,977,995,1038,1050,1057,1065,1066,1074,1077,1115,1118,1146,1209,1210,1211,1212,1213,1214,1215,1216,1217,1246,1289,1292],one_hot:[131,441,571,703,995],onearrai:[995,1025],ones:[40,41,77,209,392,516,647,843,995,1038,1057,1059,1246],ones_lik:[131,296,441,571,703,995],ongo:43,onli:[40,41,43,491,851,862,869,870,921,1115,1120,1146,1190,1191,1192,1198,1279,1280,1281,1282,1283,1284,1288,1289],onlin:[43,1246],onto:[921,950,951,966,1146,1190,1194,1199],oom:[921,1146],open:[995,998,1202,1206,1246,1292],opencv:1289,oper:[40,41,995,1005,1020,1021,1022,1048,1049,1078,1092,1095,1097,1099,1100,1101,1123,1124,1125,1227,1228,1229,1230,1231,1232,1233,1234,1236,1246,1247],operand:[40,41,851,852,854,855,856,861,863,1209,1210],oppos:[995,1028],optim:[921,1092,1095,1097,1099,1100,1101,1142,1143,1144,1145,1146,1246,1280,1281,1282,1284,1288,1292],optimizer_upd:1092,option:[15,18,19,40,41,42,43,392,393,395,843,844,846,866,868,869,870,876,877,878,919,920,921,930,931,939,943,944,945,946,947,950,951,952,953,960,963,964,965,966,970,971,976,981,985,994,995,997,998,1000,1001,1002,1009,1010,1011,1016,1018,1019,1028,1029,1030,1031,1035,1037,1038,1045,1047,1048,1049,1050,1053,1055,1057,1058,1059,1062,1065,1066,1069,1071,1073,1074,1075,1076,1077,1085,1087,1088,1091,1092,1095,1097,1098,1099,1100,1101,1103,1108,1112,1115,1118,1120,1142,1143,1144,1145,1146,1190,1191,1192,1194,1198,1199,1202,1203,1209,1211,1212,1213,1214,1215,1216,1217,1219,1220,1224,1227,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1289],ord:[866,868,1115,1121],order:[40,41,42,43,866,868,869,870,873,874,1092,1095,1097,1099,1100,1101,1115,1118,1142,1143,1144,1285,1286],ordered_node_util_kei:1146,org:1292,organ:43,origin:[40,41,42,995,1059,1063,1091,1115,1118],other:[40,41,43,880,882,883,888,890,891,895,897,898,899,900,901,903,905,906,907,908,909,910,912,913,914,916,917,918,919,920,995,997,998,1038,1092,1096,1202,1206,1246,1288,1289,1292],other_i:[43,880,899,905],otherwis:[15,16,17,18,19,40,41,851,857,858,866,868,876,877,878,921,938,971,978,979,980,995,1005,1085,1086,1089,1092,1098,1103,1107,1142,1143,1144,1146,1209,1211,1212,1213,1215,1217],our:[43,1246,1292],out:[43,491,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,866,867,868,869,870,873,874,876,877,878,880,899,995,998,1126,1130,1227,1235,1237,1246,1263,1271],out_feat_dim:[1227,1238],out_featur:[1227,1235,1236],out_i:[851,857,858],outdat:1292,outer:[1142,1143,1144,1145],outer_batch_fn:[1142,1143,1144],outer_batch_shap:[1227,1236],outer_cost_fn:[1142,1143,1144],outer_v:[1142,1143,1144],outlin:1289,output:[40,41,43,843,844,846,869,870,921,930,931,965,995,998,1007,1029,1038,1062,1080,1092,1096,1126,1131,1146,1202,1204,1205,1206,1227,1229,1231,1233,1235,1237,1238,1239,1246,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274],output_ax:[921,965,1146],output_axi:1146,output_channel:[1263,1264,1265,1266,1267,1268,1269,1272,1273],output_queu:1146,output_shap:[1227,1229,1231,1233,1263,1265,1267,1269],outsid:[995,1008],over:[40,41,866,868,876,877,878,1115,1118,1202,1206,1209,1211,1212,1213,1215,1217,1244,1245,1277,1278],overal:1289,overflow:[995,998],overhead:1289,overrid:[995,1057,1059,1091],overriden:[1279,1283],overwrit:[40,41,921,965,1146],overwrite_at_key_chain:[40,41],own:[1246,1289,1292],packag:[43,1289],pad:[995,1012,1028,1090,1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270],pad_width:[441,995,1012,1090],page:1246,pair:[1227,1239],parallel:[921,930,931,1146],parallelis:[921,930,931,1146],param:[40,41,42,441,455,456,921,965,995,996,1030,1031,1057,1058,1146,1275,1276,1288],paramet:[15,16,17,18,19,40,41,42,43,851,864,866,867,880,899,905,919,920,921,930,931,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,960,963,964,965,966,967,970,971,975,976,977,981,982,983,984,985,986,987,994,995,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1035,1037,1038,1039,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1058,1059,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1103,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288],parameter:[1202,1205,1206],pardo:1246,pars:[995,1013],part:[843,845,1092,1095,1097,1099,1100,1101,1126,1130,1246,1275,1276,1289],partial:[40,41,43,1275,1276],particl:1292,particular:[43,1292],pass:[40,41,42,43,921,930,965,971,976,995,1007,1092,1106,1142,1143,1144,1146,1252,1253,1275,1276,1279,1283,1285,1286],pattern:[40,41,995,1020,1021,1022],peopl:43,per:[921,1146,1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270],percent_used_mem_on_dev:921,percent_used_mem_on_nod:1146,percentag:[921,960,1146],perf_count:1146,perform:[40,41,43,876,877,878,921,995,1000,1001,1016,1020,1021,1022,1041,1042,1043,1047,1048,1049,1092,1095,1097,1099,1100,1101,1108,1109,1142,1143,1144,1145,1146,1190,1195,1196,1209,1211,1212,1213,1214,1215,1216,1217,1219,1224,1227,1235,1237],period:43,permissable_step:1146,permit:43,permut:[491,995,1079,1085],perpendicular:[995,1015],person:[43,1246],physci:1292,pickl:[40,41,1146],pickle_filepath:[40,41],pinv:[354,780,1115],pip:1246,pipelin:1288,pkk:1292,pkkm1:1292,pkm1km1:1292,place:[40,41,43,843,844,846,921,966,995,1025,1029,1041,1042,1043,1146,1279,1280,1281,1282,1283,1284],placehold:[43,1190,1199],pleas:[43,491,1115,1120],point:[43,842,843,844,846,847,848,851,852,854,855,856,861,863,864,866,868,971,986,995,998,1126,1134],popul:[40,41,1202,1203],popular:1292,population_s:[491,492,1202,1203],portabl:[1246,1247],posit:[15,16,17,847,848,851,857,876,877,878,921,943,947,953,995,996,998,1025,1028,1146,1202,1207,1252,1253],possibi:[40,41],possibl:[43,995,1050,1082,1108,1113,1292],post:[1244,1245],post_shap:[40,41],power:[43,880,905,911,995,1033,1067,1076,1254],practic:1246,pre:[921,1146,1246],pre_shap:[40,41],precis:[847,848,851,863],pred:[1240,1241,1242,1243],predict:[1240,1241,1242,1243,1292],preprint:1246,present:[40,41],preserv:[40,41,42,869,870,1092,1103],preserve_typ:[40,41,475,478,1092,1103],press:1246,prevent:[43,1092,1094,1095,1099,1146,1279,1280,1281],prevet:43,previou:[1092,1095,1099],previous:[995,1007],prime:1246,print:[40,41,42,921,961,995,1060,1246,1288],print_all_arrays_in_memori:995,print_all_arrays_on_dev:921,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1279,1283],prob:[491,492,1202,1203,1227,1235,1263,1271],probabl:[1202,1203,1227,1235,1263,1271],problem:[43,1292],process:[43,921,930,931,960,970,995,1055,1146],process_specif:[921,960,970,1146],prod:[40,41,995,1021],produc:[921,930,931,1146],product:[40,41,995,1015,1016,1051,1209,1210,1227,1238,1239,1263,1274],profil:[124,290,439,564,695,921,1146],progress:43,project:[1246,1288,1289,1292],promot:[43,851,852,853,855,856,861,863,866,868,880,905,1126,1134],prompt:1246,properli:43,properti:[40,41,396,921,933,1146,1275,1276,1279,1280,1281,1282,1284],provid:[40,41,43,869,870,876,877,878,919,920,921,938,971,978,979,980,985,994,995,1019,1057,1059,1066,1091,1092,1095,1097,1099,1100,1101,1107,1146,1246,1263,1272,1279,1280,1281,1282,1283,1284,1289],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1115,1119],pull:[1246,1247],pure:[40,41,1246,1292],purpos:[43,1292],put:1146,pybroadexcept:1146,pyprotectedmemb:1146,pyshadowingbuiltin:43,pyshadowingnam:[922,972,973,974,1093,1146],python:[40,41,921,960,970,995,998,1146,1246],pytorch:[1092,1095,1097,1099,1100,1101,1115,1120,1246,1279,1280,1281,1282,1283,1284,1288,1289,1292],pyunresolvedrefer:1146,quadrant:[1126,1131],qualiti:43,queri:[40,41,880,894,915,921,954,964,1146,1227,1238,1239,1263,1274],query_dim:[1263,1274],query_kei:[40,41],queue:[40,41,42,921,930,931,995,1061,1069,1146],queue_class:[921,930,931,1146],queue_load_s:[40,41,42],queue_timeout:[40,41,42,995,1146],quick:[491,1246],quickli:[43,1288],radian:[851,855,1126,1127,1129,1131,1138,1140],rai:[1126,1127],rais:[40,41,43,876,877,878,880,905,995,1005,1033,1067,1074,1076,1086,1146,1275,1276,1279,1283],ram:[921,960,967,970,1146],randint:[177,364,491,625,805,1202],random:[37,40,41,492,1203,1204,1205,1206,1207,1208,1246],random_crop:1108,random_norm:[177,364,491,625,805,1202],random_uniform:[177,364,491,625,805,1202],randomli:[491,1108,1112,1227,1235,1263,1271],rang:[491,995,998,1048,1049,1126,1131,1146,1246,1288,1292],rank:[866,868,876,877,878,995,1012,1087,1090],rate:[1092,1095,1097,1099,1100,1101,1142,1143,1144,1145,1263,1274,1279,1280,1281,1282,1283,1284],rather:[40,41,43,921,965,995,998,1045,1092,1098,1146],ratio:[921,1092,1099,1108,1113,1146,1279,1281],raw:[40,41,1115,1120],raw_delta:1146,reach:[43,921,943,947,953,1146,1190,1199],read:[40,41],readi:[1146,1288],real:[1126,1127,1130],realiti:1289,rearrang:[40,41,995,1020,1022],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1142,1144],receiv:[43,921,930,931,995,999,1050,1146,1263,1273],receivess:[921,1146],receivng:[1142,1145],recev:[1142,1143,1144],recognit:1292,recommend:[851,862,1246],rectifi:[1219,1221,1222],recurr:[1227,1237],recurrent_bia:[1227,1237],recurrent_kernel:[1227,1237],recurs:[40,41,1190,1191,1192,1198,1199],redefin:43,reduc:[40,41,876,877,878,921,965,995,1021,1115,1120,1146,1209,1211,1212,1213,1214,1215,1216,1217],reduce_max:[40,41,184,369,493,630,812,1209],reduce_mean:[40,41,184,369,493,630,812,1209,1246,1288],reduce_min:[40,41,184,369,493,630,812,1209],reduce_prod:[40,41,184,369,493,630,812,1209],reduce_std:[40,41,369,1209],reduce_sum:[40,41,184,369,493,630,812,1146,1209],reduce_var:[40,41,184,369,493,630,812,1209],reduct:[39,40,41,441,468,469,876,877,878,995,1021,1065,1066,1210,1211,1212,1213,1214,1215,1216,1217,1246],refactor:43,refer:[43,851,860,876,877,878,1092,1094,1095,1115,1122,1263,1273,1292],reflect:43,reflected_oper:[0,13,14],regard:[921,1146],regardless:[40,41,919,920],register_paramet:1288,reimplement:1292,rel:[866,867,869,870,873,874,1092,1095,1097,1099,1100,1101],rel_slice_obj:1146,relat:43,relev:[1279,1280,1281,1282,1283,1284],relu:[821,1219,1220,1221,1246,1288],remain:[43,995,1063,1190,1194],remaind:[40,41,995,1027,1073],remov:[40,41,43,866,867,995,1074,1142,1143,1144],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,869,870],rep:[995,1080],repeat:[40,41,43,296,703,995,1022,1080,1146,1289],repeated_config_check:[921,1146],repeatedli:[1190,1197],repetit:[40,41,995,1062,1080],replac:[40,41,43,491,492,995,1008,1065,1066,1202,1203],repo:[43,1246],repositori:43,repres:[43,851,852,856,864,971,977,982,1227,1236],represent:[40,41,42,43,842,847,848,849,851,853,921,948,949,971,977,983,984,995,1072,1082,1146],reptil:[1142,1145],reptile_step:1142,request:[1246,1247],requir:[43,851,863,919,920,971,975,995,998,1002,1252,1253],resampl:[995,1047],reserv:43,reshap:[40,41,43,491,703,995],reshape_lik:[40,41],respect:[851,853,859,880,899,995,1023,1092,1094,1095,1096,1097,1099,1100,1101,1115,1120,1126,1134,1142,1143,1144,1145],respond:43,respons:[43,1146],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,851,852,853,854,855,856,857,858,859,860,861,862,863,866,867,868,876,877,878,880,899,905,921,930,995,998,1023,1065,1066,1077,1115,1118,1123,1124,1125,1126,1134,1146,1209,1211,1212,1213,1214,1215,1216,1217,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1246],ret:1146,ret_dict:1146,ret_fn:[921,930,931,1146],retain:[1092,1096],retain_grad:[475,476,1092,1096],retreiv:1146,retrn:[995,1072],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1142,1143,1144,1145],return_sequ:[1263,1272],return_st:[1263,1272],rev:[995,1019],revers:[40,41,869,870,995,1019,1085],review:43,right:[40,41,43],rk_e:1292,robot:1246,ronald:1246,root:[43,851,863],round:[296,441,703,851,854,863,995,998,1146],row:[995,1038,1202,1203],rule:[43,880,905,995,998,1126,1134],run:[43,921,930,1092,1094,1095,1099,1142,1143,1144,1145,1146,1246,1247,1263,1274,1275,1276],safe:[921,930,1146],safety_factor:[921,1146],same:[15,16,17,40,41,43,843,845,851,854,866,867,869,870,873,874,921,930,931,965,966,971,975,995,996,1011,1026,1027,1030,1031,1057,1059,1064,1065,1066,1077,1091,1092,1098,1103,1115,1121,1126,1130,1142,1143,1144,1146,1209,1210,1227,1228,1229,1230,1231,1232,1233,1234,1246,1263,1264,1265,1266,1267,1268,1269,1270,1288,1292],same_arrai:[40,41],sampl:[995,1047,1108,1109,1202,1203,1205,1206,1227,1235,1246,1263,1271],satisfi:[995,1002,1115,1117,1122],save:[40,41,995,1070,1081,1108,1110,1275,1276],save_dir:[439,440,921,936,1146],save_weight:[1275,1276],scalar:[866,868,995,1008,1057,1084,1088],scale:[921,963,964,1092,1100,1146,1227,1235,1238,1239,1244,1245,1263,1271,1274,1279,1282],scaled_dot_product_attent:1227,scatter:[995,1057,1065,1066],scatter_flat:[131,296,441,571,703,995],scatter_nd:[131,296,441,571,703,995],scene:[1092,1095,1097,1099,1100,1101],schemat:1246,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,851,853,859,866,867,921,952,995,1003,1015,1023,1061,1069,1079,1092,1094,1095,1099,1142,1144,1146,1279,1280,1281],secondli:1292,sector:[851,852],see:[43,59,396,439,440,491,851,853,859,866,868,876,877,878,880,899,905,921,933,934,935,936,971,995,998,1048,1049,1092,1126,1134,1246,1254,1256,1257,1259,1260,1262],seed:[40,41,177,491,805,1202],seed_valu:[40,41,491,1202,1207],seem:1246,seen_set:[995,1036],select:[995,1002,1074,1289,1292],self:[40,41,43,59,396,439,440,880,899,905,921,933,934,935,936,971,1092,1146,1246,1254,1256,1257,1259,1260,1262,1279,1283,1288,1292],self_i:[880,899],sent:1146,seper:[43,995,1028],seq:[40,41,42,1209,1210,1275,1276],sequenc:[15,16,17,40,41,42,43,491,919,920,921,930,931,940,941,942,943,944,945,946,947,950,951,965,971,975,995,998,1002,1004,1006,1011,1012,1038,1050,1053,1058,1062,1063,1066,1073,1077,1080,1085,1090,1092,1096,1108,1112,1113,1115,1118,1146,1190,1201,1202,1204,1206,1209,1211,1212,1213,1214,1215,1216,1217,1227,1228,1229,1230,1231,1232,1233,1234,1244,1245,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1272,1275,1276,1277,1278,1279,1283,1285,1286],sequenti:1246,seri:43,set:[15,18,19,40,41,873,874,921,950,951,963,964,965,995,997,1018,1038,1067,1068,1069,1070,1092,1095,1097,1098,1099,1100,1101,1115,1118,1146,1190,1191,1198,1200,1201,1202,1203,1207,1209,1211,1212,1213,1214,1215,1216,1217,1246,1263,1272,1279,1280,1281,1282,1283,1284,1289,1292],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:921,set_default_dtyp:971,set_default_float_dtyp:971,set_default_int_dtyp:971,set_default_nod:1146,set_exception_debug_mod:44,set_framework:[40,41,43,59,1146,1246,1288,1289,1292],set_ivy_backend:[40,41],set_min_bas:995,set_min_denomin:995,set_nest_at_index:1190,set_nest_at_indic:1190,set_queue_timeout:995,set_split_factor:[921,1146],set_stat:[1279,1280,1281,1282,1283,1284],set_tmp_dir:995,set_with_grad:1092,setter:1146,sever:1292,sgd:[1246,1279],shape0:1146,shape:[40,41,43,392,393,395,441,454,469,491,703,843,844,845,846,866,867,869,870,873,874,921,933,971,975,995,996,1006,1011,1012,1025,1026,1027,1029,1031,1035,1038,1057,1058,1059,1062,1063,1064,1065,1066,1072,1074,1077,1090,1091,1108,1112,1115,1117,1120,1126,1130,1131,1146,1202,1204,1205,1206,1209,1210,1227,1229,1231,1233,1263,1265,1266,1267,1268,1269,1270,1277,1278],shape_slic:[40,41],shape_to_tupl:995,share:[40,41,1246,1289],shift:1146,should:[40,41,42,43,491,843,845,851,852,853,854,855,856,857,858,859,861,862,863,864,866,867,868,880,899,905,919,920,921,995,1006,1007,1013,1057,1063,1092,1095,1097,1099,1100,1101,1126,1134,1146,1209,1210,1246],show:[40,41,1246,1292],show_mod_in_top_mod:[1275,1276],show_structur:[1275,1276],show_sub_contain:[40,41],show_v:[1275,1276],show_v_in_top_v:[1275,1276],shown:[40,41],shp:1146,shuffl:[40,41,177,491,805,1202],shuffle_h5_fil:[40,41],side:43,sigmoid:[821,1219,1246,1288],signatur:[43,59,396,439,440,441,475,480,484,488,489,491,921,933,934,935,936,971,1092,1254,1256,1257,1259,1260,1262],signific:1292,similar:[43,1227,1238,1263,1274],similarli:[1115,1120],simpl:[43,995,1024,1246,1289,1292],simpler:43,simplest:1289,simpli:[40,41,43,1246,1289,1292],simultan:1246,sin:[791,995,1028,1126,1140,1289],sinco:1289,sine:[851,852,1126,1129,1138,1139],singl:[40,41,919,920,921,930,931,950,951,952,953,995,1074,1084,1088,1108,1113,1146,1202,1205,1206,1209,1211,1212,1213,1214,1215,1216,1217,1246,1289,1292],singleton:[866,868,876,877,878],singular:[1115,1121],sinh:[791,1126],siren:[1246,1254],situat:43,size:[40,41,42,441,468,866,867,876,877,878,921,944,945,946,947,963,964,965,995,998,1006,1048,1049,1065,1073,1108,1112,1115,1118,1121,1146,1202,1203,1205,1206,1209,1211,1212,1213,1214,1215,1216,1217,1263,1264,1265],size_ordered_arrai:[40,41],skew:[1115,1122],skinv:1292,skip:[40,41],slice:[40,41,995,1030,1031,1146,1190,1197],slice_kei:[40,41],slice_obj:[40,41,1146],slice_via_kei:[40,41],slide:[1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270],slope:[1219,1221],small:[1240,1241,1242,1243,1244,1245,1246,1277,1278,1289],smaller:[995,1008],smallest:[40,41,847,848,849,851,854,995,1001],smallest_norm:[396,847,848],softmax:[193,502,821,1219,1227,1238,1239],softplu:[821,1219],solut:43,solv:1292,some:[40,41,43,995,998,1092,1094,1095,1097,1099,1100,1101,1106,1227,1235,1246,1263,1271,1289,1292],some_backend:43,some_namespac:43,someth:[43,1292],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,874,1115,1121,1146],sort_by_kei:[40,41],sorting_funct:[873,874],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,868,869,870,873,874,876,877,878,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,923,924,925,926,927,928,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1249,1250,1251,1252,1253,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1290,1291,1292],space:[995,998,1028,1048,1049],spars:[1240,1243],sparse_cross_entropi:1240,spawn:[995,1055],special:[43,851,852,854,855,856,861,863],specif:[40,41,43,851,862,921,963,995,1013,1020,1021,1022,1055,1142,1143,1144,1145,1146,1202,1208,1246,1275,1276,1288,1289],specifc:[1202,1203],specifi:[40,41,43,843,844,845,846,866,867,868,869,870,873,874,876,877,878,921,940,941,942,943,944,945,946,947,950,951,955,957,961,964,965,966,971,975,977,995,998,1000,1001,1002,1008,1011,1012,1029,1030,1031,1037,1048,1049,1077,1087,1090,1115,1118,1146,1190,1195,1196,1200,1201,1209,1210,1211,1212,1213,1214,1215,1216,1217],sphinx:43,split:[40,41,131,296,441,571,703,921,930,944,945,946,947,963,964,965,995,1050,1146],split_arg:1146,split_factor:[921,930,1146],split_func_cal:[921,1146],split_siz:1146,spread:[921,953,1146],sqrt:[86,218,401,525,656,851,866,868],squar:[851,863,995,1038,1115,1117],squeez:[131,296,441,571,703,995],stabil:[873,874,995,1075,1076],stabl:[873,874,995,1033,1034,1067,1068,1075,1076],stable_divid:995,stable_pow:995,stack:[40,41,296,703,843,845,866,867,995,1108,1113,1190,1191,1198,1263,1272],stack_imag:[167,350,480,614,776,1108],stacked_dim_s:1146,stage:43,standard:[40,41,847,848,1202,1205,1209,1215,1244,1245,1246,1247,1277,1278],start:[40,41,43,439,440,441,442,464,465,491,921,936,995,998,1048,1049,1146,1246,1289],starting_index:[40,41],starting_split_factor:[921,1146],state:[1146,1227,1237,1246,1249,1250,1251,1252,1253,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288],statement:1289,static_argnam:[441,447,919,920],static_argnum:[441,447,919,920],std:[491,1202,1205],step:[40,41,441,442,921,995,998,1048,1049,1092,1094,1095,1097,1099,1100,1101,1142,1143,1144,1145,1146,1246,1279,1280,1281,1282,1283,1284,1288,1292],stephen:1246,stick:1246,still:[40,41,43],stochast:[1279,1284],stop:[40,41,439,440,441,442,464,465,921,936,965,995,998,1048,1049,1092,1095,1097,1099,1100,1101,1103,1142,1143,1144,1145,1146,1279,1280,1281,1282,1283,1284],stop_gradi:[40,41,345,475,609,770,921,965,1092,1095,1097,1099,1100,1101,1142,1143,1144,1145,1146,1279,1280,1281,1282,1283,1284],stopiter:1146,store:[40,41,995,1028,1073,1092,1106,1275,1276],store_var:[1275,1276],str:[15,16,17,40,41,42,43,392,393,395,396,398,399,847,848,849,919,920,921,930,931,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,965,971,976,977,982,983,984,985,986,987,994,995,1002,1018,1020,1021,1022,1053,1055,1058,1065,1066,1115,1118,1120,1142,1143,1144,1145,1146,1190,1194,1209,1210,1252,1253,1263,1274,1275,1276],str_to_nod:1146,straight:1289,strength:[1246,1292],stride:[1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270],string:[40,41,43,921,937,939,948,949,954,960,966,967,970,971,975,981,983,984,985,994,995,998,1002,1018,1038,1058,1059,1091,1146,1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270,1275,1276],structur:[40,41,42,43,995,1013],structural_diff:[40,41],style:43,sub:[40,41,43,866,867,921,944,945,950,951,952,953,995,1073,1142,1143,1144,1145,1146],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1146,sub_mod:[1275,1276],sub_modul:[1285,1286],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1246,1247,1277,1278,1285,1286],subsequ:43,subset:43,substr:[40,41],suffici:[1115,1120],suggest:1246,suitabl:[1108,1113],sum:[40,41,441,468,469,866,868,921,950,951,952,953,965,995,1017,1021,1065,1066,1146,1209,1210,1216],summat:[40,41,1209,1210],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,105,109,112,113,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,178,179,180,181,182,183,185,186,187,188,189,190,191,194,196,197,199,200,201,202,203,204,205,210,211,212,214,215,216,219,220,221,222,223,224,225,226,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,414,417,418,420,424,427,428,440,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,481,482,483,485,486,487,490,492,494,495,496,497,498,499,500,503,504,506,507,508,509,510,511,512,517,518,519,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,538,541,542,544,548,551,552,560,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,610,611,612,613,615,616,617,619,620,621,622,626,627,628,629,631,632,633,634,635,636,637,641,642,643,648,649,650,652,653,654,657,658,659,660,661,662,663,664,665,666,667,668,669,672,673,675,679,682,683,691,696,697,698,699,700,701,702,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,771,772,773,774,775,777,778,779,781,782,783,784,785,786,787,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,806,807,808,809,810,811,813,814,815,816,817,818,819,822,823,824,825,826,827,828,830,831,833,834,835,836,837,838,839,844,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,867,868,870,874,877,878,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1241,1242,1243,1245,1246,1250,1251,1253,1255,1256,1257,1258,1259,1260,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1291,1292],supports_inplac:995,suppos:1292,sure:43,svd:[354,618,780,1115],swap:[40,41,995,1079],swapax:[40,41,571,703,995,1292],symmetr:[1115,1122],syntax:[439,441,475,480,484,488,489,491],tab:1246,take:[43,995,1047],taken:[43,866,867,1209,1211,1212,1213,1215,1217],tan:[791,1126,1130],tangent:[851,864,1126,1130,1131,1132,1140,1141,1219,1226],tanh:[86,218,401,525,656,821,851,1126,1219],target:[40,41,921,937,940,941,942,943,944,945,946,947,950,951,952,953,966,1146,1246],target_dict:[40,41],task:[43,1142,1143,1144,1145],team:[43,1292],templat:1246,temporari:[995,1070,1081],tensor:[40,41,43,441,468,469,921,939,971,981,995,998,1000,1001,1006,1048,1049,1052,1054,1057,1058,1059,1063,1065,1066,1073,1091,1146,1202,1203,1204,1227,1235,1237,1246,1263,1271,1273,1279,1280,1281,1282,1283,1284,1288,1289],tensorflow:[43,1115,1120,1227,1229,1231,1233,1246,1263,1265,1267,1269,1289,1292],term:[40,41,43,1227,1237,1246,1263,1273],termcolor:[40,41,42],termin:[40,41,42,1146],test:[43,851,857,858,876,877,878,971,986,987],test_array_api:43,tf_concat:1246,than:[40,41,43,847,848,851,854,861,863,866,868,869,870,921,965,995,998,1008,1026,1045,1052,1074,1077,1092,1098,1146,1202,1206,1246,1289],thei:[40,41,43,1126,1131,1142,1143,1144,1202,1203,1246,1285,1286,1289],them:[1246,1292],themselv:[1190,1191],therefor:43,thi:[40,41,42,43,851,862,921,943,947,953,960,965,970,995,998,1028,1061,1063,1069,1092,1095,1097,1098,1099,1100,1101,1106,1115,1118,1146,1190,1194,1199,1209,1211,1212,1213,1214,1215,1216,1217,1227,1236,1246,1275,1276,1279,1280,1281,1282,1283,1284,1288,1289,1292],thing:[43,1246],those:[40,41,43,995,1008,1092,1106,1115,1121,1146],though:43,thought:43,threshold:[995,1052,1054],through:[40,41,43],tick:43,tickbox:43,tile:[296,571,703,995],time:[43,995,1080,1092,1095,1099,1142,1143,1144,1145,1146,1202,1203,1227,1237,1263,1274,1275,1276,1292],timeout:[40,41,42,921,930,931,995,1061,1069,1146],timestep:[1227,1237,1263,1272],titl:[43,1246],tmp_dir:995,tmp_dr:[995,1070],to_appli:[40,41],to_clon:[921,1146],to_dev:[40,41,124,290,439,564,695,921],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[921,1146],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1246],to_ivy_modul:[195,829,1246,1252],to_json:[40,41],to_kv_fn:[1227,1238],to_kv_v:[1227,1238],to_list:[40,41,441,703,995],to_multi_dev:[40,41],to_mut:[1190,1192,1199],to_n:[15,40,41,1246],to_nod:1146,to_numpi:[40,41,441,703,995,1246,1288],to_out_fn:[1227,1238],to_out_v:[1227,1238],to_q_fn:[1227,1238],to_q_v:[1227,1238],to_raw:[40,41],to_scalar:[441,703,995],todo:[1146,1246,1247],togeth:[40,41,1285,1286],tool:[1246,1289],top_mod:[1275,1276],topic:1292,torch:[43,919,920,1246,1288,1289,1292],torch_concat:1246,torchfcmodel:1288,total:[40,41,42,921,967,1146],total_mem_on_dev:921,total_mem_on_nod:1146,tpu:[921,968,1146],tpu_is_avail:[439,564,695,921,1146],tpye:[971,982],trace:[40,41,995,1045],track:[43,921,1146,1190,1199,1275,1276],track_submod_call_ord:[1275,1276],track_submod_ret:[1275,1276],trail:[1277,1278],train:[1092,1094,1095,1099,1246,1247],trainabl:[1092,1098,1246,1247,1252,1253,1275,1276,1285],trainer:1246,tran:1292,transform:[1227,1235,1236],transpos:[40,41,131,296,441,703,921,952,995,1146,1227,1229,1231,1233,1263,1265,1267,1269],travers:[15,18,19,40,41,1190,1199],treat:[40,41,919,920],tri:[40,41],triangular:[843,845],trigonometr:[1126,1127,1130,1138],tril:[77,209,392,516,647,843],trim_kei:[40,41],trust:[1092,1099,1279,1281],truth:[851,859,880,899,995,1023,1123,1124,1125],try_else_non:995,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[921,1146],tune_dev_alloc:921,tune_dev_split:921,tune_node_alloc:1146,tune_node_split:1146,tune_step:[921,1146],tupl:[15,16,17,18,19,40,41,43,392,393,395,843,844,846,866,868,869,870,876,877,878,919,920,995,1012,1028,1029,1072,1090,1146,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1204,1209,1211,1212,1213,1214,1215,1216,1217],tutori:43,two:[40,41,843,845,866,867,995,998,1003,1015,1051,1079,1115,1118,1121],type:[15,18,40,41,42,43,59,398,399,439,440,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,861,862,863,864,866,867,868,869,870,873,874,876,877,878,880,899,905,921,933,934,935,936,948,949,953,965,971,975,976,977,981,982,983,984,985,986,987,994,995,996,998,1002,1011,1013,1023,1026,1027,1029,1038,1045,1057,1058,1059,1064,1078,1088,1091,1092,1098,1103,1126,1134,1146,1246,1254,1256,1257,1259,1260,1262,1275,1276,1289],types_to_iteratively_nest:[40,41,42],uint8:[1108,1110,1114],uint8_img_to_float_img:1108,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[851,853],underwai:43,unecessari:43,unfairli:43,unif:1146,unifi:[40,41,921,950,951,952,953,965,1146,1246],uniform:[40,41,1202,1203,1205,1206,1254,1256,1257,1260,1261],uniformli:[1202,1204,1206],unify_arrai:1146,unify_it:1146,unify_nest:1146,union:[15,18,19,40,41,43,392,393,395,396,398,399,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,866,868,869,870,873,874,876,877,878,880,899,905,919,920,921,939,944,945,946,947,965,966,971,975,976,977,981,982,983,984,985,986,987,994,995,996,997,998,1000,1001,1002,1003,1004,1006,1008,1009,1010,1011,1012,1014,1015,1016,1017,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1031,1035,1037,1038,1039,1046,1047,1048,1049,1051,1052,1053,1054,1057,1058,1059,1062,1063,1064,1065,1066,1071,1072,1073,1074,1077,1079,1080,1082,1083,1084,1085,1087,1088,1089,1090,1091,1146,1190,1191,1192,1198,1199],uniqu:[921,930,931,1142,1143,1144,1145,1146,1190,1194],unique_kwarg:1146,unit:[43,921,1126,1127,1129,1146,1219,1220,1221,1222],unitari:[1115,1121],unless:[995,1057,1059,1091],unlik:[921,1146],unnorm:[1202,1203],unpack:[995,1087],unrol:[1227,1237],unset:1289,unset_debug_mod:44,unset_default_devic:921,unset_default_dtyp:971,unset_default_float_dtyp:971,unset_default_int_dtyp:971,unset_framework:[59,1289],unset_with_grad:1092,unstack:[40,41,131,296,441,571,703,995],until:43,unus:[919,920],updat:[40,41,441,468,469,921,930,995,1043,1065,1066,1092,1094,1095,1097,1099,1100,1101,1142,1143,1144,1146,1190,1195,1196,1200,1201,1227,1237,1246,1247,1252,1253,1279,1280,1281,1282,1283,1284,1289,1292],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1202,1206],upper_depth:[1275,1276],upstream:43,usabl:[1246,1292],usag:[921,965,1146],use:[40,41,42,43,491,921,930,931,956,968,995,1062,1075,1076,1115,1120,1146,1227,1238,1244,1245,1246,1277,1278,1289,1292],used:[40,41,43,491,866,867,921,930,960,963,964,970,971,982,995,1033,1034,1050,1059,1065,1066,1067,1068,1091,1092,1099,1100,1115,1118,1142,1143,1144,1145,1146,1190,1199,1263,1274,1279,1281,1282,1288,1289],used_dev:[921,930],used_mem_on_dev:921,used_mem_on_nod:1146,used_node_str:1146,used_node_strs_dict:1146,useful:[40,41,921,965,1146,1227,1236,1246,1289],user:[1246,1263,1274,1275,1276,1289,1292],uses:1246,using:[40,41,43,1092,1094,1095,1190,1193,1197,1209,1210,1227,1235,1239,1246,1263,1271,1288,1289,1292],util:[921,954,1146],utility_funct:[876,877,878],v_with_top_v_key_chain:[1275,1276],val:[40,41,441,459,460,461,880,915,995,1041,1042,1043,1067,1068],valid:[876,877,878,971,976,995,1075,1076,1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270],valid_dtyp:971,valu:[40,41,441,851,854,859,866,868,873,874,880,899,921,933,964,965,995,996,998,1000,1001,1008,1009,1010,1012,1013,1019,1023,1028,1029,1030,1031,1046,1048,1049,1052,1054,1061,1062,1063,1064,1065,1066,1067,1068,1069,1085,1088,1089,1090,1092,1096,1099,1108,1114,1115,1121,1123,1124,1125,1126,1135,1136,1137,1142,1143,1144,1146,1190,1194,1195,1196,1200,1201,1202,1205,1206,1209,1211,1213,1227,1238,1239,1244,1245,1263,1274,1277,1278,1279,1281],value_is_nan:995,vanilla:[1142,1144],var_shap:1254,variabl:[15,16,17,18,19,40,41,345,475,609,770,995,1005,1041,1042,1043,1044,1045,1078,1092,1095,1096,1097,1098,1099,1100,1101,1103,1106,1142,1143,1144,1145,1227,1238,1244,1245,1252,1253,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],variable_data:[475,770,1092],varianc:[40,41,1209,1217,1292],varieti:1289,variou:[43,1246],vector:[40,41,484,487,866,868,995,1010,1015,1115,1121,1122,1227,1236,1263,1273],vector_norm:[40,41,101,228,416,540,671,866],vector_to_skew_symmetric_matrix:[171,354,484,618,780,1115],verbos:1291,veri:[43,1246],verifi:43,version:43,via:[1190,1191,1198,1289],view:[1108,1113],vision:1246,visual:1289,volum:[1227,1232],vw_tm1:[1092,1095,1099],wai:[1289,1292],wait:[40,41,42,43],want:[43,1246,1289,1292],warn:[59,66,67,68,69,70],warp:[480,481,1108,1109],watch:1288,websit:43,weight:[1092,1094,1095,1097,1099,1100,1101,1227,1236,1237,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1275,1276,1279,1281,1282],weight_initi:[1263,1264,1265,1266,1267,1268,1269,1270,1272,1273],weights_path:[1275,1276],well:[40,41,995,1037],were:[40,41,1146],what:[43,1246],when:[40,41,42,43,921,995,1007,1076,1089,1115,1121,1146,1246,1275,1276,1289,1292],where:[40,41,43,296,441,703,851,860,876,877,878,880,905,995,998,1006,1008,1012,1025,1039,1046,1057,1090,1115,1121,1190,1191,1198,1202,1203],wherea:43,wherebi:[1190,1199],whether:[15,18,19,40,41,42,851,858,876,877,878,919,920,921,939,952,956,960,965,968,970,971,981,985,986,987,994,995,997,1003,1004,1016,1019,1024,1028,1035,1037,1040,1044,1045,1050,1071,1078,1087,1088,1092,1095,1096,1097,1098,1099,1100,1101,1103,1142,1143,1144,1145,1146,1190,1191,1192,1194,1198,1199,1202,1203,1219,1220,1227,1235,1246,1252,1253,1263,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],which:[40,41,42,43,491,843,844,845,846,847,848,849,866,867,868,869,870,873,874,876,877,878,919,920,921,930,931,939,944,945,946,947,950,951,952,953,955,957,961,963,964,965,971,976,981,985,994,995,998,1002,1011,1013,1015,1016,1017,1019,1029,1030,1031,1032,1038,1039,1047,1048,1049,1056,1057,1058,1059,1060,1062,1065,1066,1073,1077,1087,1089,1091,1092,1095,1096,1097,1099,1100,1101,1103,1105,1106,1108,1110,1115,1118,1126,1131,1146,1190,1194,1195,1196,1200,1201,1202,1203,1204,1205,1206,1209,1211,1212,1213,1214,1215,1216,1217,1219,1224,1227,1238,1239,1246,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1288,1289],whilst:43,whitespac:[40,41,42],who:43,whose:[43,843,845,851,852,855,856,864,866,867,869,870,880,905,995,1002,1007,1209,1210,1211,1212,1213,1215,1217],why:[1246,1247],width:[1108,1113],wiki:1292,wikipedia:1292,window:[1108,1113,1227,1228,1229,1230,1231,1232,1233,1234,1263,1264,1265,1266,1267,1268,1269,1270],wise:[40,41,43,851,853,859,862,880,899,905,995,1008,1023,1026,1027,1052,1054,1064,1092,1095,1097,1099,1101,1123,1124,1125,1126,1127,1129,1130,1131,1134,1135,1136,1137,1138,1140,1219,1220,1221,1222,1223,1224,1225,1226],wish:1289,with_bia:[1263,1273],with_cal:[995,1019],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1092,1102],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1146,with_partial_v:[1275,1276],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,441,470,995,1073,1146],with_to_kv_fn:[1263,1274],with_to_out_fn:[1263,1274],with_to_q_fn:[1263,1274],within:[15,18,19,43,995,998,1115,1121,1202,1206],without:[40,41,43,995,1061,1063,1069,1190,1192,1289],wonder:1246,word:[15,16,17,995,998,1202,1206,1252,1253],work:[43,1288],worker:[921,930,931,1146],worker_class:[921,930,931,1146],worker_kwarg:1146,would:[43,1219,1224,1246,1289,1292],wrap:[15,40,41,42,43,439,441,475,480,484,488,489,491,995,1007,1092,1106,1246],wrapper:43,write:[40,41,43,1246,1247,1292],written:[43,1246,1292],ws_new:[1092,1095,1097,1099,1100,1101],x1_i:[851,853,859,995,1023,1126,1134],x2_i:[851,853,859,995,1023,1126,1134],x_feat_dim:[1227,1238],x_i:[851,852,854,855,856,857,858,861,862,863,864],x_in:[1246,1288],x_inv:[1115,1117],x_max:[441,995,1008],x_min:[441,995,1008],x_sub:1146,xkk:1292,xkkm1:1292,xkm1km1:1292,xs0:1146,xs_t:1146,year:[1246,1292],yet:[1190,1199,1292],yield:[995,1089],you:[43,1246,1288,1289,1292],your:[1246,1247,1288,1289,1292],your_awesome_project:1289,yourself:[43,1246],yourslef:43,youtub:43,zero:[40,41,77,209,392,516,647,843,845,851,862,866,868,876,877,878,995,1012,1057,1059,1065,1066,1090,1091,1092,1094,1095,1099,1100,1227,1235,1246,1254,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1279,1280,1281,1282],zero_pad:[296,441,571,703,995],zeros_lik:[131,296,441,571,703,995],zip:1146,zk_e:1292},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1019,"function":[77,81,86,100,104,106,107,108,110,111,209,213,218,227,231,233,234,235,237,238,392,396,401,415,419,421,422,423,425,426,516,520,525,539,543,545,546,547,549,550,647,651,656,670,674,676,677,678,680,681,843,847,851,865,869,871,872,873,875,876],Ones:1259,Using:1289,abs:[297,572,704,996],aco:[792,1127],acosh:[793,1128],activ:[193,379,502,639,821,1219,1249],adam:1280,adam_step:1094,adam_upd:1095,algebra:[101,171,228,354,416,484,540,618,671,780,866],all:[112,239,427,551,682,877],all_equ:997,all_nested_indic:1191,ani:[113,240,428,552,683,878],api:[0,43,75,115,207,242,390,430,514,554,645,685,841],arang:[132,298,442,573,705,998],arg_nam:999,argmax:[133,443,574,706,1000],argmin:[134,444,575,707,1001],args_to_ivi:16,args_to_n:17,argsort:[109,236,424,548,679,874],arithmet:[1,116,243,431,555,686],arrai:[0,3,43,75,114,115,117,135,207,241,242,244,251,299,390,429,430,432,445,514,553,554,556,576,645,684,685,687,708,841,880,1002],array_equ:[300,709,1003],arrays_equ:1004,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[794,1129],asinh:[87,402,526,657,852],assert_supports_inplac:1005,atan2:[796,1131],atan:[795,1130],atanh:[797,1132],attribut:[5,118,245,433,557,688],backend:[43,73],bilinear_resampl:[168,351,481,615,777,1109],binary_cross_entropi:1241,bitwis:[7,119,246,434,558,689],bitwise_and:[88,219,403,527,658,853],broadcast_to:[301,710,1006],builder:51,builtin:[114,241,251,429,553,684,880],builtin_ab:[252,881],builtin_add:[253,882],builtin_and:[254,883],builtin_bool:[255,884],builtin_contain:[256,885],builtin_deepcopi:[257,886],builtin_dir:[258,887],builtin_eq:[259,888],builtin_float:[260,889],builtin_floordiv:[261,890],builtin_g:[262,891],builtin_getattr:[263,892],builtin_getattribut:[264,893],builtin_getitem:[265,894],builtin_gt:[266,895],builtin_int:[267,896],builtin_invert:[268,897],builtin_l:[269,898],builtin_lt:[270,560,691,899],builtin_mul:[271,900],builtin_n:[272,901],builtin_neg:[273,902],builtin_or:[274,903],builtin_po:[275,904],builtin_pow:[276,905],builtin_radd:[277,906],builtin_rand:[278,907],builtin_rfloordiv:[279,908],builtin_rmul:[280,909],builtin_ror:[281,910],builtin_rpow:[282,911],builtin_rsub:[283,912],builtin_rtruediv:[284,913],builtin_rxor:[285,914],builtin_setitem:[286,915],builtin_sub:[287,916],builtin_truediv:[288,917],builtin_xor:[289,918],cache_fn:1007,cast:[136,302,446,577,711,975],ceil:[89,220,404,528,659,854],choleski:[781,1116],choose_random_framework:61,citat:1246,clear_framework_stack:62,clear_mem_on_dev:[697,937],clip:[303,712,1008],clip_matrix_norm:1009,clip_vector_norm:1010,clone:1161,clone_arrai:1162,clone_it:1163,clone_nest:1164,clonedit:1148,cloneditem:1147,clonednest:1149,closest_valid_dtyp:976,code:1292,comparison:[9,120,247,435,559,690],compil:[304,447,713,919,920],concaten:[137,305,448,578,714,1011],constant:[76,208,391,515,646,842],constant_pad:[306,579,715,1012],contain:[40,41],container_typ:[716,1013],content:1246,contribut:43,conv1d:[199,382,506,833,1228,1264],conv1d_transpos:[200,383,507,834,1229],conv1dtranspos:1265,conv2d:[201,384,508,641,835,1230,1266],conv2d_transpos:[202,385,509,836,1231],conv2dtranspos:1267,conv3d:[203,386,510,642,837,1232,1268],conv3d_transpos:[204,387,511,838,1233],conv3dtranspos:1269,convers:15,convert:[195,829,1252],convert_dtyp:977,copy_arrai:[717,1014],copy_nest:1192,core:[123,250,438,563,694,879],cos:[90,405,529,660,855],cosh:[91,406,530,661,798,856,1133],cprint:1291,creat:43,creation:[77,209,392,516,647,843],cross:[307,718,1015],cross_entropi:1242,cumprod:[138,308,449,719,1016],cumsum:[720,1017],current_framework:63,current_framework_str:[721,1018],data:[81,85,213,217,396,400,520,524,651,655,847,850],debug_mod:45,debugg:44,default_devic:938,default_dtyp:978,default_float_dtyp:979,default_int_dtyp:980,default_nod:1165,depthwise_conv2d:[205,388,512,643,839,1234],depthwiseconv2d:1270,design:43,dev:[126,292,566,698,939],dev_clon:940,dev_clone_arrai:941,dev_clone_it:942,dev_clone_nest:943,dev_dist:944,dev_dist_arrai:945,dev_dist_it:946,dev_dist_nest:947,dev_from_str:[127,293,567,699,948],dev_to_str:[128,294,568,700,949],dev_unifi:950,dev_unify_arrai:951,dev_unify_it:952,dev_unify_nest:953,dev_util:954,devclonedit:924,devcloneditem:923,devclonednest:925,devdistit:927,devdistitem:926,devdistnest:928,devic:[20,124,290,439,564,695,921],devmapp:930,devmappermultiproc:931,diagon:[102,229,417,541,672,867],distribute_nest:1166,divid:1134,document:1246,dropout:[1235,1271],dtype:[139,309,450,580,722,971,981],dtype_bit:[140,310,451,581,723,982],dtype_from_str:[141,311,452,582,724,983],dtype_to_str:[142,312,453,583,725,984],ecosystem:52,einops_rearrang:1020,einops_reduc:1021,einops_repeat:1022,einsum:[185,370,494,631,813,1210],elementwis:[86,218,401,525,656,851],equal:[584,726,1023],erf:[490,799,1135],execute_with_gradi:[165,346,476,610,771,1096],exist:1024,exp:[800,1136],expand_dim:[313,727,1025],finfo:[83,215,398,522,653,848],firstlayersiren:1256,flip:[105,232,420,544,675,870],float_img_to_uint8_img:1110,floor:[314,728,1026],floormod:[315,729,1027],fomaml_step:1143,fork:43,fourier_encod:1028,framework:59,full:[143,316,454,585,730,1029],func:72,gather:[144,317,455,586,731,1030],gather_nd:[145,318,456,587,732,1031],geglu:1250,gelu:[380,503,822,1220,1251],gener:[22,131,296,441,571,703,995],get_all_arrays_in_memori:1032,get_all_arrays_on_dev:955,get_framework:64,get_min_bas:1033,get_min_denomin:1034,get_num_dim:[733,1035],get_referrers_recurs:1036,glorotuniform:1257,gpu_is_avail:[956,1167],gradient:[24,164,345,475,609,770,1092],gradient_descent_upd:1097,gradient_imag:[169,352,482,616,778,1111],gym:53,handler:59,has_nan:1037,ident:[146,319,457,588,734,1038],iinfo:[84,216,399,523,654,849],imag:[26,167,350,480,614,776,1108],index_nest:1193,indices_wher:[147,320,458,735,1039],initi:1254,inplac:[11,121,248,436,561,692],inplace_arrays_support:1040,inplace_decr:[148,321,459,589,736,1041],inplace_incr:[149,322,460,590,737,1042],inplace_upd:[150,323,461,591,738,1043],inplace_variables_support:1044,inv:[782,1117],invalid_dtyp:985,is_arrai:[151,324,462,592,739,1045],is_float_dtyp:986,is_int_dtyp:987,is_vari:[166,347,477,611,772,1098],isfinit:[92,221,407,531,662,857],isinf:[325,593,740,1046],isnan:[93,222,408,532,663,858],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,840,1288,1289,1292],ivymodul:[196,830],jax:74,keep:43,lamb:1281,lamb_upd:1099,lar:1282,lars_upd:1100,layer:[198,381,505,640,832,1227,1263],layer_norm:1245,layernorm:1278,leaky_relu:[823,1221],less:[94,223,409,533,664,859],linalg:[28,1115],linear:[101,171,228,354,416,484,540,618,671,780,866,1236,1273],linear_resampl:[152,326,463,594,741,1047],linspac:[153,327,464,595,742,1048],list:43,log1p:[95,410,534,665,860],log2:[96,411,535,666,861],log:[801,1137],logic:[30,175,360,488,623,788,1123],logical_and:[361,789,1124],logical_not:[97,224,412,536,667,862],logical_or:[362,790,1125],logspac:[154,328,465,596,743,1049],loss:1240,lstm:1272,lstm_updat:1237,maml_step:1144,manipul:[104,231,419,543,674,869],map:1194,map_nest_at_index:1195,map_nest_at_indic:1196,match_kwarg:1050,math:[32,176,363,489,624,791,1126],matmul:[329,597,744,1051],matrix_norm:[172,355,485,619,783,1118],maximum:[745,1052],mech:54,memori:55,meshgrid:[330,746,1053],meta:[34,1142],method:[100,227,415,539,670,865],minimum:[747,1054],model:56,modul:[1275,1276,1288],multi:1146,multi_head_attent:1238,multi_index_nest:1197,multidevcontain:42,multidevit:934,multidevitem:933,multidevnest:935,multiheadattent:1274,multinodeit:1152,multinodeitem:1151,multinodenest:1153,multinomi:[178,365,492,626,806,1203],multiprocess:[748,1055],mxnet:206,nativ:1288,nest:1190,nested_indices_wher:1198,nested_map:1199,network:1288,next:1246,node:[1146,1168],node_dist:1169,node_dist_arrai:1170,node_dist_it:1171,node_str:1172,node_to_str:1173,node_util:1174,nodedistit:1155,nodedistitem:1154,nodedistnest:1156,nodemapp:1158,nodemappermultiproc:1159,norm:[1244,1277],num_arrays_in_memori:1056,num_arrays_on_dev:957,num_cpu_cor:958,num_gpu:[129,959,1175],numpi:389,nutshel:1246,one_hot:[155,466,598,749,1057],ones:[78,210,393,517,648,844,1058],ones_lik:[156,331,467,599,750,1059],oper:[1,3,7,9,11,13,43,116,117,119,120,121,122,243,244,246,247,248,249,431,432,434,435,436,437,555,556,558,559,561,562,686,687,689,690,692,693],optim:[1279,1283],optimizer_upd:1101,overview:1246,percent_used_mem_on_dev:960,percent_used_mem_on_nod:1176,pinv:[356,784,1119],portabl:1292,print_all_arrays_in_memori:1060,print_all_arrays_on_dev:961,profil:[125,291,440,565,696,936,1160],pull:43,queue_timeout:1061,randint:[179,366,627,807,1204],random:[36,177,364,491,625,805,1202],random_crop:1112,random_norm:[180,367,628,808,1205],random_uniform:[181,368,629,809,1206],reduce_max:[186,371,495,632,814,1211],reduce_mean:[187,372,496,633,815,1212],reduce_min:[188,373,497,634,816,1213],reduce_prod:[189,374,498,635,817,1214],reduce_std:[375,1215],reduce_sum:[190,376,499,636,818,1216],reduce_var:[191,377,500,637,819,1217],reduct:[38,184,369,493,630,812,1209],reflect:[13,122,249,437,562,693],relu:[824,1222],repeat:[332,751,1062],reptile_step:1145,request:43,reshap:[752,1063],robot:57,round:[333,753,1064],run:1289,scaled_dot_product_attent:1239,scatter_flat:[157,334,468,600,754,1065],scatter_nd:[158,335,469,601,755,1066],search:[106,233,421,545,676,871],seed:[182,810,1207],sequenti:[1285,1286],set:[107,234,422,546,677,872],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:962,set_default_dtyp:988,set_default_float_dtyp:989,set_default_int_dtyp:990,set_default_nod:1177,set_exception_debug_mod:48,set_framework:65,set_min_bas:1067,set_min_denomin:1068,set_nest_at_index:1200,set_nest_at_indic:1201,set_queue_timeout:1069,set_split_factor:[963,1178],set_tmp_dir:1070,set_with_grad:1102,sgd:1284,shape:[756,1071],shape_to_tupl:1072,shuffl:[183,811,1208],sigmoid:[825,1223],signatur:[100,227,415,539,670,865],sin:[802,1138],sinh:[803,1139],siren:1260,softmax:[194,504,826,1224],softplu:[827,1225],sort:[108,235,423,547,678,873],sparse_cross_entropi:1243,split:[159,336,470,602,757,1073],split_factor:[964,1179],split_func_cal:[965,1180],sqrt:[98,225,413,537,668,863],squeez:[160,337,471,603,758,1074],stable_divid:1075,stable_pow:1076,stack:[338,759,1077],stack_imag:[170,353,483,617,779,1113],standard:43,statist:[110,237,425,549,680,875],stop_gradi:[348,478,612,773,1103],str_to_nod:1181,submodul:43,supports_inplac:1078,svd:[358,621,786,1121],swapax:[604,760,1079],tan:[804,1140],tanh:[99,226,414,538,669,828,864,1141,1226],tensorflow:513,tile:[339,605,761,1080],tmp_dir:1081,to_dev:[130,295,569,701,966],to_ivi:18,to_ivy_modul:[197,831,1253],to_list:[762,1082],to_n:19,to_nod:1182,to_numpi:[763,1083],to_scalar:[764,1084],todo:43,torch:644,total_mem_on_dev:967,total_mem_on_nod:1183,tpu_is_avail:[570,702,968,1184],train:1288,trainabl:1288,transpos:[161,340,472,765,1085],tree:1246,tril:[79,211,394,518,649,845],try_else_non:1086,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,213,217,396,400,520,524,651,655,847,850],uint8_img_to_float_img:1114,unifi:1185,unify_arrai:1186,unify_it:1187,unify_nest:1188,unset_debug_mod:49,unset_default_devic:969,unset_default_dtyp:991,unset_default_float_dtyp:992,unset_default_int_dtyp:993,unset_framework:71,unset_with_grad:1104,unstack:[162,341,473,606,766,1087],updat:43,used_mem_on_dev:970,used_mem_on_nod:1189,util:[111,238,426,550,681,876],valid_dtyp:994,value_is_nan:1088,variabl:[349,479,613,774,1105],variable_data:[775,1106],vector_norm:[103,230,418,542,673,868],vector_to_skew_symmetric_matrix:[174,359,487,622,787,1122],verbos:1290,vision:58,where:[342,767,1089,1246],why:1292,with_grad:1107,wrapper:72,write:1289,your:43,zero:[80,212,395,519,650,846,1262],zero_pad:[343,607,768,1090],zeros_lik:[163,344,474,608,769,1091]}})