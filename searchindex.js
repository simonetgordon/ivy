Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[871,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[404,0,0,"-"],creation_functions:[405,0,0,"-"],data_type_functions:[411,0,0,"-"],data_types:[415,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[406,2,1,""],ones:[407,2,1,""],ones_like:[408,2,1,""],tril:[409,2,1,""],zeros:[410,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[411,1,1,""],finfo:[413,2,1,""],iinfo:[414,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[411,3,1,""],bits:[411,3,1,""],eps:[411,3,1,""],max:[411,3,1,""],min:[411,3,1,""],smallest_normal:[411,3,1,""]},"ivy.functional.backends.numpy.core":{device:[462,0,0,"-"],general:[464,0,0,"-"],gradients:[496,0,0,"-"],image:[501,0,0,"-"],linear_algebra:[505,0,0,"-"],logic:[509,0,0,"-"],math:[510,0,0,"-"],random:[512,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[463,1,1,""],clear_mem_on_dev:[462,2,1,""],dev:[462,2,1,""],dev_from_str:[462,2,1,""],dev_to_str:[462,2,1,""],gpu_is_available:[462,2,1,""],num_gpus:[462,2,1,""],to_dev:[462,2,1,""],tpu_is_available:[462,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[463,3,1,""],start:[463,3,1,""],stop:[463,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[464,2,1,""],arange:[465,2,1,""],argmin:[466,2,1,""],array:[467,2,1,""],asarray:[464,2,1,""],astype:[464,2,1,""],cast:[468,2,1,""],clip:[464,2,1,""],compile:[469,2,1,""],concatenate:[470,2,1,""],constant_pad:[464,2,1,""],container_types:[464,2,1,""],copy_array:[464,2,1,""],cumprod:[471,2,1,""],current_framework_str:[464,2,1,""],dtype:[472,2,1,""],dtype_bits:[473,2,1,""],dtype_from_str:[474,2,1,""],dtype_to_str:[475,2,1,""],floor:[464,2,1,""],floormod:[464,2,1,""],full:[476,2,1,""],gather:[477,2,1,""],gather_nd:[478,2,1,""],get_num_dims:[464,2,1,""],identity:[479,2,1,""],indices_where:[480,2,1,""],inplace_arrays_supported:[464,2,1,""],inplace_decrement:[481,2,1,""],inplace_increment:[482,2,1,""],inplace_update:[483,2,1,""],inplace_variables_supported:[464,2,1,""],is_array:[484,2,1,""],linear_resample:[485,2,1,""],linspace:[486,2,1,""],logspace:[487,2,1,""],matmul:[464,2,1,""],meshgrid:[464,2,1,""],multiprocessing:[464,2,1,""],one_hot:[488,2,1,""],round:[464,2,1,""],scatter_flat:[489,2,1,""],scatter_nd:[490,2,1,""],shape:[464,2,1,""],split:[491,2,1,""],squeeze:[492,2,1,""],to_list:[464,2,1,""],to_numpy:[464,2,1,""],to_scalar:[464,2,1,""],transpose:[493,2,1,""],unstack:[494,2,1,""],where:[464,2,1,""],zero_pad:[464,2,1,""],zeros_like:[495,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[497,2,1,""],is_variable:[498,2,1,""],stop_gradient:[499,2,1,""],variable:[500,2,1,""],variable_data:[496,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[502,2,1,""],gradient_image:[503,2,1,""],stack_images:[504,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[506,2,1,""],qr:[507,2,1,""],vector_to_skew_symmetric_matrix:[508,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[511,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[513,2,1,""],randint:[512,2,1,""],random_normal:[512,2,1,""],random_uniform:[512,2,1,""],seed:[512,2,1,""],shuffle:[512,2,1,""]},"ivy.functional.ivy":{array_api:[872,0,0,"-"],core:[919,0,0,"-"],nn:[1253,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[873,0,0,"-"],creation_functions:[874,0,0,"-"],data_type_functions:[880,0,0,"-"],data_types:[883,0,0,"-"],elementwise_functions:[884,0,0,"-"],function_and_method_signatures:[902,0,0,"-"],linear_algebra:[903,0,0,"-"],manipulation_functions:[907,0,0,"-"],searching_functions:[909,0,0,"-"],set_functions:[911,0,0,"-"],sorting_functions:[912,0,0,"-"],statistical_functions:[914,0,0,"-"],utility_functions:[916,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[873,4,1,""],nan:[873,4,1,""],pi:[873,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[875,2,1,""],ones:[876,2,1,""],ones_like:[877,2,1,""],tril:[878,2,1,""],zeros:[879,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[881,2,1,""],iinfo:[882,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[885,2,1,""],asinh:[886,2,1,""],bitwise_and:[887,2,1,""],ceil:[888,2,1,""],cos:[889,2,1,""],cosh:[890,2,1,""],isfinite:[891,2,1,""],isnan:[892,2,1,""],less:[893,2,1,""],less_equal:[894,2,1,""],log1p:[895,2,1,""],log2:[896,2,1,""],logical_not:[897,2,1,""],negative:[898,2,1,""],sin:[899,2,1,""],sqrt:[900,2,1,""],tanh:[901,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[904,2,1,""],svd:[905,2,1,""],vector_norm:[906,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[908,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[910,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[913,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[915,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[917,2,1,""],any:[918,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[920,0,0,"-"],compilation:[959,0,0,"-"],device:[961,0,0,"-"],dtype:[1011,0,0,"-"],general:[1035,0,0,"-"],gradients:[1130,0,0,"-"],image:[1146,0,0,"-"],linalg:[1153,0,0,"-"],logic:[1160,0,0,"-"],math:[1163,0,0,"-"],meta:[1177,0,0,"-"],multi_node:[1181,0,0,"-"],nest:[1225,0,0,"-"],random:[1237,0,0,"-"],reductions:[1244,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[921,2,1,""],builtin_add:[922,2,1,""],builtin_and:[923,2,1,""],builtin_bool:[924,2,1,""],builtin_contains:[925,2,1,""],builtin_deepcopy:[926,2,1,""],builtin_dir:[927,2,1,""],builtin_eq:[928,2,1,""],builtin_float:[929,2,1,""],builtin_floordiv:[930,2,1,""],builtin_ge:[931,2,1,""],builtin_getattr:[932,2,1,""],builtin_getattribute:[933,2,1,""],builtin_getitem:[934,2,1,""],builtin_gt:[935,2,1,""],builtin_int:[936,2,1,""],builtin_invert:[937,2,1,""],builtin_le:[938,2,1,""],builtin_lt:[939,2,1,""],builtin_mul:[940,2,1,""],builtin_ne:[941,2,1,""],builtin_neg:[942,2,1,""],builtin_or:[943,2,1,""],builtin_pos:[944,2,1,""],builtin_pow:[945,2,1,""],builtin_radd:[946,2,1,""],builtin_rand:[947,2,1,""],builtin_rfloordiv:[948,2,1,""],builtin_rmul:[949,2,1,""],builtin_ror:[950,2,1,""],builtin_rpow:[951,2,1,""],builtin_rsub:[952,2,1,""],builtin_rtruediv:[953,2,1,""],builtin_rxor:[954,2,1,""],builtin_setitem:[955,2,1,""],builtin_sub:[956,2,1,""],builtin_truediv:[957,2,1,""],builtin_xor:[958,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[960,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[961,1,1,""],DevClonedItem:[963,1,1,""],DevClonedIter:[964,1,1,""],DevClonedNest:[965,1,1,""],DevDistItem:[966,1,1,""],DevDistIter:[967,1,1,""],DevDistNest:[968,1,1,""],DevManager:[961,1,1,""],DevMapper:[970,1,1,""],DevMapperMultiProc:[971,1,1,""],MultiDev:[961,1,1,""],MultiDevItem:[973,1,1,""],MultiDevIter:[974,1,1,""],MultiDevNest:[975,1,1,""],Profiler:[976,1,1,""],clear_mem_on_dev:[977,2,1,""],default_device:[978,2,1,""],dev:[979,2,1,""],dev_clone:[980,2,1,""],dev_clone_array:[981,2,1,""],dev_clone_iter:[982,2,1,""],dev_clone_nest:[983,2,1,""],dev_dist:[984,2,1,""],dev_dist_array:[985,2,1,""],dev_dist_iter:[986,2,1,""],dev_dist_nest:[987,2,1,""],dev_from_str:[988,2,1,""],dev_to_str:[989,2,1,""],dev_unify:[990,2,1,""],dev_unify_array:[991,2,1,""],dev_unify_iter:[992,2,1,""],dev_unify_nest:[993,2,1,""],dev_util:[994,2,1,""],get_all_arrays_on_dev:[995,2,1,""],gpu_is_available:[996,2,1,""],num_arrays_on_dev:[997,2,1,""],num_cpu_cores:[998,2,1,""],num_gpus:[999,2,1,""],percent_used_mem_on_dev:[1000,2,1,""],print_all_arrays_on_dev:[1001,2,1,""],set_default_device:[1002,2,1,""],set_split_factor:[1003,2,1,""],split_factor:[1004,2,1,""],split_func_call:[1005,2,1,""],to_dev:[1006,2,1,""],total_mem_on_dev:[1007,2,1,""],tpu_is_available:[1008,2,1,""],unset_default_device:[1009,2,1,""],used_mem_on_dev:[1010,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[961,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[961,3,1,""],da_tune_step:[961,3,1,""],dim_size:[961,3,1,""],ds_tune_step:[961,3,1,""],map:[961,3,1,""],repeated_config_check:[961,3,1,""],tune_step:[961,3,1,""],tuned:[961,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[970,3,1,""],map:[970,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[971,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[961,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[973,3,1,""],items:[973,3,1,""],keys:[973,3,1,""],shape:[973,3,1,""],values:[973,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[974,3,1,""],at_dev:[974,3,1,""],at_devs:[974,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[975,3,1,""],at_dev:[975,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[976,3,1,""],start:[976,3,1,""],stop:[976,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[1011,1,1,""],DefaultFloatDtype:[1011,1,1,""],DefaultIntDtype:[1011,1,1,""],astype:[1011,2,1,""],cast:[1015,2,1,""],closest_valid_dtype:[1016,2,1,""],convert_dtype:[1017,2,1,""],default_dtype:[1018,2,1,""],default_float_dtype:[1019,2,1,""],default_int_dtype:[1020,2,1,""],dtype:[1021,2,1,""],dtype_bits:[1022,2,1,""],dtype_from_str:[1023,2,1,""],dtype_to_str:[1024,2,1,""],invalid_dtype:[1025,2,1,""],is_float_dtype:[1026,2,1,""],is_int_dtype:[1027,2,1,""],set_default_dtype:[1028,2,1,""],set_default_float_dtype:[1029,2,1,""],set_default_int_dtype:[1030,2,1,""],unset_default_dtype:[1031,2,1,""],unset_default_float_dtype:[1032,2,1,""],unset_default_int_dtype:[1033,2,1,""],valid_dtype:[1034,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[1011,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[1011,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[1011,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1058,2,1,""],abs:[1036,2,1,""],all_equal:[1037,2,1,""],arange:[1038,2,1,""],arg_names:[1039,2,1,""],argmin:[1040,2,1,""],array:[1041,2,1,""],array_equal:[1042,2,1,""],arrays_equal:[1043,2,1,""],asarray:[1035,2,1,""],assert_supports_inplace:[1044,2,1,""],broadcast_to:[1045,2,1,""],cache_fn:[1046,2,1,""],clip:[1047,2,1,""],clip_matrix_norm:[1048,2,1,""],clip_vector_norm:[1049,2,1,""],concatenate:[1050,2,1,""],constant_pad:[1051,2,1,""],container_types:[1052,2,1,""],copy_array:[1053,2,1,""],cross:[1054,2,1,""],cumprod:[1055,2,1,""],cumsum:[1056,2,1,""],current_framework_str:[1057,2,1,""],einops_rearrange:[1059,2,1,""],einops_reduce:[1060,2,1,""],einops_repeat:[1061,2,1,""],equal:[1062,2,1,""],exists:[1063,2,1,""],expand_dims:[1064,2,1,""],floor:[1065,2,1,""],floormod:[1066,2,1,""],fourier_encode:[1067,2,1,""],full:[1068,2,1,""],gather:[1069,2,1,""],gather_nd:[1070,2,1,""],get_all_arrays_in_memory:[1071,2,1,""],get_min_base:[1072,2,1,""],get_min_denominator:[1073,2,1,""],get_num_dims:[1074,2,1,""],get_referrers_recursive:[1075,2,1,""],has_nans:[1076,2,1,""],identity:[1077,2,1,""],indices_where:[1078,2,1,""],inplace_arrays_supported:[1079,2,1,""],inplace_decrement:[1080,2,1,""],inplace_increment:[1081,2,1,""],inplace_update:[1082,2,1,""],inplace_variables_supported:[1083,2,1,""],is_array:[1084,2,1,""],isinf:[1085,2,1,""],linear_resample:[1086,2,1,""],linspace:[1087,2,1,""],logspace:[1088,2,1,""],match_kwargs:[1089,2,1,""],matmul:[1090,2,1,""],maximum:[1091,2,1,""],meshgrid:[1092,2,1,""],minimum:[1093,2,1,""],multiprocessing:[1094,2,1,""],num_arrays_in_memory:[1095,2,1,""],one_hot:[1096,2,1,""],ones:[1097,2,1,""],print_all_arrays_in_memory:[1098,2,1,""],queue_timeout:[1099,2,1,""],repeat:[1100,2,1,""],reshape:[1101,2,1,""],round:[1102,2,1,""],scatter_flat:[1103,2,1,""],scatter_nd:[1104,2,1,""],set_min_base:[1105,2,1,""],set_min_denominator:[1106,2,1,""],set_queue_timeout:[1107,2,1,""],set_tmp_dir:[1108,2,1,""],shape:[1109,2,1,""],shape_to_tuple:[1110,2,1,""],split:[1111,2,1,""],squeeze:[1112,2,1,""],stable_divide:[1113,2,1,""],stable_pow:[1114,2,1,""],stack:[1115,2,1,""],supports_inplace:[1116,2,1,""],swapaxes:[1117,2,1,""],tile:[1118,2,1,""],tmp_dir:[1119,2,1,""],to_list:[1120,2,1,""],to_numpy:[1121,2,1,""],to_scalar:[1122,2,1,""],transpose:[1123,2,1,""],try_else_none:[1124,2,1,""],unstack:[1125,2,1,""],value_is_nan:[1126,2,1,""],where:[1127,2,1,""],zero_pad:[1128,2,1,""],zeros_like:[1129,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1130,1,1,""],adam_step:[1132,2,1,""],adam_update:[1133,2,1,""],execute_with_gradients:[1134,2,1,""],gradient_descent_update:[1135,2,1,""],is_variable:[1136,2,1,""],lamb_update:[1137,2,1,""],lars_update:[1138,2,1,""],optimizer_update:[1139,2,1,""],set_with_grads:[1140,2,1,""],stop_gradient:[1141,2,1,""],unset_with_grads:[1142,2,1,""],variable:[1143,2,1,""],variable_data:[1144,2,1,""],with_grads:[1145,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1130,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1147,2,1,""],float_img_to_uint8_img:[1148,2,1,""],gradient_image:[1149,2,1,""],random_crop:[1150,2,1,""],stack_images:[1151,2,1,""],uint8_img_to_float_img:[1152,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1154,2,1,""],inv:[1155,2,1,""],matrix_norm:[1156,2,1,""],pinv:[1157,2,1,""],qr:[1158,2,1,""],vector_to_skew_symmetric_matrix:[1159,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1161,2,1,""],logical_or:[1162,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1164,2,1,""],asin:[1165,2,1,""],atan2:[1167,2,1,""],atan:[1166,2,1,""],atanh:[1168,2,1,""],cosh:[1169,2,1,""],divide:[1170,2,1,""],erf:[1171,2,1,""],exp:[1172,2,1,""],log:[1173,2,1,""],sinh:[1174,2,1,""],tan:[1175,2,1,""],tanh:[1176,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1178,2,1,""],maml_step:[1179,2,1,""],reptile_step:[1180,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1181,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1226,2,1,""],copy_nest:[1227,2,1,""],index_nest:[1228,2,1,""],map:[1229,2,1,""],map_nest_at_index:[1230,2,1,""],map_nest_at_indices:[1231,2,1,""],multi_index_nest:[1232,2,1,""],nested_indices_where:[1233,2,1,""],nested_map:[1234,2,1,""],set_nest_at_index:[1235,2,1,""],set_nest_at_indices:[1236,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1238,2,1,""],randint:[1239,2,1,""],random_normal:[1240,2,1,""],random_uniform:[1241,2,1,""],seed:[1242,2,1,""],shuffle:[1243,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1245,2,1,""],reduce_max:[1246,2,1,""],reduce_mean:[1247,2,1,""],reduce_min:[1248,2,1,""],reduce_prod:[1249,2,1,""],reduce_std:[1250,2,1,""],reduce_sum:[1251,2,1,""],reduce_var:[1252,2,1,""]},"ivy.functional.ivy.nn":{activations:[1254,0,0,"-"],layers:[1262,0,0,"-"],losses:[1275,0,0,"-"],norms:[1279,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1255,2,1,""],leaky_relu:[1256,2,1,""],relu:[1257,2,1,""],sigmoid:[1258,2,1,""],softmax:[1259,2,1,""],softplus:[1260,2,1,""],tanh:[1261,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1263,2,1,""],conv1d_transpose:[1264,2,1,""],conv2d:[1265,2,1,""],conv2d_transpose:[1266,2,1,""],conv3d:[1267,2,1,""],conv3d_transpose:[1268,2,1,""],depthwise_conv2d:[1269,2,1,""],dropout:[1270,2,1,""],linear:[1271,2,1,""],lstm_update:[1272,2,1,""],multi_head_attention:[1273,2,1,""],scaled_dot_product_attention:[1274,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1276,2,1,""],cross_entropy:[1277,2,1,""],sparse_cross_entropy:[1278,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1280,2,1,""]},"ivy.stateful":{activations:[1284,0,0,"-"],converters:[1287,0,0,"-"],initializers:[1289,0,0,"-"],layers:[1298,0,0,"-"],module:[1310,0,0,"-"],norms:[1312,0,0,"-"],optimizers:[1314,0,0,"-"],sequential:[1320,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1285,1,1,""],GELU:[1286,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1285,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1286,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1288,2,1,""]},"ivy.stateful.initializers":{Constant:[1289,1,1,""],FirstLayerSiren:[1291,1,1,""],GlorotUniform:[1292,1,1,""],KaimingNormal:[1289,1,1,""],Ones:[1294,1,1,""],Siren:[1295,1,1,""],Uniform:[1289,1,1,""],Zeros:[1297,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1289,3,1,""],create_variables:[1289,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1291,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1292,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1289,3,1,""],create_variables:[1289,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1294,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1295,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1289,3,1,""],create_variables:[1289,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1297,3,1,""]},"ivy.stateful.layers":{Conv1D:[1299,1,1,""],Conv1DTranspose:[1300,1,1,""],Conv2D:[1301,1,1,""],Conv2DTranspose:[1302,1,1,""],Conv3D:[1303,1,1,""],Conv3DTranspose:[1304,1,1,""],DepthwiseConv2D:[1305,1,1,""],Dropout:[1306,1,1,""],LSTM:[1307,1,1,""],Linear:[1308,1,1,""],MultiHeadAttention:[1309,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1299,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1300,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1301,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1302,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1303,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1304,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1305,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1306,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1307,3,1,""],get_initial_state:[1307,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1308,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1309,3,1,""]},"ivy.stateful.module":{Module:[1311,1,1,""]},"ivy.stateful.module.Module":{__init__:[1311,3,1,""],build:[1311,3,1,""],build_mode:[1311,3,1,""],built:[1311,3,1,""],check_submod_rets:[1311,3,1,""],get_mod_key:[1311,3,1,""],mod_depth:[1311,3,1,""],mod_height:[1311,3,1,""],mod_with_top_mod_key_chain:[1311,3,1,""],save_weights:[1311,3,1,""],show_mod_in_top_mod:[1311,3,1,""],show_structure:[1311,3,1,""],show_v_in_top_v:[1311,3,1,""],sub_mods:[1311,3,1,""],track_submod_call_order:[1311,3,1,""],track_submod_rets:[1311,3,1,""],v_with_top_v_key_chains:[1311,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1313,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1313,3,1,""]},"ivy.stateful.optimizers":{Adam:[1315,1,1,""],LAMB:[1316,1,1,""],LARS:[1317,1,1,""],Optimizer:[1318,1,1,""],SGD:[1319,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1315,3,1,""],set_state:[1315,3,1,""],state:[1315,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1316,3,1,""],set_state:[1316,3,1,""],state:[1316,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1317,3,1,""],set_state:[1317,3,1,""],state:[1317,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1318,3,1,""],set_state:[1318,3,1,""],step:[1318,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1319,3,1,""],set_state:[1319,3,1,""],state:[1319,3,1,""]},"ivy.stateful.sequential":{Sequential:[1321,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1321,3,1,""]},"ivy.verbosity":{cprint:[1326,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1325,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1314,1315,1316],"02886":1281,"100":[1181,1281,1323],"141592653589793":873,"2021":1281,"2102":1281,"360":[1163,1175],"718281828459045":873,"754":[873,880,881,884,900],"999":[1130,1132,1133,1137,1314,1315,1316],"abstract":[961,976,1281,1314,1318],"boolean":[40,41,884,887,897,920,938,961,996,1008,1011,1025,1034,1035,1037,1042,1043,1076,1078,1079,1083,1084,1085,1116,1126,1130,1136,1160,1161,1162,1177,1178,1179,1181],"break":43,"case":[15,18,19,40,41,42,43,884,885,886,888,889,890,896,899,900,961,1000,1007,1010,1035,1038,1101,1103,1104,1153,1156,1158,1181,1225,1228,1232,1281,1298,1309,1310,1311,1314,1318,1327],"catch":[1035,1058],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,411,462,463,880,882,961,963,964,965,966,967,968,970,971,973,974,975,976,988,989,1011,1035,1039,1089,1130,1144,1181,1225,1227,1234,1275,1277,1278,1281,1284,1285,1286,1287,1288,1289,1291,1292,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1323,1327],"default":[15,18,19,40,41,42,43,874,875,876,877,878,879,903,904,906,907,908,909,910,912,913,914,915,916,917,918,959,960,961,970,971,978,979,983,984,985,986,987,990,991,992,993,1000,1003,1004,1005,1010,1011,1018,1019,1020,1021,1035,1037,1038,1040,1048,1049,1050,1051,1054,1055,1056,1067,1068,1069,1074,1076,1077,1086,1088,1089,1092,1094,1097,1099,1100,1103,1104,1107,1109,1111,1113,1114,1123,1125,1126,1130,1133,1135,1136,1137,1138,1139,1141,1145,1153,1156,1158,1177,1178,1179,1180,1181,1225,1226,1227,1229,1233,1234,1237,1238,1240,1241,1244,1246,1247,1248,1249,1250,1251,1252,1254,1255,1259,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1287,1288,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321],"final":[40,41,43,1035,1067,1087,1088,1181,1298,1309,1324],"float":[40,41,42,43,873,874,875,876,879,880,881,884,885,886,888,889,890,896,899,900,901,903,906,920,938,939,945,961,970,971,994,1000,1003,1007,1010,1011,1019,1026,1035,1038,1048,1049,1051,1067,1068,1072,1073,1088,1105,1106,1107,1113,1114,1130,1132,1133,1135,1137,1138,1139,1146,1148,1152,1163,1170,1177,1178,1179,1180,1181,1237,1240,1241,1254,1256,1262,1270,1273,1274,1275,1276,1277,1278,1279,1280,1298,1306,1309,1312,1313,1314,1315,1316,1317,1318,1319],"function":[15,40,41,43,406,407,408,409,410,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,873,875,876,877,878,879,881,882,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,908,910,913,915,917,918,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,970,971,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1284,1285,1286,1314,1317,1318,1319,1323,1324,1327],"import":[43,1281,1324,1327],"int":[40,41,42,43,405,406,407,409,410,512,874,875,876,878,879,880,881,882,903,904,906,907,908,909,910,912,913,914,915,916,917,918,920,938,939,945,959,960,961,983,984,985,986,987,990,991,992,993,998,999,1005,1011,1020,1022,1027,1035,1040,1045,1050,1051,1055,1056,1059,1060,1061,1064,1067,1068,1069,1074,1077,1086,1087,1088,1096,1097,1100,1101,1103,1104,1109,1110,1111,1112,1115,1117,1118,1123,1125,1128,1130,1132,1133,1137,1146,1150,1151,1153,1156,1177,1178,1179,1180,1181,1225,1234,1237,1238,1239,1241,1242,1244,1246,1247,1248,1249,1250,1251,1252,1254,1259,1262,1263,1264,1265,1266,1267,1268,1269,1273,1275,1277,1278,1279,1280,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1312,1313],"long":[43,1262,1272],"new":[40,41,43,512,874,875,876,877,879,884,895,1011,1015,1035,1036,1045,1059,1060,1061,1064,1067,1068,1069,1070,1097,1101,1103,1104,1105,1106,1113,1114,1115,1130,1133,1135,1137,1138,1139,1146,1148,1150,1152,1163,1168,1169,1174,1176,1181,1225,1235,1236,1237,1238,1279,1280,1281,1287,1288,1298,1308,1312,1313,1314,1315,1316,1317,1318,1319,1324,1327],"public":[1035,1052],"return":[15,16,17,18,19,40,41,42,43,512,874,875,876,877,878,879,884,885,886,887,888,889,890,891,892,893,894,896,897,898,899,900,901,903,904,905,906,909,910,912,913,914,915,916,917,918,920,938,939,945,959,960,961,970,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,996,997,999,1000,1004,1005,1006,1007,1008,1010,1011,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1034,1035,1036,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1100,1101,1102,1103,1104,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1225,1226,1227,1229,1233,1234,1237,1238,1239,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1287,1288,1298,1307,1308,1314,1318,1323,1324,1327],"short":[43,1262,1272,1281,1327],"static":[40,41,959,960],"super":1181,"true":[40,41,42,464,469,496,499,512,513,884,891,892,897,903,905,906,909,910,912,913,916,917,918,959,960,961,1035,1037,1044,1046,1063,1067,1076,1078,1126,1127,1130,1133,1135,1136,1137,1138,1139,1141,1153,1156,1177,1178,1179,1180,1181,1225,1226,1233,1237,1238,1244,1246,1247,1248,1249,1250,1251,1252,1254,1255,1262,1270,1275,1276,1277,1278,1298,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319],"try":[40,41,1035,1124,1181],"var":[40,41,1177,1178,1179,1327],"while":[40,41,42,884,897,1181],AND:[884,887,916,917,1160,1161],But:1327,For:[43,884,885,886,888,889,890,896,899,900,1035,1038,1047,1115,1130,1136,1144,1153,1158,1163,1164,1281,1287,1288,1324,1327],Its:[1163,1166],NOT:[884,897],Not:873,One:[40,41,43,1035,1060,1101,1237,1239,1327],Ones:[1281,1289],PRs:43,Such:[1035,1052],That:1324,The:[15,16,17,18,19,40,41,42,43,874,878,884,885,886,887,888,889,890,891,892,893,894,896,897,899,900,901,903,904,905,906,907,908,912,913,916,917,918,920,938,939,945,959,960,961,970,971,977,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,1000,1003,1004,1005,1006,1007,1010,1011,1015,1016,1017,1022,1023,1024,1025,1034,1035,1038,1041,1042,1045,1046,1048,1049,1050,1051,1053,1054,1057,1058,1062,1067,1069,1070,1077,1080,1081,1082,1084,1086,1088,1090,1092,1094,1097,1100,1101,1103,1104,1105,1106,1107,1110,1111,1112,1113,1114,1115,1118,1126,1129,1130,1132,1133,1135,1137,1138,1139,1141,1144,1146,1148,1150,1152,1153,1156,1158,1163,1164,1165,1166,1170,1171,1172,1173,1175,1177,1178,1179,1180,1181,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1287,1288,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1316,1317,1318,1324,1327],There:[43,1281,1324],These:[43,1281],Use:43,Used:[1225,1226,1233,1310,1311],Using:[1281,1282,1327],With:[40,41,909,910,1153,1156,1244,1246,1247,1248,1249,1250,1251,1252,1281,1323,1327],__array__:[1035,1041],__call__:[1298,1309,1310,1311],__del__:1181,__dict__:[1181,1324],__enter__:1181,__exit__:1181,__getitem__:1181,__getstate__:1181,__init__:[40,41,42,43,59,60,84,224,411,412,462,463,544,681,961,962,969,970,971,972,973,974,975,976,1011,1012,1013,1014,1130,1131,1181,1185,1192,1281,1284,1285,1286,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1323,1327],__iter__:1181,__len__:1181,__next__:1181,__pow__:43,__repr__:1181,_assign_vari:1323,_axi:1181,_base:[1225,1226,1233],_compute_node_da_ratio:1181,_compute_node_strs_da:1181,_concat_unify_arrai:1181,_counter:1181,_cur_framework:[43,1181],_da_direct:1181,_da_directions_flip:1181,_da_step_tim:1181,_da_tim:1181,_da_tune_count:1181,_data:1181,_delta_da_dim_s:1181,_delta_sf:1181,_dict:1181,_dim_siz:1181,_first_da_tune_step:1181,_first_ns_tune_step:1181,_fn:1181,_forward:[1281,1323],_get_kalman_param:1327,_get_prior:1327,_get_some_model:1327,_handle_flat_arrays_in_out:43,_index:[1225,1226,1233],_input_queu:1181,_length:1181,_max_depth:1181,_max_node_dim_step_ratio:1181,_max_node_dim_step_s:1181,_max_split_factor_step_s:1181,_mean_unify_arrai:1181,_min_bas:[1035,1114,1279,1280,1312,1313],_min_denomin:[1035,1113],_min_node_dim_s:1181,_min_sf_tune_step:1181,_min_unit_node_tune_step:1181,_model:1327,_native_wrapp:43,_node_mapp:1181,_node_percent_mem:1181,_node_str:1181,_node_str_da_ratio:1181,_node_strs_da:1181,_node_strs_kei:1181,_node_strs_n:1181,_node_util:1181,_ns_step_tim:1181,_ns_time:1181,_ns_tune_count:1181,_num_nod:1181,_num_work:1181,_observed_config:1181,_output_queu:1181,_paramet:1323,_percent_mem_inc_per_sf:1181,_percent_mem_inc_per_unit_da_dim:1181,_percent_util_inc_per_unit_da_dim:1181,_ret_fn:1181,_safety_factor:1181,_save_dir:1181,_shift_da_split:1181,_shift_n:1181,_slice:1181,_step:[1314,1318],_sum_unify_arrai:1181,_timeout:1181,_tune:1181,_tune_da:1181,_tune_n:1181,_tune_step:1181,_unit_da_tune_count:1181,_unroll_step:1327,_with_node_mappig:1181,_worker:1181,_worker_class:1181,_worker_fn:1181,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,961,970,976,1181,1310,1311,1314,1318],abil:1281,abl:[40,41],about:[880,881,882],abov:[43,874,878,903,904,1237,1239],above_height:[40,41],abs:[311,464,602,740,903,906,1035,1181],absolut:[40,41,1035,1036],abstractmethod:1181,accept:[15,43,884,897,1281],access:[40,41,43,1324],accord:[40,41,880,881,1035,1051,1069,1103,1104,1123,1128],accordingli:[903,906,916,917,918],accur:[59,411,462,463,961,973,974,975,976,1011,1130,1289,1291,1292,1294,1295,1297],aco:[824,1163],acosh:[88,228,416,548,685,884],across:[40,41,961,970,971,980,981,983,984,985,986,987,993,1003,1004,1035,1040,1042,1043,1181,1225,1229],act:43,activ:[1255,1256,1257,1258,1259,1260,1261,1281,1285,1286],actual:1324,adam:[1130,1132,1133,1137,1281,1314,1316,1323],adam_step:1130,adam_upd:1130,adapt:[1130,1138,1314,1317],add:[40,41,43,1181,1275,1276,1277,1278,1279,1280,1281,1312,1313,1324],added:[43,1035,1113,1114,1320,1321],adding:[43,1035,1045],addit:[40,41,43,1035,1059,1060,1061,1279,1280,1298,1308],addition:43,address:43,adher:43,adjac:[1035,1038],adopt:[43,1035,1052],affect:[1035,1038],affin:[1312,1313],after:[884,900,1035,1086,1130,1133,1134,1135,1137,1138,1139,1146,1147,1279,1280,1314,1315,1316,1317,1318,1319,1327],after_1:[1035,1051,1128],after_n:[1035,1051,1128],again:43,against:[40,41,909,910,1153,1156,1244,1246,1247,1248,1249,1250,1251,1252],agnost:[43,1281,1323,1324],aim:1327,algebra:1153,algorithm:[1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305,1327],align:[40,41,43,1035,1045],aliv:[961,995,997,1001,1035,1071,1095,1098],all:[15,16,17,18,19,40,41,43,121,253,449,581,718,874,878,903,906,907,908,916,959,960,961,970,995,1001,1035,1036,1037,1042,1043,1052,1071,1077,1098,1112,1153,1158,1177,1178,1179,1180,1181,1225,1226,1227,1233,1234,1237,1238,1241,1244,1246,1247,1248,1249,1250,1251,1252,1262,1272,1281,1324,1327],all_depth:[40,41],all_equ:1035,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1225,all_tru:[40,41],alloc:[43,874,878,961,1181],allow:[1035,1087,1088,1089,1310,1311],allow_dupl:[1035,1089],alon:[961,1000,1010,1181,1281],along:[40,41,43,512,903,906,907,908,909,910,912,913,914,915,916,917,918,961,984,985,986,987,990,991,992,993,1005,1035,1050,1055,1056,1069,1086,1087,1088,1100,1111,1115,1118,1125,1153,1156,1177,1178,1179,1180,1181,1237,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252],alongsid:[1323,1324],alpha:[1254,1256],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,884,888,961,1181],also:[40,41,43,1035,1038,1130,1133,1177,1178,1179,1180,1225,1226,1227,1233,1234,1262,1271,1281,1298,1308,1323],altern:1323,alwai:[40,41,43,1130,1136,1141],among:[40,41],amount:[961,1007,1181,1281],angl:[884,890,901,1163,1164,1167],ani:[15,16,17,18,19,40,41,43,121,253,449,581,718,884,894,916,959,960,961,963,966,970,971,973,982,983,986,987,992,1035,1037,1038,1041,1058,1059,1060,1061,1062,1063,1076,1084,1089,1113,1114,1130,1134,1181,1225,1226,1229,1233,1234,1235,1236,1237,1241,1281,1287,1288,1310,1311,1323,1324,1327],anoth:[40,41,43,1011,1017,1281],another_backend:43,anyth:[43,1327],anywai:43,apart:43,api:[1281,1282],appear:[43,1035,1064],append:[40,41,903,904,1181],appli:[15,18,19,40,41,903,905,1035,1059,1060,1061,1130,1137,1138,1160,1161,1162,1177,1178,1179,1225,1229,1232,1234,1254,1255,1256,1257,1258,1259,1260,1261,1262,1271,1273,1274,1279,1280,1281,1284,1285,1286,1312,1313],applic:[1225,1229,1234,1262,1273,1274,1281,1327],appropri:[909,910],approxim:[43,884,885,886,889,890,895,896,899,901,920,945,1254,1255],arang:[141,311,464,512,602,740,1035,1087,1088],arbitrari:[40,41,961,990,991,993,1181],arc:[1163,1167],arcco:[1163,1164],arctan:[1163,1166],area:[884,885,886,1281],arg:[15,16,17,40,41,43,59,63,961,970,983,987,993,1005,1035,1059,1060,1061,1104,1181,1287,1288,1310,1311],arg_nam:1035,arg_stateful_idx:[1310,1311],argmax:[114,247,442,574,711,909],argmin:[141,464,602,740,1035],args_clon:1181,args_dist:1181,args_to_ivi:[15,1281],args_to_n:[15,1281],args_uni:1181,argsort:[117,250,445,577,714,912],argument:[15,16,17,18,19,40,41,42,43,59,63,959,960,961,970,971,983,987,993,1035,1038,1039,1046,1058,1089,1104,1163,1164,1181,1225,1229,1287,1288,1310,1311],aris:[1281,1327],arithmet:[43,1244,1247,1250,1252],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:512,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,141,311,464,512,602,740,874,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909,910,912,913,914,915,916,917,918,938,939,945,961,979,980,981,984,985,986,987,990,991,992,993,995,997,1001,1005,1006,1011,1015,1021,1026,1027,1035,1036,1037,1038,1040,1042,1043,1044,1045,1047,1048,1049,1050,1051,1053,1054,1055,1056,1059,1060,1061,1062,1064,1065,1066,1067,1068,1069,1070,1071,1074,1076,1077,1078,1079,1080,1081,1082,1084,1085,1086,1087,1088,1090,1091,1092,1093,1095,1096,1097,1098,1100,1101,1102,1103,1104,1109,1111,1112,1115,1116,1117,1118,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1132,1133,1136,1137,1141,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1181,1225,1227,1234,1237,1238,1239,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1298,1306,1307,1309,1314,1318,1323,1324],arrang:[1035,1059],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,405,406,407,408,409,410,411,413,414,873,874,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909,910,912,913,914,915,916,917,918],array_api_methods_to_test:43,array_builtin:[43,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958],array_equ:[311,740,1035],array_lik:[512,1035,1041],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1035],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1281],arraywithgener:[22,1281],arraywithgradi:[24,1281],arraywithimag:[26,1281],arraywithlinalg:[28,1281],arraywithlog:[30,1281],arraywithmath:[32,1281],arraywithmeta:[34,1281],arraywithrandom:[36,1281],arraywithreduct:[38,1281],arriv:[40,41,42],articl:1281,arxiv:1281,as_arrai:[40,41,1035,1074,1109],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[462,464,472,961,979,1011,1018,1019,1020,1021],as_tensor:464,as_vari:[40,41],as_zero:[40,41],asarrai:[464,1035],ascend:[912,913],asin:[824,1163],asinh:[88,416,548,685,884],aspect:[1146,1151],assert:[40,41,1035,1044,1181],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1035,associ:[43,1153,1159],assum:[884,889,899,1324,1327],astyp:[464,1011],asynchron:[40,41,42],at_dev:[40,42,961,974,975],at_kei:[40,41],at_key_chain:[40,41],at_nod:1181,atan2:[824,1163],atan:[824,1163],atanh:[824,1163],attent:[43,1262,1273,1274,1298,1309],attribut:[0,6,40,41,880,881,882,1035,1129],audienc:[1281,1324],author:1281,automat:43,avail:[40,41,43,961,996,998,999,1008,1035,1060,1181],averag:[1130,1132,1133,1137,1177,1178,1179,1244,1247],average_across_step:[1177,1178,1179],avoid:[43,961,1181,1324],axes:[40,41,43,464,493,505,506,903,906,907,908,909,910,914,915,916,917,918,961,1005,1035,1040,1051,1064,1117,1123,1128,1153,1156,1181,1244,1246,1247,1248,1249,1250,1251,1252],axes_length:[40,41,1035,1059,1060,1061],axi:[40,41,464,466,470,471,477,485,486,487,491,492,494,903,904,906,907,908,909,910,912,913,914,915,916,917,918,961,963,966,973,984,985,986,987,990,991,992,993,1005,1035,1040,1050,1051,1054,1055,1056,1064,1069,1086,1087,1088,1100,1111,1112,1115,1117,1118,1125,1128,1181,1237,1243,1244,1246,1247,1248,1249,1250,1251,1252,1254,1259,1275,1277,1278],axis0:[40,41,1035,1117],axis1:[40,41,903,904,1035,1117],axis2:[903,904],back:[43,1310,1311,1314,1318],backend:[15,17,19,40,41,405,406,407,408,409,410,411,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,510,511,512,513,961,996,999,1008,1011,1017,1025,1034,1035,1079,1083,1130,1133,1135,1137,1138,1139,1144,1181,1281,1282,1287,1288,1314,1315,1316,1317,1318,1319,1323,1324,1327],backend_nam:43,background:[1281,1324],backprop:1327,backward:[916,917,918,1323],band:[1035,1067],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,411,462,463,464,487,884,895,896,920,945,961,963,964,965,966,967,968,970,971,973,974,975,976,1011,1035,1072,1088,1105,1114,1130,1181,1244,1245,1281,1284,1285,1286,1289,1291,1292,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1327],basi:43,batch:[40,41,903,905,906,961,1003,1004,1035,1067,1077,1146,1150,1177,1178,1179,1180,1181,1262,1271,1279,1280,1312,1313],batch_shap:[464,479,1035,1077,1096,1146,1147,1148,1149,1150,1151,1152,1153,1159,1237,1238,1262,1272,1273,1274,1298,1307],batch_siz:[512,513,1181,1237,1238,1262,1263,1264,1265,1266,1267,1268,1269],bayesian:1327,becaus:[43,1035,1038],becom:[43,1035,1047,1163,1167,1327],been:[1035,1059,1060,1061,1237,1238],befor:[40,41,43,961,1005,1177,1178,1179,1181,1225,1234,1244,1246,1247,1248,1249,1250,1251,1252,1262,1273,1274,1327],before_1:[1035,1051,1128],before_n:[1035,1051,1128],begin:[1225,1226,1233,1324],behaviour:[43,1327],behind:[1130,1133,1135,1137,1138,1139,1281],being:[40,41,43,1035,1038,1099,1107,1181],believ:43,belong:[40,41],below:[43,874,878,903,904,1281,1324,1327],below_depth:[40,41],benefit:1281,bernoul:[1262,1270,1298,1306],best:[43,1035,1089,1281],beta1:[1130,1132,1133,1137,1314,1315,1316],beta2:[1130,1132,1133,1137,1314,1315,1316],beta:[1279,1280],between:[40,41,42,880,881,1035,1038,1153,1158,1225,1229,1237,1239,1275,1277,1278,1314,1316],bia:[1262,1271,1272,1298,1299,1300,1301,1302,1303,1304,1305,1308],bias_initi:[1298,1299,1300,1301,1302,1303,1304,1305,1308],bilinear:[1146,1147],bilinear_resampl:[175,364,501,642,810,1146],bilinearli:[1146,1147],binari:[884,887,1275,1276],binary_cross_entropi:1275,bit:[411,880,881,882,1011,1022,1146,1148,1152,1281],bitwis:[884,887],bitwise_and:[88,228,416,548,685,884],bitwise_oper:[0,7,8],block:[1281,1324],bool:[15,18,19,40,41,42,43,884,891,892,893,894,897,903,905,906,909,910,912,913,914,915,916,917,918,920,939,959,960,961,979,992,996,1000,1005,1008,1010,1011,1021,1035,1037,1042,1043,1055,1058,1062,1063,1067,1074,1076,1084,1089,1109,1111,1125,1126,1127,1130,1133,1134,1135,1136,1137,1138,1139,1141,1153,1156,1177,1178,1179,1180,1181,1225,1226,1227,1229,1233,1234,1237,1238,1244,1246,1247,1248,1249,1250,1251,1252,1254,1255,1262,1270,1287,1288,1298,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319],both:[43,1035,1054],bottom:1281,boundari:[40,41,1237,1241],branch:[43,959,960],brittl:43,broadcast:[40,41,43,884,887,893,894,903,906,909,910,916,917,918,920,938,939,945,1035,1045,1062,1091,1092,1093,1100,1153,1156,1163,1167,1170,1244,1246,1247,1248,1249,1250,1251,1252],broadcast_to:[311,740,1035],build:[1181,1281,1298,1309,1310,1311],build_mod:[1298,1309,1310,1311],builder:[43,1281],built:[961,1035,1038,1181,1298,1309,1310,1311],builtin:43,builtin_ab:[266,920],builtin_add:[266,920],builtin_and:[266,920],builtin_bool:[266,920],builtin_contain:[266,920],builtin_deepcopi:[266,920],builtin_dir:[266,920],builtin_eq:[266,920],builtin_float:[266,920],builtin_floordiv:[266,920],builtin_g:[266,920],builtin_getattr:[266,920],builtin_getattribut:[266,920],builtin_getitem:[266,920],builtin_gt:[266,920],builtin_int:[266,920],builtin_invert:[266,920],builtin_l:[266,920],builtin_lt:[266,590,727,920],builtin_mul:[266,920],builtin_n:[266,920],builtin_neg:[266,920],builtin_or:[266,920],builtin_po:[266,920],builtin_pow:[43,266,920],builtin_radd:[266,920],builtin_rand:[266,920],builtin_rfloordiv:[266,920],builtin_rmul:[266,920],builtin_ror:[266,920],builtin_rpow:[266,920],builtin_rsub:[266,920],builtin_rtruediv:[266,920],builtin_rxor:[266,920],builtin_setitem:[266,920],builtin_some_op:43,builtin_sub:[266,920],builtin_truediv:[266,920],builtin_xor:[266,920],busi:43,bypass:1324,cach:[961,977,1035,1046],cache_fn:1035,calcul:[40,41,42,43,884,885,886,889,890,895,896,899,900,901,920,938,945,1163,1170],call:[43,961,1005,1035,1099,1107,1124,1130,1134,1181,1225,1226,1229,1233,1298,1309,1310,1311,1314,1318,1324,1327],callabl:[40,41,959,960,961,970,971,1005,1035,1046,1058,1060,1089,1124,1177,1178,1179,1180,1181,1225,1229,1230,1231,1233,1234,1262,1273],can:[43,961,1003,1004,1005,1035,1101,1146,1148,1181,1281,1323,1324,1327],cancel_join_thread:1181,cannot:43,captur:1281,cast:[40,41,141,311,464,602,740,1011,1035,1050,1146,1148,1152],catch_except:[1035,1058],categori:43,caus:43,ceil:[88,228,416,548,685,884,1035,1038],cell:[1262,1272,1298,1307],certain:[40,41,1035,1038,1087,1088],chain:[40,41,1177,1178,1179,1320,1321],chang:[43,961,1035,1101,1181,1225,1227,1234,1281,1323],channel:[1035,1067,1146,1148,1149,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308],check:[15,16,17,18,19,40,41,43,961,1000,1010,1011,1016,1025,1034,1035,1044,1063,1076,1084,1116,1126,1130,1136,1181,1225,1226,1233,1281,1324],check_nest:[1225,1233],check_shap:[40,41],check_submod_ret:[1310,1311],check_typ:[40,41],choic:[1281,1324],choleski:[814,1153],choos:[884,897,1035,1127,1153,1158,1163,1167,1281],choose_random_framework:59,chosen:[40,41,1035,1038,1127],chunk:[961,1003,1004,1005,1181],chunk_siz:[961,1005,1181],circl:[1163,1164,1165],clark:1281,clear:[43,961,977,1181],clear_framework_stack:59,clear_mem_on_dev:[462,732,961],click:1281,clip:[40,41,311,464,740,1035,1048,1049,1091,1093,1281],clip_matrix_norm:1035,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1035],clipped_delta:1181,clone:[40,41,961,980,981,982,983,1181],clone_arrai:1181,clone_it:1181,clone_nest:1181,clonedit:1181,cloneditem:1181,clonednest:1181,close:[43,1146,1151,1163,1165,1181,1327],closest:[884,888,1011,1016],closest_valid_dtyp:1011,code:[40,41,42,43,512,1281,1282,1323,1324],codebas:[961,1003,1004,1181,1281,1324,1327],codomain:[884,885,886,889,890,896,899,900,901],colab:1281,collect:[15,40,41,462,464,496,501,505,509,510,512,920,959,961,1011,1035,1130,1146,1153,1160,1163,1181,1225,1237,1244,1254,1262,1275,1279,1284,1298,1312,1314],color:[40,41,42,1325,1326],column:[1035,1077],combin:[40,41,42,1146,1151,1281,1327],combined_batch_s:1181,come:1324,command:1281,comment:43,commit:1327,common:[40,41,43,1163,1167],common_key_chain:[40,41],commun:[43,1281,1324],communuti:43,compar:[40,41,912,913,920,938,1035,1037,1042,1043],comparison_oper:[0,9,10],compat:[43,884,887,893,894,903,906,916,917,918,920,938,939,945,1035,1062,1101,1163,1170,1281,1327],compil:[311,464,740,1310,1311,1314,1315,1316,1317,1318,1319],compile_on_next_step:[1310,1311,1314,1315,1316,1317,1318,1319],complet:[40,41,43,1153,1158,1181],complex:[1324,1327],compliant:[884,897],compon:[1035,1054],composit:43,comput:[40,41,884,887,893,894,897,898,903,906,914,915,920,939,961,1005,1035,1048,1049,1055,1056,1062,1090,1130,1132,1133,1134,1135,1137,1138,1139,1141,1143,1146,1149,1153,1154,1155,1156,1157,1158,1160,1161,1162,1163,1164,1165,1166,1167,1171,1172,1173,1175,1225,1229,1244,1245,1246,1247,1248,1249,1250,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1271,1273,1275,1276,1277,1278],concat:[40,41,961,990,991,992,993,1005,1035,1067,1181],concaten:[40,41,141,311,464,602,740,1035,1067,1181,1281],concatten:[40,41,961,990,991,992,993,1005,1181],condit:[464,959,960,1035,1127,1225,1233],conditon:[1225,1233],config:[40,41,1181],config_list:1181,configur:[40,41],conflict:43,conform:43,conjunct:1324,connect:[1298,1308,1309],consid:[40,41,884,897,1153,1158,1323,1327],consist:[40,41,961,993,1181,1244,1245,1310,1311,1324],constant:[961,970,971,1035,1051,1181,1225,1229,1275,1276,1277,1278,1279,1280,1289,1290,1294,1297,1310,1311,1312,1313,1324],constant_kwarg:1181,constant_pad:[311,464,602,740,1035],constitu:[40,41],construct:[1035,1118,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1323],constructor:[40,41,42,1035,1039,1320,1321],consum:[961,1181],cont_feat_dim:[1262,1273],contaienr:[40,41],contain:[15,18,19,42,43,874,876,878,879,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,906,914,915,916,917,918,920,938,939,945,961,980,984,1005,1011,1015,1035,1036,1040,1047,1048,1049,1052,1062,1076,1091,1093,1102,1113,1114,1130,1132,1133,1135,1137,1138,1139,1163,1170,1177,1178,1179,1180,1181,1237,1238,1244,1246,1247,1248,1250,1252,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[464,740,1035],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[464,1035,1094,1262,1273,1298,1309],context_dim:[1298,1309],contextmanag:[59,60],continu:[43,1181,1324],contract:[40,41,1244,1245],contribut:[1281,1282],contributor:[43,1281],control:1281,conv1d:[206,394,526,863,1262,1281,1298],conv1d_transpos:[206,394,526,863,1262],conv1dtranspos:[1281,1298],conv2d:[206,394,526,667,863,1262,1281,1298],conv2d_transpos:[206,394,526,863,1262],conv2dtranspos:[1281,1298],conv3d:[206,394,526,667,863,1262,1281,1298],conv3d_transpos:[206,394,526,863,1262],conv3dtranspos:[1281,1298],convent:[40,41,1244,1245],conver:[961,977,988,1000,1007,1010,1181],convers:[16,17,18,19,40,41,1181,1281],convert:[15,16,17,18,19,40,41,43,961,988,989,1011,1017,1023,1024,1035,1110,1121,1122,1146,1148,1152,1153,1159,1181,1225,1227,1234,1281,1288],convert_dtyp:1011,convolut:[1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305],cool:43,cooler:43,coordin:[1035,1092,1163,1164,1165,1167],copi:[40,41,43,512,1035,1053,1181,1225,1227],copy_arrai:[464,740,1035],copy_nest:1225,core:[462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,510,511,512,513,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,970,971,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1281],corner:43,correct:[43,1281,1324],correctli:[40,41,43,909,910,1153,1156,1163,1167,1244,1246,1247,1248,1249,1250,1251,1252],correspond:[40,41,43,920,945,1035,1050,1237,1238],cos:[88,416,548,685,884,1035,1067,1163,1164,1175,1324],cosh:[88,416,548,685,824,884,1163],cosin:[884,885,889,890,1163,1164,1169],cost:[1130,1132,1133,1135,1137,1138,1139,1177,1178,1179,1180],cost_fn:[1177,1180],could:1327,count:[40,41,907,908,916,917,918,1181,1244,1249,1251],cours:43,cprint:1325,cpu:[40,41,43,961,998,1000,1006,1007,1010,1035,1038,1041,1069,1070,1077,1087,1088,1096,1097,1103,1104,1129,1181,1237,1238,1239,1240,1241,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1320,1321,1323,1324],creat:[40,41,874,875,876,877,879,961,970,971,1035,1038,1041,1068,1069,1070,1077,1087,1088,1096,1097,1103,1104,1120,1129,1130,1143,1181,1237,1238,1239,1240,1241,1281,1282,1287,1288,1289,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1323,1327],create_if_abs:[40,41],create_vari:1289,creation:[40,41,42,43],creation_funct:[405,406,407,408,409,410,874,875,876,877,878,879],crop:[1146,1150],crop_siz:[1146,1150],cross:[311,740,1035,1275,1276,1277,1278],cross_entropi:1275,cuda:[40,41,961,970,989,1006,1035,1038,1041,1069,1070,1077,1087,1088,1096,1097,1103,1104,1129,1181,1237,1238,1239,1240,1241,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1320,1321],cumprod:[141,311,464,740,1035],cumsum:[740,1035],cumul:[1035,1055,1056],current:[40,41,42,43,961,970,994,995,997,1001,1011,1017,1025,1034,1035,1057,1071,1079,1083,1095,1098,1181,1225,1226,1233,1281,1327],current_framework:59,current_framework_str:[464,740,1035,1181],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1262,1263,1264,1265,1266,1267,1268],d_out:[1262,1263,1264,1265,1266,1267,1268],da_can_termin:1181,da_dim_s:[961,1181],da_direct:1181,da_tune_step:[961,1181],dai:1327,daniel:1281,data:[40,41,42,43,874,875,876,877,878,879,881,882,884,885,886,887,888,889,890,891,892,893,894,896,897,899,900,901,903,904,906,907,908,912,913,916,917,918,920,938,939,945,961,963,964,965,966,967,968,973,974,975,989,1011,1015,1016,1017,1021,1022,1023,1024,1025,1026,1027,1034,1035,1038,1041,1062,1068,1077,1084,1097,1101,1112,1116,1129,1130,1136,1144,1163,1170,1181,1262,1271,1281],data_format:[1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305],data_type_funct:[411,413,414,880,881,882],dataset:[40,41],datatyp:[40,41,1011,1016,1026,1027],dcdw:[1130,1132,1133,1135,1137,1138],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1130,1137,1138,1314,1316,1317],decay_lambda:[1130,1137,1138,1314,1316,1317],decid:[40,41,1327],decompos:[1153,1154,1158],decomposit:[903,905,1153,1154,1158],decor:43,decrement:[1035,1080],dedic:[1130,1144,1287,1288],deep:[40,41,1281],deep_copi:[40,41],deeper:[961,983,987,993,1181,1225,1234,1281],deepli:[1225,1227],def:[43,60,84,224,412,544,681,962,969,972,1012,1013,1014,1131,1181,1185,1192,1281,1290,1293,1296,1323,1324,1327],default_dev:43,default_devic:961,default_dtyp:[43,1011],default_float_dtyp:1011,default_int_dtyp:1011,default_key_color:[40,41,42],default_nod:1181,default_rng:512,default_v:[1035,1058],defaultdevic:[961,962],defaultdtyp:[1011,1012],defaultfloatdtyp:[1011,1013],defaultintdtyp:[1011,1014],defer:43,defin:[43,1035,1054,1096,1129,1237,1239],definit:43,degre:[1163,1175],del:1181,delai:43,delet:43,delta:[1130,1132,1181],delta_dim_s:1181,delta_percent_mem:1181,delta_sf:1181,delta_util:1181,demo:1281,denomin:[1035,1066,1073,1106,1113,1114,1279,1280,1312,1313],denot:43,dens:[1298,1308],depend:[43,884,885,886,889,890,895,896,899,901,903,905,912,913,920,945,1035,1127,1281],depth:[40,41,464,488,961,983,987,993,1035,1075,1096,1181,1225,1234,1310,1311],depth_cutoff:[40,41],depthwis:[1262,1269,1298,1305],depthwise_conv2d:[206,394,526,667,863,1262],depthwiseconv2d:[1281,1298],deriv:[874,877,1130,1132,1133,1135,1137,1138,1139,1225,1227,1234,1281,1310,1314,1318,1320],descend:[903,905,912,913],descent:[1130,1135,1314,1319],describ:[40,41,1244,1245],descript:[903,906],design:[1281,1282],desir:[40,41,961,1006,1011,1015,1035,1038,1041,1077,1078,1097,1129,1146,1151,1181,1244,1246,1247,1248,1250,1252],desired_aspect_ratio:[501,504,1146,1151],desired_percent_increas:1181,detail:1327,detect:[40,41,1225,1226,1233],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,884,885,886,887,889,890,891,892,896,899,900,903,904,906,916,917,918,920,945,961,996,998,999,1008,1011,1015,1016,1022,1025,1026,1027,1034,1035,1037,1038,1041,1042,1043,1076,1079,1083,1084,1116,1126,1130,1136,1163,1170,1177,1178,1179,1180,1181,1262,1273],dev:[40,41,42,43,134,305,405,408,462,464,465,467,477,478,479,486,487,488,489,490,495,512,513,595,732,874,877,961,964,965,967,968,970,971,974,975,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,997,1000,1001,1002,1003,1004,1005,1006,1007,1010,1035,1038,1041,1069,1070,1077,1087,1088,1096,1097,1103,1104,1129,1130,1145,1237,1238,1239,1240,1241,1287,1288,1289,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1320,1321],dev_clon:[40,41,961],dev_clone_arrai:961,dev_clone_it:961,dev_clone_nest:961,dev_dist:[40,41,961],dev_dist_arrai:961,dev_dist_it:961,dev_dist_nest:961,dev_from_str:[43,134,305,462,595,732,961],dev_mapp:961,dev_str:[40,41],dev_to_str:[134,305,462,595,732,961],dev_unifi:961,dev_unify_arrai:961,dev_unify_it:961,dev_unify_nest:961,dev_util:961,devclonedit:961,devcloneditem:961,devclonednest:961,devdistit:961,devdistitem:961,devdistnest:961,develop:[43,1281,1324,1327],deviat:[40,41,1237,1240,1244,1250,1279,1280,1312,1313],devic:[21,40,41,43,405,406,407,410,463,464,476,874,875,876,877,878,879,963,964,965,966,967,968,970,971,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1035,1038,1041,1068,1069,1070,1077,1087,1088,1096,1097,1103,1104,1129,1130,1145,1237,1238,1239,1240,1241,1281,1287,1288,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1320,1321],devmanag:[961,969],devmapp:[961,971],devmappermultiproc:961,diag:[903,905],diagon:[108,241,436,568,705,874,878,903,1035,1077],dict:[15,16,17,18,19,40,41,42,961,963,966,970,971,973,983,984,985,986,987,1035,1059,1060,1061,1089,1177,1178,1179,1181,1225,1227,1228,1229,1232,1234,1287,1288],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,880,881,961,980,981,984,985,1153,1158,1181,1262,1271,1281,1324,1327],differenti:[1281,1324],dilat:[1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305],dim:[40,41,43,903,905,1035,1096,1146,1147,1151,1181,1298,1309],dim_siz:[40,41,961,1181],dimens:[40,41,42,874,878,903,904,905,906,907,908,909,910,916,917,918,961,992,1035,1045,1050,1054,1059,1060,1061,1064,1067,1074,1086,1096,1100,1101,1111,1112,1115,1123,1125,1146,1150,1153,1156,1177,1178,1179,1180,1181,1237,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1259,1262,1263,1264,1265,1266,1267,1268,1269,1272,1275,1277,1278,1298,1299,1300,1301,1302,1303,1304,1305,1308,1309],dimension:[40,41,512,903,905,906,916,917,918,1035,1111,1112],direct:1181,directli:[43,1225,1234,1324,1327],directori:[1035,1108,1119],discord:43,discret:[1275,1277],discuss:43,disk:[40,41,1146,1148],distanc:[1035,1038],distribut:[40,41,961,980,984,985,986,987,1181,1237,1238,1239,1240,1241,1262,1270,1298,1306,1310,1311],distribute_nest:1181,distributedarrai:[40,41],distrubt:[1275,1277],dive:[1281,1324],divid:[40,41,1035,1111,1113,1163],dividend:[1163,1170],divis:[1035,1066,1073,1106,1113,1114,1130,1132,1133,1137,1163,1170,1314,1315,1316],divisor:[1130,1132,1133,1137,1163,1170,1314,1315,1316],doc:1281,docstr:43,document:43,doe:[40,41,43,1035,1038,1111,1323],doesn:[1153,1158,1281],doing:43,domain:[884,885,886,889,890,896,899,900,901,1163,1164],don:[43,1281],done:43,door:1327,dot:[1153,1155,1262,1273,1274,1298,1309],down:1323,downscal:[1035,1048,1049],drag:[1281,1327],draw:[1237,1238,1240,1241],drawn:[1237,1238,1239,1240,1241],drop:[1281,1327],dropout:[1262,1281,1298,1309],dropout_r:[1298,1309],ds_tune_step:961,dtype:[40,41,43,141,311,405,406,407,408,410,411,413,414,464,465,467,468,476,479,495,602,740,874,875,876,877,879,880,881,882,909,910,1015,1016,1017,1018,1019,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1038,1041,1068,1077,1096,1097,1129],dtype_bit:[141,311,464,602,740,1011],dtype_from_str:[43,141,311,464,602,740,1011],dtype_in:[464,473,474,475,1011,1017,1022,1023,1024,1025,1026,1027,1034],dtype_to_str:[141,311,464,602,740,1011],duplic:[40,41,43],dure:[40,41,43,959,960,1035,1124,1130,1132,1133,1137,1177,1178,1179,1180,1310,1311,1314,1315,1316,1318],dynam:[43,464,469,959,960],each:[40,41,42,43,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,905,920,939,945,961,970,971,980,981,982,983,984,985,986,992,1004,1005,1035,1036,1037,1051,1062,1100,1111,1115,1118,1128,1130,1133,1135,1137,1138,1139,1146,1149,1163,1165,1170,1172,1173,1181,1225,1229,1237,1238,1244,1245,1262,1263,1264,1265,1266,1267,1268,1269,1270,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1324],eager:1324,easi:1327,easili:1281,econom:1327,ecosystem:1281,edg:[1035,1047,1051,1128],effect:[1130,1139],effective_grad:[1130,1139],effici:1327,einop:[40,41,1035,1059,1060,1061],einops_rearrang:[40,41,1035],einops_reduc:[40,41,1035],einops_repeat:[40,41,1035],einstein:[40,41,1244,1245],einsum:[40,41,192,382,514,657,843,1244],either:[40,41,43,884,896,899,1035,1058,1089,1092,1094,1177,1178,1179,1180,1181,1298,1309,1310,1311,1324],eleg:1181,element:[40,41,43,512,874,878,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,907,908,914,915,916,917,918,920,938,939,945,961,982,986,992,1011,1015,1035,1036,1038,1040,1042,1043,1047,1048,1049,1055,1056,1062,1065,1066,1077,1078,1091,1093,1100,1102,1111,1122,1127,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1181,1244,1245,1247,1249,1251,1254,1255,1256,1257,1258,1259,1260,1261,1262,1270,1298,1306],elementwis:[40,41,920,938],elementwise_affin:[1312,1313],elementwise_funct:[884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901],elemtn:[1237,1238],elif:1181,els:[43,1035,1044,1058,1063,1181],elsewher:[1035,1127],emphas:1281,empti:[40,41,77,217,405,537,674,874,916,917,918,1153,1158,1181],enabl:[40,41,42,43,1281],encapsul:[880,882],encod:[1035,1067,1146,1148],end:[1035,1038,1281,1324],engag:43,ensur:43,entir:[40,41,916,917,918,961,1005,1181,1281,1298,1307],entri:[40,41,1035,1087,1088,1111,1112],entropi:[1275,1276,1277,1278],enumer:1181,environ:1281,eps:[411,880,881],epsilon:[1130,1132,1133,1137,1275,1276,1277,1278,1279,1280,1312,1313,1314,1315,1316],equal:[40,41,88,416,548,685,884,891,903,904,912,913,1035,1037,1042,1043,1051,1111,1128,1163,1175,1237,1241],equality_matrix:[1035,1037],equat:[40,41,1244,1245],equival:[884,897,903,906,1035,1038,1163,1175],erf:[510,824,1163],error:[40,41,43,961,1035,1112,1163,1171,1181,1254,1255,1310,1311,1314,1318],essenti:43,etc:[40,41,43,961,1006,1035,1038,1041,1069,1070,1077,1087,1088,1096,1097,1103,1104,1129,1181,1237,1238,1239,1240,1241,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1320,1321,1327],euclidean:[903,906],euler:873,evalu:[40,41,884,895,896,898,916,917,918,1035,1092,1225,1226,1233],even:[43,1327],evenli:[40,41,1035,1038,1087,1088,1111],everi:[43,1035,1037,1327],exact:[40,41],exampl:[43,959,960,1035,1047,1115,1153,1158,1281,1323,1324,1327],example_input:[464,469,959,960],exc_tb:1181,exc_typ:1181,exc_val:1181,exce:[1035,1093],except:[40,41,44,47,916,917,918,1035,1038,1044,1050,1058,1124,1181],excess_s:1181,excit:[1281,1324],exclud:[59,61,1035,1038,1237,1241],exclus:[40,41,464,471,484,496,498,1035,1055,1084,1130,1136,1237,1239],execut:[43,1035,1124,1324],execute_with_gradi:[172,359,496,637,804,1130,1281,1323],exist:[40,41,1035,1058,1181,1281,1314,1318,1327],exp:[824,1163],expand:[40,41,1035,1064,1067],expand_dim:[40,41,311,740,1035,1181],expect:[1035,1039],explain:[43,1324],explicitli:[43,1298,1307,1309,1310,1311,1324],expon:[43,920,945,1035,1114],exponenti:[43,920,945,1163,1171,1172],expos:[1035,1041,1052],express:[884,889,899,1035,1092],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1130,1134],eye:[1153,1155],fabian:1281,fabio:1281,factor:[903,905,961,970,1003,1004,1005,1130,1132,1133,1137,1138,1181,1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305,1314,1315,1316,1317],fail:43,falck:1281,fall:[1310,1311,1314,1318],fallback_to_non_compil:[1310,1311,1314,1318],fals:[15,18,19,40,41,42,59,66,67,68,69,70,462,464,471,472,484,491,494,496,497,498,505,506,884,891,892,897,903,906,909,910,912,913,914,915,916,917,918,961,979,992,1000,1005,1010,1011,1018,1019,1020,1021,1035,1037,1055,1058,1063,1067,1074,1084,1089,1109,1111,1125,1127,1130,1133,1134,1135,1136,1137,1138,1139,1153,1156,1177,1178,1179,1180,1181,1225,1226,1227,1229,1233,1234,1244,1246,1247,1248,1249,1250,1251,1252,1287,1288,1310,1311,1314,1315,1316,1317,1318,1319],fan_in:1289,fan_mod:1289,fan_out:1289,far:[1225,1226,1233,1323],faster:[959,960],favourit:[1281,1323],feasibl:1327,feat_dim:[1262,1273,1274],fed:[961,1005,1181],feed:[961,1005,1181],few:43,field:1327,file:[40,41,43,1035,1108,1119,1310,1311],filepath:[40,41],fill:[40,41,874,875,876,877,879,1035,1068,1097,1237,1239],fill_valu:[464,476,1035,1068],filter:[1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305,1327],filter_s:[1298,1299,1300],filter_shap:[1298,1301,1302,1303,1304,1305],find:[40,41,43,1327],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,223,224,411,412,543,544,680,681,880],finish:[1281,1327],finit:[884,891],first:[40,41,43,512,884,887,893,894,903,904,905,920,938,959,960,961,992,1035,1042,1050,1054,1062,1087,1088,1115,1117,1130,1134,1177,1178,1179,1180,1181,1225,1226,1233,1237,1243,1244,1249,1251,1298,1309,1310,1311,1314,1318,1324,1327],firstlayersiren:[1281,1289],firstli:[1324,1327],fist:[961,1005,1181],fit:[40,41,462,464,496,501,505,509,510,512,1035,1100,1146,1151],fix:43,fkt:1327,flag:[40,41,43,1130,1136],flat:[40,41,43,1035,1100,1103],flat_list:[40,41],flatten:[40,41,903,906,909,910,1035,1067,1100,1244,1246,1247,1248,1250,1252],flatten_key_chain:[40,41,1310,1311],flexibl:[1281,1324],flip:[40,41,112,245,440,572,709,907],float32:[43,464,479,1011,1015,1023,1024,1035,1038,1041,1077,1097,1129],float_dtyp:[1011,1019,1029],float_img_to_uint8_img:1146,floor:[311,464,740,1035,1066,1181],floormod:[311,464,740,1035],fluid:1327,folder:[43,1281],follow:[40,41,43,880,882,903,906,961,1005,1035,1080,1081,1082,1113,1114,1130,1133,1135,1137,1138,1139,1181,1225,1229,1234,1262,1273,1274,1281,1298,1308,1314,1318],followng:[880,881],fomaml_step:1177,forget:[1130,1132,1133,1137,1314,1315,1316],fork:[1035,1094,1281,1282],forkserv:[1035,1094,1181],form:[15,16,17,18,19,40,41,874,878,903,904,1035,1041,1130,1133,1135,1137,1138,1139,1225,1227,1234,1262],format:[40,41,43,961,979,1011,1015,1017,1021,1035,1038,1041,1077,1097,1129,1181,1244,1245,1281,1323,1324],format_fn:[40,41],format_key_chain:[40,41],forward:[1310,1311,1314,1318,1323],found:[40,41,42],fourier:[1035,1067],fourier_encod:1035,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,113,115,118,120,122,123,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,176,177,178,180,181,182,186,187,188,189,190,191,193,194,195,196,197,198,199,202,204,205,207,208,209,210,211,212,213,218,219,220,221,222,224,225,226,229,230,231,232,233,234,235,236,237,238,239,242,243,244,246,248,251,254,255,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,363,365,366,367,369,370,371,372,374,375,378,379,380,381,383,384,385,386,387,388,389,390,393,395,396,397,398,399,400,401,406,407,408,409,410,412,413,414,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,437,438,439,441,443,446,448,450,451,463,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,497,498,499,500,502,503,504,506,507,508,511,513,515,516,517,518,519,520,521,524,525,527,528,529,530,531,532,533,538,539,540,541,542,544,545,546,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,569,570,571,573,575,578,580,582,583,591,596,597,598,599,600,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,638,639,640,641,643,644,645,647,648,649,653,654,655,656,658,659,660,661,662,663,664,668,669,670,675,676,677,678,679,681,682,683,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,706,707,708,710,712,715,717,719,720,728,733,734,735,736,737,738,739,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,811,812,813,815,816,817,818,819,820,822,823,825,826,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,844,845,846,847,848,849,850,853,854,855,856,857,858,859,861,862,864,865,866,867,868,869,870,875,876,877,878,879,881,882,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,904,905,906,908,910,913,914,915,917,918,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1255,1256,1257,1258,1259,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1280,1281,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1313,1314,1315,1316,1317,1318,1319,1321,1322,1323,1324,1326,1327],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1181,framewrk:[1035,1094],free:43,freed:43,freeli:43,frequenc:[1035,1067],from:[40,41,42,43,874,877,884,900,903,904,907,908,914,915,916,917,918,961,970,971,1005,1011,1017,1035,1058,1069,1070,1077,1101,1112,1120,1127,1130,1133,1137,1146,1150,1153,1158,1177,1178,1179,1180,1181,1225,1227,1234,1237,1238,1239,1240,1241,1244,1249,1251,1262,1270,1273,1281,1287,1288,1298,1306,1309,1314,1318,1323,1324],from_cal:[1310,1311],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,141,311,464,602,740,880,881,1035,1153,1158,1281],full_matric:[903,905],fulli:[43,1281,1298,1308,1309,1323],func:[40,41,464,469,496,497,959,960,961,1005,1035,1046,1130,1134,1181],further:[43,1327],furthermor:1327,futur:1327,gain:1289,gamma:[1279,1280],gather:[40,41,141,311,464,602,740,1035,1070],gather_nd:[40,41,141,311,464,602,740,1035],gauss:[1163,1171],gaussian:[1254,1255],geglu:[1281,1284],gelu:[392,523,852,1254,1281,1284],gener:[23,40,41,43,462,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,512,959,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1136,1237,1239,1241,1242,1281,1314,1318],geometr:[1035,1067],get:[40,41,43,880,881,882,961,970,971,979,994,995,1000,1004,1007,1010,1011,1021,1022,1035,1039,1071,1072,1073,1099,1181,1281,1298,1307,1327],get_all_arrays_in_memori:1035,get_all_arrays_on_dev:961,get_framework:59,get_initial_st:[1298,1307],get_min_bas:1035,get_min_denomin:1035,get_mod_kei:[1310,1311],get_num_dim:[464,740,1035],get_referrers_recurs:1035,getfullargspec:1181,gist:1281,give:[43,1035,1101,1324],given:[40,41,43,874,875,907,908,961,994,1000,1003,1004,1005,1007,1010,1011,1015,1035,1038,1041,1047,1055,1056,1070,1087,1088,1097,1100,1103,1104,1111,1118,1123,1125,1129,1130,1132,1133,1135,1137,1138,1139,1153,1155,1159,1163,1164,1181,1225,1230,1231,1237,1240,1241,1243,1244,1247,1249,1250,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1287,1288,1327],global:[40,41,42,961,970,971,978,1003,1004,1005,1011,1018,1019,1020,1035,1057,1072,1073,1099,1105,1106,1107,1113,1114,1130,1145,1181,1279,1280,1312,1313],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1281,1289,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308],good:43,googl:1281,got:[43,1281],gpu0:43,gpu2:43,gpu:[961,996,999,1181],gpu_is_avail:[462,961,1181],grad:[1281,1314,1318,1323],gradient:[25,40,41,497,498,499,500,961,1005,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1149,1177,1178,1179,1180,1281,1314,1315,1316,1317,1318,1319,1323,1327],gradient_descent_upd:[1130,1177,1178,1179,1180],gradient_imag:[175,364,501,642,810,1146],gradienttrack:[1130,1131],graph:[1130,1133,1135,1137,1138,1139,1310,1311],greater:[40,41,1035,1038,1065,1112,1237,1241],green:[40,41,42,1325,1326],grid:[1035,1092],group:[1146,1151],guid:[43,1281,1282,1327],gym:1281,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1327,half:[1035,1038,1181,1237,1241],hand:1281,handl:[40,41,42,43,959,960,961,977,979,988,989,1000,1007,1010,1130,1133,1135,1137,1138,1139,1181,1314,1315,1316,1317,1318,1319],happen:43,has:[40,41,43,909,910,1035,1115,1153,1158,1163,1166],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1035],hasattr:1181,have:[40,41,43,874,875,876,877,878,879,880,881,884,885,886,887,888,889,890,891,892,893,894,896,897,899,900,901,903,904,905,906,907,908,909,910,912,913,916,917,918,920,938,939,945,1035,1050,1054,1059,1060,1061,1062,1068,1115,1130,1136,1144,1163,1170,1181,1281,1323,1324],haven:43,hdf5:[40,41,1310,1311],head:[1262,1273,1298,1309],head_dim:[1298,1309],height:[1146,1151],height_cutoff:[40,41],help:[43,59,411,462,463,961,973,974,975,976,1011,1130,1281,1289,1291,1292,1294,1295,1297],here:[43,1281],hidden:[1262,1272,1298,1307],hierarch:[1035,1052],hierarchi:[40,41],high:[40,41,512,1237,1239,1241],higher:[903,905,1130,1133,1135,1137,1138,1139],highest:[1237,1239],highest_util:1181,highest_util_nod:1181,highli:1281,highlight:1327,hint:43,hkt:1327,hold:[1011,1015,1035,1038,1041,1103,1104],host:1281,hot:[1035,1096],hour:43,how:[1281,1298,1309,1310,1311,1324,1327],howev:[43,1324],http:1327,hyperbol:[884,885,886,890,901,1163,1168,1169,1174,1176,1254,1261],hypothet:[43,1327],icon:1281,idea:1281,ident:[40,41,43,141,311,464,602,740,1035],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[873,880,881,884,900],if_exist:[40,41],ignor:[40,41,1314,1318],ignore_key_error:[40,41],ignore_miss:[1314,1318],ignore_non:[40,41],iii:43,iinfo:[83,223,411,543,680,880],imag:[27,502,503,504,1035,1086,1147,1148,1149,1150,1151,1152,1262,1263,1264,1265,1266,1268,1269,1281,1327],image_dim:[1146,1150],imkkhk:1327,immedi:[1281,1324,1327],implement:[43,884,885,886,889,890,895,896,899,901,912,913,920,945,1281,1324,1327],in_featur:[1262,1271],inadvert:43,includ:[40,41,43,903,906,916,917,918,1035,1038,1076,1113,1114,1126,1225,1226,1237,1241,1298,1308,1309,1312,1313,1323],include_deriv:[1225,1227,1234],include_empti:[40,41],include_inf:[40,41,1035,1076,1126],include_nest:[1225,1226],include_self:[40,41],inclus:[43,1237,1239],incom:[1262,1271],increas:[961,983,987,993,1035,1051,1064,1128,1181,1225,1234],increasingli:1327,increment:[1035,1081,1181],inde:1281,indent:[40,41,42],independ:[1237,1238],index:[40,41,464,512,909,910,912,913,1035,1040,1069,1070,1092,1112,1115,1225,1228,1230,1231,1232,1235],index_nest:1225,indic:[40,41,464,477,478,488,489,490,903,906,909,910,912,913,1035,1040,1069,1070,1078,1096,1103,1104,1225,1226,1228,1230,1231,1232,1233,1235,1236,1237,1238,1254,1259,1262,1263,1264,1265,1266,1267,1268,1269,1279,1280,1298,1299,1300,1301,1302,1303,1304,1305,1310,1311],indices_wher:[141,311,464,740,1035],indistinguish:[884,900],inevit:1327,inf:[40,41,903,906,1035,1076,1085,1126,1163,1166],infer:[874,877,914,915,959,960,1035,1074,1077,1101,1109,1146,1150,1153,1158,1324,1327],infin:[884,885,886,888,889,890,891,896,899,900,901,903,906,916,917,918,1035,1085],infinit:[884,900],inform:[880,881,882,1130,1141],init_c:[1262,1272],init_h:[1262,1272],init_on_first_step:[1314,1318],initi:[40,41,42,43,59,411,462,463,961,973,974,975,976,1011,1130,1181,1262,1272,1281,1291,1292,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1314,1318],initialz:[1310,1311],inner:[1177,1178,1179,1180],inner_batch_fn:[1177,1178,1179],inner_batch_shap:[1262,1271],inner_cost_fn:[1177,1178,1179],inner_grad_step:[1177,1178,1179,1180],inner_learning_r:[1177,1178,1179,1180],inner_optimization_step:[1177,1178,1179,1180],inner_v:[1177,1178,1179],innermost:[874,878,903,904],inp:1181,inplac:[40,41,1035,1044,1079,1083,1116,1130,1133,1135,1137,1138,1139,1287,1288,1314,1315,1316,1317,1318,1319],inplace_arrays_support:[464,1035],inplace_decr:[141,311,464,602,740,1035],inplace_incr:[141,311,464,602,740,1035],inplace_oper:[0,11,12],inplace_upd:[40,41,141,311,464,602,740,1035,1287,1288],inplace_variables_support:[464,1035],input:[15,18,19,40,41,42,43,874,877,878,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909,910,912,913,914,915,916,917,918,959,960,961,970,971,978,979,980,983,984,987,993,1005,1006,1011,1015,1016,1018,1019,1020,1021,1022,1026,1027,1035,1036,1037,1040,1042,1043,1044,1045,1047,1048,1049,1050,1051,1053,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1074,1076,1077,1078,1080,1081,1082,1084,1085,1086,1090,1091,1092,1093,1100,1102,1109,1110,1112,1115,1116,1117,1118,1120,1121,1122,1123,1125,1126,1128,1130,1134,1136,1141,1145,1146,1147,1148,1149,1150,1152,1153,1156,1158,1160,1161,1162,1163,1166,1168,1169,1170,1174,1175,1176,1177,1178,1179,1180,1181,1237,1238,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1279,1280,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1312,1313,1324],input_ax:[961,1005,1181],input_channel:[1298,1299,1300,1301,1302,1303,1304,1307,1308],input_queu:1181,inputs_split:1181,insert:[909,910,1035,1064],insid:43,inspect:1181,inspir:1327,instal:1281,instanc:[15,16,17,18,19,40,41,43,512,920,938,939,945,961,970,1181,1287,1288,1320,1321],instead:[40,41,43,512,1244,1246,1247,1248,1249,1250,1251,1252,1327],int32:43,int64:[1011,1015,1035,1038,1041,1077,1097,1129],int_dtyp:[1011,1020,1030],integ:[40,41,512,880,882,884,887,888,903,906,916,917,918,1011,1027,1035,1038,1065,1102,1111,1237,1239,1242],integr:1281,intend:43,inter:1281,interact:1281,interchang:[40,41,1035,1117],interest:1281,interfac:[1035,1041,1324],intermedi:[40,41],intern:[40,41,961,1130,1144,1181,1225,1226,1233,1234,1289,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1320,1321],interpol:[1035,1086],intersect:[1163,1164],interv:[40,41,916,917,918,1035,1038,1047,1087,1088,1163,1165,1237,1241],introduc:1327,inv:[814,1153,1327],invalid:[916,917,918],invalid_dtyp:1011,invers:[884,885,886,1153,1155,1157,1163,1164,1165,1166,1168,1327],invert:[1153,1155,1157],invest:1327,investig:43,invoc:[959,960],irrespect:1281,is_al:1181,is_arrai:[141,311,464,602,740,1035,1181],is_float_dtyp:1011,is_int_dtyp:1011,is_mean:1181,is_sum:1181,is_vari:[172,359,496,637,804,1130],isfinit:[88,228,416,548,685,884],isinf:[311,602,740,1035],isinst:1181,isnan:[88,228,416,548,685,884],isnumer:1181,issu:[1281,1282],issue_numb:43,item:[15,19,40,41,920,932,933,961,970,971,973,980,982,984,986,992,1011,1018,1035,1052,1075,1113,1114,1181,1225,1229,1230,1231,1234,1235,1236,1281,1310,1311,1323],iter:[15,16,17,18,19,40,41,42,959,960,961,964,965,967,968,970,971,974,975,982,984,985,986,987,992,1005,1035,1037,1045,1050,1051,1077,1092,1097,1100,1101,1104,1109,1111,1115,1118,1123,1128,1181,1225,1226,1227,1229,1233,1234],iterbal:[961,982,986,992,1181],its:[512,961,1005,1035,1077,1101,1117,1123,1181,1281],itself:[43,1225,1234],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,405,406,407,408,409,410,411,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,873,874,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909,910,912,913,914,915,916,917,918,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,970,971,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1291,1292,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1325,1326],ivy_backend:[40,41],ivy_bay:1327,ivy_test:43,ivyfcmodel:1323,ivyh:[40,41,42],ivymodul:[203,860],jame:1281,jax:[43,1130,1136,1281,1327],jax_concat:1281,jnp:1281,join:[40,41,1035,1050,1115,1181],journal:1281,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1281,1298,1307,1327],kaimingnorm:[1289,1293],kalman:1327,kalman_filt:1327,kalman_filter_step:1327,kalman_filter_upd:1327,keep:[40,41,961,1006,1035,1125,1181,1281,1282,1327],keep_inner_v:[1177,1178,1179],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1177,1178,1179],keepdim:[40,41,464,494,505,506,903,906,909,910,914,915,916,917,918,1035,1125,1153,1156,1244,1246,1247,1248,1249,1250,1251,1252],kei:[15,16,17,40,41,42,43,920,925,961,973,1035,1052,1177,1178,1179,1181,1225,1228,1232,1262,1273,1274,1281,1287,1288,1298,1309,1314,1318],kept:[40,41,42,1177,1178,1179],kera:1327,kernel:[1262,1272],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,961,970,971,983,987,993,1035,1039,1059,1060,1061,1089,1181,1225,1229,1310,1311],keyword_color_dict:[40,41,42],kind:[880,881,882,1327],kwarg:[15,16,17,40,41,42,59,63,961,970,983,987,993,1035,1089,1181,1287,1288,1310,1311],kwarg_stateful_idx:[1310,1311],kwargs_clon:1181,kwargs_dist:1181,kwargs_uni:1181,label:[43,1275,1276,1277,1278],lamb:[1130,1137,1281,1314],lamb_upd:1130,lambda:[1181,1314,1317,1319,1323],lar:[1130,1137,1138,1281,1314],larger:[880,881,1035,1047],largest:[40,41,880,881,882,1035,1065],lars_upd:1130,last:[40,41,903,904,905,907,908,912,913,916,917,918,1035,1038,1054,1086,1111,1115,1153,1156,1244,1249,1251,1254,1259,1262,1272,1298,1308],later:[40,41,1035,1046],latest:[1298,1307],layer:[1130,1133,1135,1137,1139,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1279,1280,1281,1289,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1320,1321,1327],layer_norm:1279,layernorm:[1281,1312],layerwis:[1130,1138,1314,1317],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1225,1226,1233],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1254,1255,1256],leaky_relu:[852,1254],learn:[914,915,1130,1133,1135,1137,1138,1139,1153,1158,1177,1178,1179,1180,1237,1243,1281,1314,1315,1316,1317,1318,1319,1324,1327],learnabl:[1279,1280,1312,1313],least:43,leav:[15,18,19,40,41,1225,1226,1227,1233,1234],left:[40,41,43,909,910,1153,1156,1244,1246,1247,1248,1249,1250,1251,1252,1281],leftmost:[40,41],len:1181,length:[40,41,42,1035,1038,1101,1112,1123],lenton2021ivi:1281,lenton:1281,less:[40,41,43,88,228,416,548,685,884,885,888,896,900,903,906,1181,1237,1241],less_equ:[88,416,548,685,884],less_util_node_str:1181,let:[1324,1327],level:1281,librari:[884,897,1281,1323,1327],lightweight:1281,like:[43,1130,1136,1237,1241,1281,1323,1324,1327],likewis:43,limit:[40,41,42,43,880,881,882,1035,1047,1048,1049],linalg:[29,1154,1155,1156,1157,1158,1159,1281],line:43,linear0:[1281,1323],linear1:1281,linear2:1323,linear:[1035,1067,1086,1153,1254,1255,1256,1257,1262,1270,1281,1298,1299,1300,1301,1302,1303,1304,1305,1323],linear_algebra:[505,506,507,508,903,904,905,906],linear_resampl:[141,311,464,602,740,1035],linearli:[1035,1067],link:[43,1281],linspac:[141,311,464,602,740,1035,1038],list:[15,18,19,40,41,405,406,407,410,874,875,876,879,907,908,916,917,918,961,970,971,980,981,983,984,985,987,990,991,1005,1035,1038,1041,1043,1092,1110,1111,1120,1125,1177,1178,1179,1181,1225,1226,1227,1229,1233,1234,1262,1263,1264,1265,1266,1267,1268,1269,1281,1282,1287,1288,1298,1299,1300,1301,1302,1303,1304,1305],list_join:[40,41,42],list_stack:[40,41],liter:[903,906],littl:1324,load:[40,41],loaded_kwarg:1181,loader:1281,local:43,local_set:[1035,1075],locat:[43,1035,1085,1237,1238],log1p:[88,416,548,685,884],log2:[88,416,548,685,884],log:[824,884,895,1035,1088,1163,1181,1275,1276,1277,1278],logarithm:[884,895,896,1163,1173],logic:[31,884,897,916,917,918,1161,1162,1281],logical_and:[373,821,1160],logical_not:[88,228,416,548,685,884],logical_or:[373,821,1160],logit:[1275,1278],logspac:[141,311,464,602,740,1035],look:[43,1324,1327],loop:[1177,1178,1179,1180],loss:[1276,1277,1278,1281,1323],loss_fn:[1281,1323],lot:1324,low:[40,41,512,1237,1239,1241],lower:[40,41,43,874,878,1035,1091,1237,1241],lower_depth:[1310,1311],lowest:[15,18,19,40,41,1225,1234,1237,1239],lstm:[1262,1272,1281,1298],lstm_updat:[43,1262],machin:[880,881,882,914,915,1153,1158,1237,1243,1281,1324,1327],made:43,mai:[884,894,897,912,913,1035,1038,1058,1062,1281,1324,1327],main:[874,878,903,904,1035,1077,1281],mainli:1281,maintain:[43,912,913],make:[43,512,961,1181,1281,1324],maml:[1177,1178,1179],maml_step:1177,manag:[961,1181],manhattan:[903,906],mani:[40,41,43,1035,1111,1281],manipulation_funct:[907,908],manner:[15,18,19,40,41,43,1225,1234],manual:[1225,1226,1233,1327],map:[40,41,42,961,970,1035,1085,1181,1225,1230,1231,1234,1298,1309,1323],map_cont:[40,41],map_nest_at_index:1225,map_nest_at_indic:1225,map_sequ:[40,41],mapper:[961,970,971,1181],mark:43,mask:[1262,1273,1274],master:43,match:[40,41,1035,1089],match_kwarg:1035,math:[33,511,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1181,1281],mathbb:[1153,1159],mathbf:[1153,1159],mathemat:[873,903,906],matmul:[43,311,464,602,740,1035,1327],matplotlib:1324,matric:[874,878,903,904,1262,1271],matrix:[40,41,874,878,903,904,1035,1037,1048,1090,1153,1154,1155,1156,1157,1158,1159,1262,1271,1298,1308],matrix_norm:[40,41,179,368,505,646,814,1153],matter:1281,max:[40,41,411,880,881,882,1035,1048,1049,1060,1091,1103,1104,1181,1244,1246,1314,1316],max_batch_s:[40,41],max_chunk_s:[961,1005,1181],max_depth:[40,41,961,965,968,975,983,987,993,1035,1075,1181,1225,1234],max_dev_dim_step_ratio:961,max_freq:[1035,1067],max_length:[40,41],max_node_dim_step_ratio:1181,max_norm:[40,41,1035,1048,1049],max_split_factor_step_s:[961,1181],max_trust_ratio:[1130,1137,1314,1316],maxim:[1281,1324,1327],maximis:1281,maximum:[40,41,42,740,909,910,961,983,987,993,1005,1035,1047,1048,1049,1067,1130,1137,1181,1225,1234,1244,1246],mayb:[15,18,19],mdi:1181,mean:[40,41,512,961,990,991,992,993,1005,1035,1060,1177,1178,1179,1180,1181,1225,1229,1237,1240,1244,1247,1250,1252,1289,1323,1327],measur:[1262,1273,1298,1309],mech:1281,mechan:[1281,1327],medic:1327,member:43,memori:[961,977,1000,1005,1007,1010,1181,1262,1272,1281],mention:43,merg:43,merge_with_upstream:43,meshgrid:[311,464,740,1035],messag:[1325,1326],meta:[35,1178,1179,1180,1281],method:[40,41,42,43,512,1035,1041,1052,1092,1103,1104,1130,1137,1138,1181,1225,1226,1233,1234,1281,1298,1309,1310,1311,1324],might:[1035,1058,1327],min:[40,41,119,411,447,579,716,880,881,882,903,906,914,1035,1060,1093,1103,1104,1113,1153,1158,1181,1244,1248],min_bas:[1035,1114],min_denomin:[1035,1113],min_dev_dim_s:961,min_node_dim_s:1181,min_sf_tune_step:[961,1181],min_unit_dev_tune_step:961,min_unit_node_tune_step:1181,mind:1281,mini:[1279,1280,1312,1313],minimum:[40,41,740,914,915,961,1011,1015,1035,1038,1040,1041,1047,1072,1073,1105,1106,1113,1114,1181,1244,1248],miss:[1314,1318],ml_framework:[1035,1038,1153,1158],mod:[1035,1066],mod_depth:[1310,1311],mod_height:[1310,1311],mod_with_top_mod_key_chain:[1310,1311],mode:[40,41,505,507,903,905,959,960,961,990,991,992,993,1005,1153,1158,1181,1324],model:[1281,1323],modul:[40,41,42,59,1035,1094,1181,1281,1282,1284,1285,1286,1287,1288,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1312,1313,1320,1321,1327],moment:[1130,1132,1133,1137,1314,1315,1316],more:[43,907,908,1035,1115,1181,1281,1324,1327],more_util_node_str:1181,most:[40,41,43,1153,1158,1281,1327],move:[40,41,43,961,1006,1181],much:[43,1281,1327],multi:[512,1035,1094,1262,1273,1298,1309],multi_head_attent:1262,multi_index_nest:1225,multi_map:[40,41],multi_nod:1181,multidev:[961,972,973,974,993],multidevcontain:[40,41],multidevic:[961,970],multidevit:[961,964,967,970,971,975],multidevitem:[961,963,966],multidevnest:[961,965,968],multiheadattent:[1281,1298],multinod:[1181,1185],multinodecontain:1181,multinodeit:1181,multinodeitem:1181,multinodenest:1181,multinomi:[185,377,512,652,836,1237],multipl:[40,41,916,917,918,1035,1089,1111,1153,1155,1244,1246,1247,1248,1249,1250,1252,1279,1280,1298,1308,1324],multipli:[40,41,1035,1055,1244,1249],multiprocess:[40,41,42,464,740,961,970,1035,1181],must:[40,41,42,43,874,875,876,877,878,879,884,885,886,887,888,889,890,891,893,894,896,897,899,900,901,903,904,906,907,908,912,913,914,915,916,917,918,920,938,939,945,961,990,991,992,993,1005,1035,1038,1050,1052,1054,1062,1091,1093,1104,1115,1163,1167,1170,1181,1237,1242,1314,1318],mutabl:[1225,1227,1234],mutlidevic:[961,970],mutlinod:1181,mw_tm1:[1130,1133,1137],mx_concat:1281,mxn:[874,878,903,904],mxnet:[43,1281,1327],my_func:43,mymodel:1281,name:[43,959,960,1323],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1324],nan:[40,41,43,873,884,885,886,888,889,890,891,892,896,899,900,916,917,918,1035,1076,1126],nativ:[15,17,18,19,40,41,43,961,977,979,988,989,1000,1007,1010,1011,1016,1023,1024,1181,1281,1282,1287,1288],native_modul:[1287,1288],native_module_class:[1287,1288],nativearrai:[15,18,19,43,874,877,878,880,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,905,906,907,908,909,910,912,913,914,915,916,917,918,920,938,939,945,961,979,1005,1006,1011,1015,1021,1026,1027,1035,1036,1037,1038,1040,1041,1042,1043,1045,1047,1048,1049,1050,1051,1053,1054,1055,1056,1059,1060,1061,1062,1064,1065,1066,1067,1069,1070,1074,1076,1077,1078,1085,1086,1087,1088,1090,1091,1092,1093,1096,1097,1100,1101,1102,1103,1104,1109,1111,1112,1115,1117,1118,1120,1121,1122,1123,1125,1126,1127,1128,1129,1181,1225,1227,1234],natur:[884,895,1163,1173,1327],ncdhw:[1262,1267,1268,1298,1303,1304],nchw:[1262,1265,1266,1269,1298,1301,1302,1305],ncw:[1262,1263,1264,1298,1299,1300],ndarrai:[43,405,406,407,408,409,410,411,413,414,512,1035,1121],ndhwc:[1262,1267,1268,1298,1303,1304],nearest:[1035,1102],need:[43,1035,1048,1049,1262,1264,1266,1268,1281,1298,1300,1302,1304,1327],neg:[40,41,88,228,416,548,685,884,891,903,906,907,908,916,917,918,1244,1249,1251,1254,1256],negative_slop:1289,neither:1181,nest:[15,16,17,18,19,40,41,42,961,983,987,993,1035,1041,1120,1177,1178,1179,1181,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1310,1311,1314,1315,1316,1317,1318,1319],nested_indices_wher:1225,nested_map:[1181,1225],network:[1262,1271,1281,1282,1284,1298,1310,1311,1327],neural:[1262,1281,1284,1298,1323],never:43,new_node_percent_mem:1181,new_node_util:1181,new_node_utils_kei:1181,new_std:[1279,1280,1312,1313],newli:[43,959,960,1035,1045,1046],newlin:[40,41,42],newshap:[1035,1045,1101],next:[880,881,1181,1310,1311,1314,1315,1316,1317,1318,1319],nhwc:[1262,1265,1266,1269,1298,1301,1302,1305],node:[40,41,1225,1226,1233],node_clon:1181,node_dist:1181,node_dist_arrai:1181,node_dist_it:1181,node_in:1181,node_mapp:1181,node_str:1181,node_to_str:1181,node_util:1181,nodedistit:1181,nodedistitem:1181,nodedistnest:1181,nodemanag:[1181,1192],nodemapp:1181,nodemappermultiproc:1181,noinspect:[43,962,1012,1013,1014,1131,1181],non:[40,41,884,897,903,906,916,917,918,959,960,1011,1025,1310,1311,1314,1318,1324],none:[40,41,42,43,59,61,64,405,406,407,408,410,462,464,465,467,469,476,477,478,479,486,487,488,489,490,491,492,493,495,505,506,512,513,874,875,876,877,879,880,881,882,903,906,907,908,909,910,914,915,916,917,918,959,960,961,970,971,977,978,1003,1004,1005,1006,1011,1018,1019,1020,1035,1038,1041,1057,1058,1063,1068,1069,1070,1075,1077,1079,1080,1081,1082,1083,1087,1088,1094,1096,1097,1100,1103,1104,1105,1106,1111,1112,1113,1114,1123,1124,1129,1130,1133,1135,1137,1138,1139,1145,1146,1150,1153,1156,1158,1177,1178,1179,1180,1181,1225,1226,1229,1233,1234,1237,1238,1239,1240,1241,1244,1246,1247,1248,1249,1250,1251,1252,1262,1264,1266,1268,1271,1272,1273,1274,1279,1280,1287,1288,1289,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321],norm:[40,41,903,906,1035,1048,1049,1153,1156,1280,1281,1313,1314,1316],normal:[1237,1240,1279,1280,1312,1313],normalized_idx:[1279,1280],normalized_shap:[1312,1313],notat:[40,41,1244,1245],note:[43,1153,1158],noth:[40,41,1324],notimplementederror:1181,now:[40,41,43,961,1006,1035,1036,1181,1281,1298,1309,1310,1311,1323,1324,1327],np_concat:1281,np_finfo:411,ns_tune_step:1181,num:[464,486,487,1035,1087,1088],num_arrai:[40,41],num_arrays_in_memori:1035,num_arrays_on_dev:961,num_band:[1035,1067],num_channel:[1298,1305],num_chunk:1181,num_chunks_floor:1181,num_class:[1237,1238],num_cpu_cor:961,num_gpu:[134,462,961,1181],num_head:[1262,1273,1298,1309],num_kei:[1262,1273,1274],num_lay:[1298,1307],num_or_size_split:[40,41,464,491,1035,1111],num_output:1181,num_queri:[1262,1273,1274],num_sampl:[464,485,512,513,1035,1086,1146,1147,1237,1238],num_task:[1177,1178,1179,1180],number:[40,41,42,873,880,881,882,884,888,903,905,916,917,918,959,960,961,997,998,999,1011,1022,1026,1027,1035,1038,1047,1051,1064,1067,1074,1077,1086,1087,1088,1091,1095,1100,1111,1118,1122,1126,1128,1177,1178,1179,1180,1181,1237,1238,1242,1244,1246,1247,1248,1250,1252,1262,1273,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1324,1327],numer:[43,884,888,891,892,893,897,898,920,939,945,1035,1072,1073,1105,1106,1113,1114,1163,1170,1289],numhead:[1262,1273],numpi:[40,41,43,405,406,407,408,409,410,411,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,903,905,1035,1121,1153,1158,1244,1245,1281,1323,1324,1327],nwc:[1262,1263,1264,1298,1299,1300],obj:[40,41],object:[40,41,42,59,411,880,881,961,1011,1015,1035,1038,1041,1130,1225,1228,1230,1231,1232,1235,1236,1237,1243,1289,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1310,1311],object_in:[464,467,1035,1041],observ:1181,obvious:43,occupi:[880,881,882,1035,1103,1104],off:[903,904,1035,1038],offer:1281,offset:[903,904,1279,1280],often:1324,old:[40,41],on_init:[1298,1309,1310,1311],onc:[43,961,1005,1181,1237,1238,1281],one:[40,41,43,903,906,907,908,909,910,961,990,991,992,993,1005,1011,1017,1035,1077,1089,1096,1103,1104,1112,1115,1153,1156,1181,1244,1245,1246,1247,1248,1249,1250,1251,1252,1281,1324,1327],one_hot:[141,464,602,740,1035],onearrai:[1035,1064],ones:[40,41,77,217,405,537,674,874,877,1035,1077,1096,1281],ones_lik:[77,217,405,537,674,874],ongo:43,onli:[40,41,43,512,884,897,907,908,961,1153,1158,1181,1225,1226,1227,1233,1314,1315,1316,1317,1318,1319,1323,1324],onlin:[43,1281],onto:[961,990,991,1006,1181,1225,1229,1234],oom:[961,1181],open:[1035,1038,1237,1241,1281,1327],opencv:1324,oper:[40,41,1035,1044,1059,1060,1061,1087,1088,1116,1130,1133,1135,1137,1138,1139,1160,1161,1162,1262,1263,1264,1265,1266,1267,1268,1269,1271,1281,1282],operand:[40,41,884,885,886,888,889,890,896,899,900,1244,1245],oppos:[1035,1067],optim:[961,1130,1133,1135,1137,1138,1139,1177,1178,1179,1180,1181,1281,1315,1316,1317,1319,1323,1327],optimizer_upd:1130,option:[15,18,19,40,41,42,43,405,406,407,408,410,874,875,876,877,879,903,906,907,908,909,910,914,915,916,917,918,959,960,961,970,971,979,983,984,985,986,987,990,991,992,993,1000,1003,1004,1005,1006,1010,1011,1016,1021,1025,1034,1035,1037,1038,1040,1041,1048,1049,1050,1055,1057,1058,1067,1068,1069,1070,1074,1076,1077,1084,1086,1087,1088,1089,1092,1094,1096,1097,1100,1103,1104,1107,1109,1111,1112,1113,1114,1115,1123,1125,1126,1129,1130,1133,1135,1136,1137,1138,1139,1141,1146,1150,1153,1156,1158,1177,1178,1179,1180,1181,1225,1226,1227,1229,1233,1234,1237,1238,1244,1246,1247,1248,1249,1250,1251,1252,1254,1255,1259,1262,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1287,1288,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1324],ord:[903,905,906],order:[40,41,42,43,903,906,907,908,912,913,1130,1133,1135,1137,1138,1139,1153,1156,1177,1178,1179,1320,1321],ordered_node_util_kei:1181,org:1327,organ:43,origin:[40,41,42,1035,1101,1129,1153,1156],other:[40,41,43,920,922,923,928,930,931,935,937,938,939,940,941,943,945,946,947,948,949,950,952,953,954,956,957,958,959,960,1035,1037,1038,1077,1130,1134,1237,1241,1281,1323,1324,1327],other_i:[43,920,939,945],otherwis:[15,16,17,18,19,40,41,884,891,892,903,906,909,910,916,917,918,961,978,1011,1018,1019,1020,1035,1044,1123,1124,1127,1130,1136,1141,1145,1177,1178,1179,1181,1244,1246,1247,1248,1250,1252],our:[43,1281,1327],out:[43,512,874,876,878,879,880,881,882,884,885,886,887,888,889,890,891,892,893,895,896,897,899,900,903,904,906,907,908,909,910,912,913,916,917,918,920,939,1035,1038,1163,1166,1262,1270,1272,1281,1298,1306],out_feat_dim:[1262,1273],out_featur:[1262,1270,1271],out_i:[884,891,892],outdat:1327,outer:[1177,1178,1179,1180],outer_batch_fn:[1177,1178,1179],outer_batch_shap:[1262,1271],outer_cost_fn:[1177,1178,1179],outer_v:[1177,1178,1179],outlin:1324,output:[40,41,43,874,875,876,877,879,907,908,961,970,971,1005,1035,1038,1046,1068,1077,1100,1118,1130,1134,1163,1167,1181,1237,1239,1240,1241,1262,1264,1266,1268,1270,1272,1273,1274,1281,1298,1299,1300,1301,1302,1303,1304,1306,1307,1308,1309],output_ax:[961,1005,1181],output_axi:1181,output_channel:[1298,1299,1300,1301,1302,1303,1304,1307,1308],output_queu:1181,output_shap:[1262,1264,1266,1268,1298,1300,1302,1304],outsid:[1035,1047],over:[40,41,903,906,916,917,918,1153,1156,1237,1241,1244,1246,1247,1248,1250,1252,1279,1280,1312,1313],overal:1324,overflow:[1035,1038],overhead:1324,overrid:[1035,1096,1129],overriden:[1314,1318],overwrit:[40,41,961,1005,1181],overwrite_at_key_chain:[40,41],own:[1281,1324,1327],packag:[43,1324],pad:[1035,1051,1067,1128,1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305],pad_width:[464,1035,1051,1128],page:1281,pair:[1262,1274],parallel:[961,970,971,1181],parallelis:[961,970,971,1181],param:[40,41,42,464,477,478,874,875,877,909,910,914,915,961,1005,1035,1036,1069,1070,1096,1097,1181,1310,1311,1323],paramet:[15,16,17,18,19,40,41,42,43,874,875,877,884,894,898,901,903,904,905,914,915,920,938,939,945,959,960,961,970,971,977,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,1000,1003,1004,1005,1006,1007,1010,1011,1015,1016,1017,1021,1022,1023,1024,1025,1026,1027,1034,1035,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1074,1076,1077,1078,1080,1081,1082,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1097,1100,1101,1102,1103,1104,1105,1106,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1141,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1287,1288,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1323],parameter:[1237,1240,1241],pardo:1281,pars:[1035,1052],part:[874,878,1130,1133,1135,1137,1138,1139,1163,1166,1281,1310,1311,1324],partial:[40,41,43,1310,1311],particl:1327,particular:[43,1327],pass:[40,41,42,43,961,970,1005,1011,1016,1035,1046,1130,1144,1177,1178,1179,1181,1287,1288,1310,1311,1314,1318,1320,1321],pattern:[40,41,1035,1059,1060,1061],peopl:43,per:[961,1181,1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305],percent_used_mem_on_dev:961,percent_used_mem_on_nod:1181,percentag:[961,1000,1181],perf_count:1181,perform:[40,41,43,916,917,918,961,1035,1040,1055,1059,1060,1061,1080,1081,1082,1086,1087,1088,1130,1133,1135,1137,1138,1139,1146,1147,1177,1178,1179,1180,1181,1225,1230,1231,1244,1246,1247,1248,1249,1250,1251,1252,1254,1259,1262,1270,1272],period:43,permissable_step:1181,permit:43,permut:[512,1035,1117,1123],perpendicular:[1035,1054],person:[43,1281],physci:1327,pickl:[40,41,1181],pickle_filepath:[40,41],pinv:[368,814,1153],pip:1281,pipelin:1323,pkk:1327,pkkm1:1327,pkm1km1:1327,place:[40,41,43,874,875,876,877,879,961,1006,1035,1064,1068,1080,1081,1082,1181,1314,1315,1316,1317,1318,1319],placehold:[43,1225,1234],pleas:[43,512,1153,1158],point:[43,873,874,875,876,879,880,881,884,885,886,888,889,890,896,899,900,901,903,906,1011,1026,1035,1038,1163,1170],popul:[40,41,1237,1238],popular:1327,population_s:[512,513,1237,1238],portabl:[1281,1282],posit:[15,16,17,880,881,884,891,916,917,918,961,983,987,993,1035,1036,1038,1064,1067,1181,1237,1242,1287,1288],possibi:[40,41],possibl:[43,1035,1089,1120,1146,1151,1327],post:[1279,1280],post_shap:[40,41],power:[43,920,945,951,1035,1072,1105,1114,1289],practic:1281,pre:[961,1181,1281],pre_shap:[40,41],precis:[880,881,884,900],pred:[1275,1276,1277,1278],predict:[1275,1276,1277,1278,1327],preprint:1281,present:[40,41],preserv:[40,41,42,907,908,1130,1141],preserve_typ:[40,41,496,499,1130,1141],press:1281,prevent:[43,1130,1132,1133,1137,1181,1314,1315,1316],prevet:43,previou:[1130,1133,1137],previous:[1035,1046],prime:1281,print:[40,41,42,961,1001,1035,1098,1281,1323],print_all_arrays_in_memori:1035,print_all_arrays_on_dev:961,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1314,1318],prob:[512,513,1237,1238,1262,1270,1298,1306],probabl:[1237,1238,1262,1270,1298,1306],problem:[43,1327],process:[43,961,970,971,1000,1010,1035,1094,1181],process_specif:[961,1000,1010,1181],prod:[40,41,1035,1060],produc:[961,970,971,1181],product:[40,41,1035,1054,1055,1090,1244,1245,1262,1273,1274,1298,1309],profil:[134,305,462,595,732,961,1181],progress:43,project:[1281,1323,1324,1327],promot:[43,884,885,886,887,889,890,896,899,900,903,906,920,945,1163,1170],prompt:1281,properli:43,properti:[40,41,411,961,973,1181,1310,1311,1314,1315,1316,1317,1319],provid:[40,41,43,907,908,909,910,916,917,918,959,960,961,978,1011,1018,1019,1020,1025,1034,1035,1058,1096,1104,1129,1130,1133,1135,1137,1138,1139,1145,1181,1281,1298,1307,1314,1315,1316,1317,1318,1319,1324],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1153,1157],pull:[1281,1282],pure:[40,41,1281,1327],purpos:[43,1327],put:1181,pybroadexcept:1181,pyprotectedmemb:1181,pyshadowingbuiltin:43,pyshadowingnam:[962,1012,1013,1014,1131,1181],python:[40,41,961,1000,1010,1035,1038,1181,1281],pytorch:[1130,1133,1135,1137,1138,1139,1153,1158,1281,1314,1315,1316,1317,1318,1319,1323,1324,1327],pyunresolvedrefer:1181,quadrant:[1163,1167],qualiti:43,queri:[40,41,920,934,955,961,994,1004,1181,1262,1273,1274,1298,1309],query_dim:[1298,1309],query_kei:[40,41],queue:[40,41,42,961,970,971,1035,1099,1107,1181],queue_class:[961,970,971,1181],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1035,1181],quick:[512,1281],quickli:[43,1323],radian:[884,889,899,1163,1164,1165,1167,1175],rai:[1163,1164],rais:[40,41,43,916,917,918,920,945,1035,1044,1072,1105,1112,1114,1124,1181,1310,1311,1314,1318],ram:[961,1000,1007,1010,1181],randint:[185,377,512,652,836,1237],random:[37,40,41,513,1238,1239,1240,1241,1242,1243,1281],random_crop:1146,random_norm:[185,377,512,652,836,1237],random_uniform:[185,377,512,652,836,1237],randomli:[512,1146,1150,1262,1270,1298,1306],rang:[512,1035,1038,1087,1088,1163,1167,1181,1281,1323,1327],rank:[903,906,916,917,918,1035,1051,1125,1128],rate:[1130,1133,1135,1137,1138,1139,1177,1178,1179,1180,1298,1309,1314,1315,1316,1317,1318,1319],rather:[40,41,43,961,1005,1035,1038,1084,1130,1136,1181],ratio:[961,1130,1137,1146,1151,1181,1314,1316],raw:[40,41,1153,1158],raw_delta:1181,reach:[43,961,983,987,993,1181,1225,1234],read:[40,41],readi:[1181,1323],real:[1163,1164,1166],realiti:1324,rearrang:[40,41,1035,1059,1061],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1177,1179],receiv:[43,961,970,971,1035,1039,1089,1181,1298,1308],receivess:[961,1181],receivng:[1177,1180],recev:[1177,1178,1179],recognit:1327,recommend:[884,897,1281],rectifi:[1254,1256,1257],recurr:[1262,1272],recurrent_bia:[1262,1272],recurrent_kernel:[1262,1272],recurs:[40,41,1225,1226,1227,1233,1234],redefin:43,reduc:[40,41,909,910,916,917,918,961,1005,1035,1060,1153,1158,1181,1244,1246,1247,1248,1249,1250,1251,1252],reduce_max:[40,41,192,382,514,657,843,1244],reduce_mean:[40,41,192,382,514,657,843,1244,1281,1323],reduce_min:[40,41,192,382,514,657,843,1244],reduce_prod:[40,41,192,382,514,657,843,1244],reduce_std:[40,41,382,1244],reduce_sum:[40,41,192,382,514,657,843,1181,1244],reduce_var:[40,41,192,382,514,657,843,1244],reduct:[39,40,41,464,489,490,916,917,918,1035,1060,1103,1104,1245,1246,1247,1248,1249,1250,1251,1252,1281],refactor:43,refer:[43,884,895,916,917,918,1130,1132,1133,1153,1159,1298,1308,1327],reflect:43,reflected_oper:[0,13,14],regard:[961,1181],regardless:[40,41,959,960],register_paramet:1323,reimplement:1327,rel:[903,904,907,908,912,913,1130,1133,1135,1137,1138,1139],rel_slice_obj:1181,relat:43,relev:[1314,1315,1316,1317,1318,1319],relu:[852,1254,1255,1256,1281,1323],remain:[43,1035,1101,1225,1229],remaind:[40,41,1035,1066,1111],remov:[40,41,43,903,904,909,910,1035,1112,1177,1178,1179],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,907,908],rep:[1035,1118],repeat:[40,41,43,311,740,1035,1061,1118,1181,1324],repeated_config_check:[961,1181],repeatedli:[1225,1232],repetit:[40,41,1035,1100,1118],replac:[40,41,43,512,513,1035,1047,1103,1104,1237,1238],repo:[43,1281],repositori:43,repres:[43,884,885,886,890,901,1011,1017,1022,1262,1271],represent:[40,41,42,43,873,880,881,882,884,887,961,988,989,1011,1017,1023,1024,1035,1110,1120,1181],reptil:[1177,1180],reptile_step:1177,request:[1281,1282],requir:[43,884,900,959,960,1011,1015,1035,1038,1041,1287,1288],resampl:[1035,1086],reserv:43,reshap:[40,41,43,512,740,1035],reshape_lik:[40,41],respect:[884,887,893,894,920,939,1035,1062,1130,1132,1133,1134,1135,1137,1138,1139,1153,1158,1163,1170,1177,1178,1179,1180],respond:43,respons:[43,1181],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,903,904,906,909,910,916,917,918,920,938,939,945,961,970,1035,1038,1062,1103,1104,1115,1153,1156,1160,1161,1162,1163,1170,1181,1244,1246,1247,1248,1249,1250,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1281],ret:1181,ret_dict:1181,ret_fn:[961,970,971,1181],retain:[1130,1134],retain_grad:[496,497,1130,1134],retreiv:1181,retrn:[1035,1110],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1177,1178,1179,1180],return_sequ:[1298,1307],return_st:[1298,1307],rev:[1035,1058],revers:[40,41,907,908,1035,1058,1123],review:43,right:[40,41,43],rk_e:1327,robot:1281,ronald:1281,root:[43,884,900],round:[311,464,740,884,888,900,1035,1038,1181],row:[1035,1077,1237,1238],rule:[43,920,945,1035,1038,1163,1170],run:[43,961,970,1130,1132,1133,1137,1177,1178,1179,1180,1181,1281,1282,1298,1309,1310,1311],safe:[961,970,1181],safety_factor:[961,1181],same:[15,16,17,40,41,43,874,877,878,884,888,903,904,905,907,908,909,910,912,913,961,970,971,1005,1006,1011,1015,1035,1036,1050,1065,1066,1069,1070,1096,1102,1103,1104,1115,1129,1130,1136,1141,1163,1166,1177,1178,1179,1181,1244,1245,1262,1263,1264,1265,1266,1267,1268,1269,1281,1298,1299,1300,1301,1302,1303,1304,1305,1323,1327],same_arrai:[40,41],sampl:[1035,1086,1146,1147,1237,1238,1240,1241,1262,1270,1281,1298,1306],satisfi:[1035,1041,1153,1155,1159],save:[40,41,1035,1108,1119,1146,1148,1310,1311],save_dir:[462,463,961,976,1181],save_weight:[1310,1311],scalar:[903,906,1035,1047,1096,1122,1126],scale:[961,1003,1004,1130,1138,1181,1262,1270,1273,1274,1279,1280,1298,1306,1309,1314,1317],scaled_dot_product_attent:1262,scatter:[1035,1096,1103,1104],scatter_flat:[141,311,464,602,740,1035],scatter_nd:[141,311,464,602,740,1035],scene:[1130,1133,1135,1137,1138,1139],schemat:1281,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[909,910],second:[40,41,884,887,893,894,903,904,961,992,1035,1042,1054,1062,1099,1107,1117,1130,1132,1133,1137,1177,1179,1181,1314,1315,1316],secondli:1327,sector:[884,885,886],see:[43,59,411,462,463,512,884,887,893,903,906,916,917,918,920,938,939,945,961,973,974,975,976,1011,1035,1038,1087,1088,1130,1163,1170,1281,1289,1291,1292,1294,1295,1297],seed:[40,41,185,512,836,1237],seed_valu:[40,41,512,1237,1242],seem:1281,seen_set:[1035,1075],select:[1035,1041,1112,1324,1327],self:[40,41,43,59,411,462,463,920,939,945,961,973,974,975,976,1011,1130,1181,1281,1289,1291,1292,1294,1295,1297,1314,1318,1323,1327],self_i:[920,939],sent:1181,seper:[43,1035,1067],seq:[40,41,42,1244,1245,1310,1311],sequenc:[15,16,17,40,41,42,43,512,959,960,961,970,971,980,981,982,983,984,985,986,987,990,991,1005,1011,1015,1035,1038,1041,1043,1045,1050,1051,1077,1089,1092,1097,1100,1101,1104,1111,1115,1118,1123,1128,1130,1134,1146,1150,1151,1153,1156,1181,1225,1236,1237,1239,1241,1244,1246,1247,1248,1249,1250,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1279,1280,1287,1288,1298,1299,1300,1301,1302,1303,1304,1305,1307,1310,1311,1312,1313,1314,1318,1320,1321],sequenti:1281,seri:43,set:[15,18,19,40,41,909,910,912,913,961,990,991,1003,1004,1005,1035,1037,1057,1077,1105,1106,1107,1108,1130,1133,1135,1136,1137,1138,1139,1153,1156,1181,1225,1226,1233,1235,1236,1237,1238,1242,1244,1246,1247,1248,1249,1250,1251,1252,1281,1298,1307,1314,1315,1316,1317,1318,1319,1324,1327],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:961,set_default_dtyp:1011,set_default_float_dtyp:1011,set_default_int_dtyp:1011,set_default_nod:1181,set_exception_debug_mod:44,set_framework:[40,41,43,59,1181,1281,1323,1324,1327],set_ivy_backend:[40,41],set_min_bas:1035,set_min_denomin:1035,set_nest_at_index:1225,set_nest_at_indic:1225,set_queue_timeout:1035,set_split_factor:[961,1181],set_stat:[1314,1315,1316,1317,1318,1319],set_tmp_dir:1035,set_with_grad:1130,setter:1181,sever:1327,sgd:[1281,1314],shape0:1181,shape:[40,41,43,405,406,407,410,464,476,490,512,740,874,875,876,877,878,879,903,904,907,908,909,910,912,913,961,973,1011,1015,1035,1036,1045,1050,1051,1064,1065,1066,1068,1070,1074,1077,1096,1097,1100,1101,1102,1103,1104,1110,1112,1115,1128,1129,1146,1150,1153,1155,1158,1163,1166,1167,1181,1237,1239,1240,1241,1244,1245,1262,1264,1266,1268,1298,1300,1301,1302,1303,1304,1305,1312,1313],shape_slic:[40,41],shape_to_tupl:1035,share:[40,41,1281,1324],shift:1181,should:[40,41,42,43,512,874,878,884,885,886,887,888,889,890,891,892,893,896,897,899,900,901,903,904,906,909,910,920,938,939,945,959,960,961,1035,1045,1046,1052,1096,1101,1130,1133,1135,1137,1138,1139,1163,1170,1181,1244,1245,1281],show:[40,41,1281,1327],show_mod_in_top_mod:[1310,1311],show_structur:[1310,1311],show_sub_contain:[40,41],show_v:[1310,1311],show_v_in_top_v:[1310,1311],shown:[40,41],shp:1181,shuffl:[40,41,185,512,836,1237],shuffle_h5_fil:[40,41],side:43,sigmoid:[852,1254,1281,1323],signatur:[43,59,411,462,463,464,496,501,505,509,510,512,961,973,974,975,976,1011,1130,1289,1291,1292,1294,1295,1297],signific:1327,similar:[43,1262,1273,1298,1309],similarli:[1153,1158],simpl:[43,1035,1063,1281,1324,1327],simpler:43,simplest:1324,simpli:[40,41,43,1281,1324,1327],simultan:1281,sin:[88,228,416,548,685,884,1035,1067,1163,1175,1324],sinco:1324,sine:[884,886,899,1163,1165,1174],singl:[40,41,959,960,961,970,971,990,991,992,993,1035,1112,1122,1126,1146,1151,1181,1237,1240,1241,1244,1246,1247,1248,1249,1250,1251,1252,1281,1324,1327],singleton:[903,906,916,917,918],singular:[903,905],sinh:[824,1163],siren:[1281,1289],situat:43,size:[40,41,42,464,489,903,904,905,909,910,916,917,918,961,984,985,986,987,1003,1004,1005,1035,1038,1045,1087,1088,1103,1111,1146,1150,1153,1156,1181,1237,1238,1240,1241,1244,1246,1247,1248,1249,1250,1251,1252,1298,1299,1300],size_ordered_arrai:[40,41],skew:[1153,1159],skinv:1327,skip:[40,41],slice:[40,41,1035,1069,1070,1181,1225,1232],slice_kei:[40,41],slice_obj:[40,41,1181],slice_via_kei:[40,41],slide:[1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305],slope:[1254,1256],small:[1275,1276,1277,1278,1279,1280,1281,1312,1313,1324],smaller:[1035,1047],smallest:[40,41,880,881,882,884,888,1035,1040],smallest_norm:[411,880,881],softmax:[201,523,852,1254,1262,1273,1274],softplu:[852,1254],solut:43,solv:1327,some:[40,41,43,1035,1038,1130,1132,1133,1135,1137,1138,1139,1144,1262,1270,1281,1298,1306,1324,1327],some_backend:43,some_namespac:43,someth:[43,1327],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,903,905,913,1181],sort_by_kei:[40,41],sorting_funct:[912,913],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,405,406,407,408,409,410,411,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,510,511,512,513,874,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909,910,912,913,914,915,916,917,918,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,970,971,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1284,1285,1286,1287,1288,1289,1291,1292,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1325,1326,1327],space:[1035,1038,1067,1087,1088],spars:[1275,1278],sparse_cross_entropi:1275,spawn:[1035,1094],special:[43,884,885,886,888,889,890,896,899,900],specif:[40,41,43,884,897,961,1003,1035,1052,1059,1060,1061,1094,1177,1178,1179,1180,1181,1237,1243,1281,1310,1311,1323,1324],specifc:[1237,1238],specifi:[40,41,43,874,875,876,878,879,903,904,906,907,908,909,910,912,913,916,917,918,961,980,981,982,983,984,985,986,987,990,991,995,997,1001,1004,1005,1006,1011,1015,1017,1035,1038,1040,1041,1047,1050,1051,1068,1069,1070,1076,1087,1088,1115,1125,1128,1153,1156,1181,1225,1230,1231,1235,1236,1244,1245,1246,1247,1248,1249,1250,1251,1252],sphinx:43,split:[40,41,141,311,464,602,740,961,970,984,985,986,987,1003,1004,1005,1035,1089,1181],split_arg:1181,split_factor:[961,970,1181],split_func_cal:[961,1181],split_siz:1181,spread:[961,993,1181],sqrt:[88,228,416,548,685,884,903,906],squar:[884,900,1035,1077,1153,1155],squeez:[141,311,464,602,740,1035],stabil:[912,913,1035,1113,1114],stabl:[912,913,1035,1072,1073,1105,1106,1113,1114],stable_divid:1035,stable_pow:1035,stack:[40,41,311,740,874,878,903,904,1035,1146,1151,1225,1226,1233,1298,1307],stack_imag:[175,364,501,642,810,1146],stacked_dim_s:1181,stage:43,standard:[40,41,880,881,1237,1240,1244,1250,1279,1280,1281,1282,1312,1313],start:[40,41,43,462,463,464,465,486,487,512,961,976,1035,1038,1087,1088,1181,1281,1324],starting_index:[40,41],starting_split_factor:[961,1181],state:[1181,1262,1272,1281,1284,1285,1286,1287,1288,1289,1291,1292,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1323],statement:1324,static_argnam:[464,469,959,960],static_argnum:[464,469,959,960],statistical_funct:[914,915],std:[512,1237,1240],step:[40,41,464,465,961,1035,1038,1087,1088,1130,1132,1133,1135,1137,1138,1139,1177,1178,1179,1180,1181,1281,1314,1315,1316,1317,1318,1319,1323,1327],stephen:1281,stick:1281,still:[40,41,43],stochast:[1314,1319],stop:[40,41,462,463,464,465,486,487,961,976,1005,1035,1038,1087,1088,1130,1133,1135,1137,1138,1139,1141,1177,1178,1179,1180,1181,1314,1315,1316,1317,1318,1319],stop_gradi:[40,41,359,496,637,804,961,1005,1130,1133,1135,1137,1138,1139,1177,1178,1179,1180,1181,1314,1315,1316,1317,1318,1319],stopiter:1181,store:[40,41,1035,1067,1111,1130,1144,1310,1311],store_var:[1310,1311],str:[15,16,17,40,41,42,43,405,406,407,408,410,411,413,414,874,877,880,881,882,959,960,961,970,971,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,1005,1011,1016,1017,1022,1023,1024,1025,1026,1027,1034,1035,1041,1057,1059,1060,1061,1092,1094,1097,1103,1104,1153,1156,1158,1177,1178,1179,1180,1181,1225,1229,1244,1245,1287,1288,1298,1309,1310,1311],str_to_nod:1181,straight:1324,strength:[1281,1327],stride:[1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305],string:[40,41,43,961,977,979,988,989,994,1000,1006,1007,1010,1011,1015,1021,1023,1024,1025,1034,1035,1038,1041,1057,1077,1097,1129,1181,1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305,1310,1311],structur:[40,41,42,43,1035,1052],structural_diff:[40,41],style:43,sub:[40,41,43,903,904,961,984,985,990,991,992,993,1035,1111,1177,1178,1179,1180,1181],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1181,sub_mod:[1310,1311],sub_modul:[1320,1321],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1281,1282,1312,1313,1320,1321],subsequ:43,subset:43,substr:[40,41],suffici:[1153,1158],suggest:1281,suitabl:[1146,1151],sum:[40,41,464,489,490,903,906,961,990,991,992,993,1005,1035,1056,1060,1103,1104,1181,1244,1245,1251],summat:[40,41,1244,1245],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,113,115,118,120,122,123,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,176,177,178,180,181,182,186,187,188,189,190,191,193,194,195,196,197,198,199,202,204,205,207,208,209,210,211,212,213,218,219,220,221,222,224,225,226,229,230,231,232,233,234,235,236,237,238,239,242,243,244,246,248,251,254,255,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,363,365,366,367,369,370,371,372,374,375,378,379,380,381,383,384,385,386,387,388,389,390,393,395,396,397,398,399,400,401,406,407,408,409,410,412,413,414,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,437,438,439,441,443,446,448,450,451,463,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,497,498,499,500,502,503,504,506,507,508,511,513,515,516,517,518,519,520,521,524,525,527,528,529,530,531,532,533,538,539,540,541,542,544,545,546,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,569,570,571,573,575,578,580,582,583,591,596,597,598,599,600,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,638,639,640,641,643,644,645,647,648,649,653,654,655,656,658,659,660,661,662,663,664,668,669,670,675,676,677,678,679,681,682,683,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,706,707,708,710,712,715,717,719,720,728,733,734,735,736,737,738,739,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,811,812,813,815,816,817,818,819,820,822,823,825,826,827,828,829,830,831,832,833,834,835,837,838,839,840,841,842,844,845,846,847,848,849,850,853,854,855,856,857,858,859,861,862,864,865,866,867,868,869,870,875,876,877,878,879,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,904,905,906,908,910,913,915,917,918,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1280,1281,1285,1286,1288,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1313,1314,1315,1316,1317,1318,1319,1321,1322,1323,1324,1326,1327],supports_inplac:1035,suppos:1327,sure:43,svd:[108,241,436,568,705,903],swap:[40,41,1035,1117],swapax:[40,41,602,740,1035,1327],symmetr:[1153,1159],syntax:[462,464,496,501,505,509,510,512],tab:1281,take:[43,1035,1086],taken:[43,903,904,1244,1246,1247,1248,1250,1252],tan:[824,1163,1166],tangent:[884,901,1163,1166,1167,1168,1175,1176,1254,1261],tanh:[88,228,416,548,685,852,884,1163,1254],target:[40,41,961,977,980,981,982,983,984,985,986,987,990,991,992,993,1006,1181,1281],target_dict:[40,41],task:[43,1177,1178,1179,1180],team:[43,1327],templat:1281,temporari:[1035,1108,1119],tensor:[40,41,43,464,489,490,961,979,1011,1021,1035,1038,1040,1045,1087,1088,1091,1093,1096,1097,1101,1103,1104,1111,1129,1181,1237,1238,1239,1262,1270,1272,1281,1298,1306,1308,1314,1315,1316,1317,1318,1319,1323,1324],tensorflow:[43,1153,1158,1262,1264,1266,1268,1281,1298,1300,1302,1304,1324,1327],term:[40,41,43,1262,1272,1281,1298,1308],termcolor:[40,41,42],termin:[40,41,42,1181],test:[43,884,891,892,916,917,918,1011,1026,1027],test_array_api:43,tf_concat:1281,than:[40,41,43,880,881,884,885,888,896,900,903,906,907,908,961,1005,1035,1038,1047,1065,1084,1091,1112,1115,1130,1136,1181,1237,1241,1281,1324],thei:[40,41,43,1163,1167,1177,1178,1179,1237,1238,1281,1320,1321,1324],them:[1281,1327],themselv:[1225,1226],therefor:43,thi:[40,41,42,43,884,897,909,910,961,983,987,993,1000,1005,1010,1035,1038,1067,1099,1101,1107,1130,1133,1135,1136,1137,1138,1139,1144,1153,1156,1181,1225,1229,1234,1244,1246,1247,1248,1249,1250,1251,1252,1262,1271,1281,1310,1311,1314,1315,1316,1317,1318,1319,1323,1324,1327],thing:[43,1281],those:[40,41,43,903,905,1035,1047,1130,1144,1181],though:43,thought:43,threshold:[1035,1091,1093],through:[40,41,43],tick:43,tickbox:43,tile:[311,602,740,1035],time:[43,1035,1118,1130,1133,1137,1177,1178,1179,1180,1181,1237,1238,1262,1272,1298,1309,1310,1311,1327],timeout:[40,41,42,961,970,971,1035,1099,1107,1181],timestep:[1262,1272,1298,1307],titl:[43,1281],tmp_dir:1035,tmp_dr:[1035,1108],to_appli:[40,41],to_clon:[961,1181],to_dev:[40,41,134,305,462,595,732,961],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[961,1181],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1281],to_ivy_modul:[203,860,1281,1287],to_json:[40,41],to_kv_fn:[1262,1273],to_kv_v:[1262,1273],to_list:[40,41,464,740,1035],to_multi_dev:[40,41],to_mut:[1225,1227,1234],to_n:[15,40,41,1281],to_nod:1181,to_numpi:[40,41,464,740,1035,1281,1323],to_out_fn:[1262,1273],to_out_v:[1262,1273],to_q_fn:[1262,1273],to_q_v:[1262,1273],to_raw:[40,41],to_scalar:[464,740,1035],todo:[1181,1281,1282],togeth:[40,41,1320,1321],tool:[1281,1324],top_mod:[1310,1311],topic:1327,torch:[43,959,960,1281,1323,1324,1327],torch_concat:1281,torchfcmodel:1323,total:[40,41,42,961,1007,1181],total_mem_on_dev:961,total_mem_on_nod:1181,tpu:[961,1008,1181],tpu_is_avail:[462,595,732,961,1181],trace:[40,41,1035,1084],track:[43,961,1181,1225,1234,1310,1311],track_submod_call_ord:[1310,1311],track_submod_ret:[1310,1311],trail:[1312,1313],train:[1130,1132,1133,1137,1281,1282],trainabl:[1130,1136,1281,1282,1287,1288,1310,1311,1320],trainer:1281,tran:1327,transform:[1262,1270,1271],transpos:[40,41,141,311,464,740,961,992,1035,1181,1262,1264,1266,1268,1298,1300,1302,1304],travers:[15,18,19,40,41,1225,1234],treat:[40,41,959,960],tri:[40,41],triangular:[874,878],trigonometr:[1163,1164,1166],tril:[77,217,405,537,674,874],trim_kei:[40,41],trust:[1130,1137,1314,1316],truth:[884,893,894,920,938,939,1035,1062,1160,1161,1162],try_else_non:1035,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[961,1181],tune_dev_alloc:961,tune_dev_split:961,tune_node_alloc:1181,tune_node_split:1181,tune_step:[961,1181],tupl:[15,16,17,18,19,40,41,43,405,406,407,410,874,875,876,879,903,905,906,907,908,914,915,916,917,918,959,960,1035,1051,1067,1068,1110,1128,1181,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1239,1244,1246,1247,1248,1249,1250,1251,1252],tutori:43,two:[40,41,874,878,903,904,905,1035,1038,1042,1054,1090,1117,1153,1156],type:[15,18,40,41,42,43,59,413,414,462,463,874,875,876,877,878,879,881,882,884,885,886,887,888,889,890,891,892,893,894,896,897,899,900,901,903,904,906,907,908,912,913,916,917,918,920,938,939,945,961,973,974,975,976,988,989,993,1005,1011,1015,1016,1017,1021,1022,1023,1024,1025,1026,1027,1034,1035,1036,1038,1041,1050,1052,1062,1065,1066,1068,1077,1084,1096,1097,1102,1116,1126,1129,1130,1136,1141,1163,1170,1181,1281,1289,1291,1292,1294,1295,1297,1310,1311,1324],types_to_iteratively_nest:[40,41,42],uint8:[1146,1148,1152],uint8_img_to_float_img:1146,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[884,887],underwai:43,unecessari:43,unfairli:43,unif:1181,unifi:[40,41,961,990,991,992,993,1005,1181,1281],uniform:[40,41,1237,1238,1240,1241,1289,1291,1292,1295,1296],uniformli:[1237,1239,1241],unify_arrai:1181,unify_it:1181,unify_nest:1181,uniniti:[874,875],union:[15,18,19,40,41,43,405,406,407,408,410,411,413,414,874,875,876,877,878,879,880,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,903,905,906,907,908,909,910,912,913,914,915,916,917,918,920,938,939,945,959,960,961,979,984,985,986,987,1005,1006,1011,1015,1016,1017,1021,1022,1023,1024,1025,1026,1027,1034,1035,1036,1037,1038,1040,1041,1042,1043,1045,1047,1048,1049,1050,1051,1053,1054,1055,1056,1059,1060,1061,1062,1064,1065,1066,1067,1068,1069,1070,1074,1076,1077,1078,1085,1086,1087,1088,1090,1091,1092,1093,1096,1097,1100,1101,1102,1103,1104,1109,1110,1111,1112,1115,1117,1118,1120,1121,1122,1123,1125,1126,1127,1128,1129,1181,1225,1226,1227,1233,1234],uniqu:[961,970,971,1177,1178,1179,1180,1181,1225,1229],unique_kwarg:1181,unit:[43,961,1163,1164,1165,1181,1254,1255,1256,1257],unitari:[903,905],unless:[1035,1096,1129],unlik:[961,1181],unnorm:[1237,1238],unpack:[1035,1125],unrol:[1262,1272],unset:1324,unset_debug_mod:44,unset_default_devic:961,unset_default_dtyp:1011,unset_default_float_dtyp:1011,unset_default_int_dtyp:1011,unset_framework:[59,1324],unset_with_grad:1130,unstack:[40,41,141,311,464,602,740,1035],until:43,unus:[959,960],updat:[40,41,464,489,490,961,970,1035,1082,1103,1104,1130,1132,1133,1135,1137,1138,1139,1177,1178,1179,1181,1225,1230,1231,1235,1236,1262,1272,1281,1282,1287,1288,1314,1315,1316,1317,1318,1319,1324,1327],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1237,1241],upper_depth:[1310,1311],upstream:43,usabl:[1281,1327],usag:[961,1005,1181],use:[40,41,42,43,512,961,970,971,996,1008,1035,1100,1113,1114,1153,1158,1181,1262,1273,1279,1280,1281,1312,1313,1324,1327],used:[40,41,43,512,903,904,961,970,1000,1003,1004,1010,1011,1022,1035,1072,1073,1089,1103,1104,1105,1106,1129,1130,1137,1138,1153,1156,1177,1178,1179,1180,1181,1225,1234,1298,1309,1314,1316,1317,1323,1324],used_dev:[961,970],used_mem_on_dev:961,used_mem_on_nod:1181,used_node_str:1181,used_node_strs_dict:1181,useful:[40,41,961,1005,1181,1262,1271,1281,1324],user:[1281,1298,1309,1310,1311,1324,1327],uses:1281,using:[40,41,43,1130,1132,1133,1225,1228,1232,1244,1245,1262,1270,1274,1281,1298,1306,1323,1324,1327],util:[961,994,1181],utility_funct:[916,917,918],v_with_top_v_key_chain:[1310,1311],val:[40,41,464,481,482,483,920,955,1035,1080,1081,1082,1105,1106],valid:[916,917,918,1011,1016,1035,1113,1114,1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305],valid_dtyp:1011,valu:[40,41,464,884,888,893,894,903,905,906,909,910,912,913,914,915,920,938,939,961,973,1004,1005,1035,1036,1038,1040,1047,1048,1049,1051,1052,1058,1062,1067,1068,1069,1070,1085,1087,1088,1091,1093,1099,1100,1101,1102,1103,1104,1105,1106,1107,1123,1126,1127,1128,1130,1134,1137,1146,1152,1160,1161,1162,1163,1171,1172,1173,1177,1178,1179,1181,1225,1229,1230,1231,1235,1236,1237,1240,1241,1244,1246,1248,1262,1273,1274,1279,1280,1298,1309,1312,1313,1314,1316],value_is_nan:1035,vanilla:[1177,1179],var_shap:1289,variabl:[15,16,17,18,19,40,41,359,496,637,804,1035,1044,1080,1081,1082,1083,1084,1116,1130,1133,1134,1135,1136,1137,1138,1139,1141,1144,1177,1178,1179,1180,1262,1273,1279,1280,1287,1288,1289,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321],variable_data:[496,804,1130],varianc:[40,41,1244,1252,1327],varieti:1324,variou:[43,1281],vector:[40,41,505,508,903,905,906,1035,1049,1054,1153,1159,1262,1271,1298,1308],vector_norm:[40,41,108,241,436,568,705,903],vector_to_skew_symmetric_matrix:[179,368,505,646,814,1153],verbos:1326,veri:[43,1281],verifi:43,version:43,via:[1225,1226,1233,1324],view:[1146,1151],vision:1281,visual:1324,volum:[1262,1267],vw_tm1:[1130,1133,1137],wai:[1324,1327],wait:[40,41,42,43],want:[43,1281,1324,1327],warn:[59,66,67,68,69,70],warp:[501,502,1146,1147],watch:1323,websit:43,weight:[1130,1132,1133,1135,1137,1138,1139,1262,1271,1272,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1310,1311,1314,1316,1317],weight_initi:[1298,1299,1300,1301,1302,1303,1304,1305,1307,1308],weights_path:[1310,1311],well:[40,41,1035,1076],were:[40,41,1181],what:[43,1281],when:[40,41,42,43,903,905,961,1035,1046,1114,1127,1181,1281,1310,1311,1324,1327],where:[40,41,43,311,464,740,884,895,903,905,916,917,918,920,945,1035,1038,1045,1047,1051,1064,1078,1085,1096,1128,1225,1226,1233,1237,1238],wherea:43,wherebi:[1225,1234],whether:[15,18,19,40,41,42,884,892,916,917,918,959,960,961,979,992,996,1000,1005,1008,1010,1011,1021,1025,1026,1027,1034,1035,1037,1042,1043,1055,1058,1063,1067,1074,1076,1079,1083,1084,1089,1109,1116,1125,1126,1130,1133,1134,1135,1136,1137,1138,1139,1141,1177,1178,1179,1180,1181,1225,1226,1227,1229,1233,1234,1237,1238,1254,1255,1262,1270,1281,1287,1288,1298,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319],which:[40,41,42,43,512,874,875,876,877,878,879,880,881,882,903,904,906,907,908,909,910,912,913,914,915,916,917,918,959,960,961,970,971,979,984,985,986,987,990,991,992,993,995,997,1001,1003,1004,1005,1011,1016,1021,1025,1034,1035,1038,1041,1050,1052,1054,1055,1056,1058,1068,1069,1070,1071,1077,1078,1086,1087,1088,1095,1096,1097,1098,1100,1103,1104,1111,1115,1125,1127,1129,1130,1133,1134,1135,1137,1138,1139,1141,1143,1144,1146,1148,1153,1156,1163,1167,1181,1225,1229,1230,1231,1235,1236,1237,1238,1239,1240,1241,1244,1246,1247,1248,1249,1250,1251,1252,1254,1259,1262,1273,1274,1281,1287,1288,1298,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1318,1320,1321,1323,1324],whilst:43,whitespac:[40,41,42],who:43,whose:[43,874,878,884,885,886,889,890,899,901,903,904,907,908,920,938,945,1035,1041,1046,1244,1245,1246,1247,1248,1250,1252],why:[1281,1282],width:[1146,1151],wiki:1327,wikipedia:1327,window:[1146,1151,1262,1263,1264,1265,1266,1267,1268,1269,1298,1299,1300,1301,1302,1303,1304,1305],wise:[40,41,43,884,887,893,894,897,920,938,939,945,1035,1047,1062,1065,1066,1091,1093,1102,1130,1133,1135,1137,1139,1160,1161,1162,1163,1164,1165,1166,1167,1170,1171,1172,1173,1175,1254,1255,1256,1257,1258,1259,1260,1261],wish:1324,with_bia:[1298,1308],with_cal:[1035,1058],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1130,1140],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1181,with_partial_v:[1310,1311],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,464,491,1035,1111,1181],with_to_kv_fn:[1298,1309],with_to_out_fn:[1298,1309],with_to_q_fn:[1298,1309],within:[15,18,19,43,903,905,1035,1038,1237,1241],without:[40,41,43,1035,1099,1101,1107,1225,1227,1324],wonder:1281,word:[15,16,17,1035,1038,1237,1241,1287,1288],work:[43,1323],worker:[961,970,971,1181],worker_class:[961,970,971,1181],worker_kwarg:1181,would:[43,1254,1259,1281,1324,1327],wrap:[15,40,41,42,43,462,464,496,501,505,509,510,512,1035,1046,1130,1144,1281],wrapper:43,write:[40,41,43,1281,1282,1327],written:[43,1281,1327],ws_new:[1130,1133,1135,1137,1138,1139],x1_i:[884,887,893,894,1035,1062,1163,1170],x2_i:[884,887,893,894,1035,1062,1163,1170],x_feat_dim:[1262,1273],x_i:[884,885,886,888,889,890,891,892,896,897,899,900,901],x_in:[1281,1323],x_inv:[1153,1155],x_max:[464,1035,1047],x_min:[464,1035,1047],x_sub:1181,xkk:1327,xkkm1:1327,xkm1km1:1327,xs0:1181,xs_t:1181,year:[1281,1327],yet:[1225,1234,1327],yield:[1035,1127],you:[43,1281,1323,1324,1327],your:[1281,1282,1323,1324,1327],your_awesome_project:1324,yourself:[43,1281],yourslef:43,youtub:43,zero:[40,41,77,217,405,537,674,874,875,878,884,897,903,906,916,917,918,1035,1051,1096,1103,1104,1128,1129,1130,1132,1133,1137,1138,1262,1270,1281,1289,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1314,1315,1316,1317],zero_pad:[311,464,602,740,1035],zeros_lik:[141,311,464,602,740,1035],zip:1181,zk_e:1327},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1058,"function":[77,83,88,107,112,114,116,117,119,121,217,223,228,240,245,247,249,250,252,253,405,411,416,435,440,442,444,445,447,449,537,543,548,567,572,574,576,577,579,581,674,680,685,704,709,711,713,714,716,718,874,880,884,902,907,909,911,912,914,916],Ones:1294,Using:1324,abs:[312,603,741,1036],aco:[825,1164],acosh:[89,229,417,549,686,885],activ:[201,392,523,666,852,1254,1284],adam:1315,adam_step:1132,adam_upd:1133,algebra:[108,179,241,368,436,505,568,646,705,814,903],all:[122,254,450,582,719,917],all_equ:1037,all_nested_indic:1226,ani:[123,255,451,583,720,918],api:[0,43,75,125,215,257,403,453,535,585,672,722,872],arang:[142,313,465,604,742,1038],arg_nam:1039,argmax:[115,248,443,575,712,910],argmin:[143,466,605,743,1040],args_to_ivi:16,args_to_n:17,argsort:[118,251,446,578,715,913],arithmet:[1,126,258,454,586,723],arrai:[0,3,43,75,124,125,127,144,215,256,257,259,266,314,403,452,453,455,467,535,584,585,587,606,672,721,722,724,744,872,920,1041],array_equ:[315,745,1042],arrays_equ:1043,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[826,1165],asinh:[90,418,550,687,886],assert_supports_inplac:1044,atan2:[828,1167],atan:[827,1166],atanh:[829,1168],attribut:[5,128,260,456,588,725],backend:[43,73],bilinear_resampl:[176,365,502,643,811,1147],binary_cross_entropi:1276,bitwis:[7,129,261,457,589,726],bitwise_and:[91,230,419,551,688,887],broadcast_to:[316,746,1045],builder:51,builtin:[124,256,266,452,584,721,920],builtin_ab:[267,921],builtin_add:[268,922],builtin_and:[269,923],builtin_bool:[270,924],builtin_contain:[271,925],builtin_deepcopi:[272,926],builtin_dir:[273,927],builtin_eq:[274,928],builtin_float:[275,929],builtin_floordiv:[276,930],builtin_g:[277,931],builtin_getattr:[278,932],builtin_getattribut:[279,933],builtin_getitem:[280,934],builtin_gt:[281,935],builtin_int:[282,936],builtin_invert:[283,937],builtin_l:[284,938],builtin_lt:[285,591,728,939],builtin_mul:[286,940],builtin_n:[287,941],builtin_neg:[288,942],builtin_or:[289,943],builtin_po:[290,944],builtin_pow:[291,945],builtin_radd:[292,946],builtin_rand:[293,947],builtin_rfloordiv:[294,948],builtin_rmul:[295,949],builtin_ror:[296,950],builtin_rpow:[297,951],builtin_rsub:[298,952],builtin_rtruediv:[299,953],builtin_rxor:[300,954],builtin_setitem:[301,955],builtin_sub:[302,956],builtin_truediv:[303,957],builtin_xor:[304,958],cache_fn:1046,cast:[145,317,468,607,747,1015],ceil:[92,231,420,552,689,888],choleski:[815,1154],choose_random_framework:61,citat:1281,clear_framework_stack:62,clear_mem_on_dev:[734,977],clip:[318,748,1047],clip_matrix_norm:1048,clip_vector_norm:1049,clone:1196,clone_arrai:1197,clone_it:1198,clone_nest:1199,clonedit:1183,cloneditem:1182,clonednest:1184,closest_valid_dtyp:1016,code:1327,comparison:[9,130,262,458,590,727],compil:[319,469,749,959,960],concaten:[146,320,470,608,750,1050],constant:[76,216,404,536,673,873],constant_pad:[321,609,751,1051],contain:[40,41],container_typ:[752,1052],content:1281,contribut:43,conv1d:[207,395,527,864,1263,1299],conv1d_transpos:[208,396,528,865,1264],conv1dtranspos:1300,conv2d:[209,397,529,668,866,1265,1301],conv2d_transpos:[210,398,530,867,1266],conv2dtranspos:1302,conv3d:[211,399,531,669,868,1267,1303],conv3d_transpos:[212,400,532,869,1268],conv3dtranspos:1304,convers:15,convert:[203,860,1287],convert_dtyp:1017,copy_arrai:[753,1053],copy_nest:1227,core:[133,265,461,594,731,919],cos:[93,421,553,690,889],cosh:[94,422,554,691,830,890,1169],cprint:1326,creat:43,creation:[77,217,405,537,674,874],cross:[322,754,1054],cross_entropi:1277,cumprod:[147,323,471,755,1055],cumsum:[756,1056],current_framework:63,current_framework_str:[757,1057],data:[83,87,223,227,411,415,543,547,680,684,880,883],debug_mod:45,debugg:44,default_devic:978,default_dtyp:1018,default_float_dtyp:1019,default_int_dtyp:1020,default_nod:1200,depthwise_conv2d:[213,401,533,670,870,1269],depthwiseconv2d:1305,design:43,dev:[136,307,597,735,979],dev_clon:980,dev_clone_arrai:981,dev_clone_it:982,dev_clone_nest:983,dev_dist:984,dev_dist_arrai:985,dev_dist_it:986,dev_dist_nest:987,dev_from_str:[137,308,598,736,988],dev_to_str:[138,309,599,737,989],dev_unifi:990,dev_unify_arrai:991,dev_unify_it:992,dev_unify_nest:993,dev_util:994,devclonedit:964,devcloneditem:963,devclonednest:965,devdistit:967,devdistitem:966,devdistnest:968,devic:[20,134,305,462,595,732,961],devmapp:970,devmappermultiproc:971,diagon:[109,242,437,569,706,904],distribute_nest:1201,divid:1170,document:1281,dropout:[1270,1306],dtype:[148,324,472,610,758,1011,1021],dtype_bit:[149,325,473,611,759,1022],dtype_from_str:[150,326,474,612,760,1023],dtype_to_str:[151,327,475,613,761,1024],ecosystem:52,einops_rearrang:1059,einops_reduc:1060,einops_repeat:1061,einsum:[193,383,515,658,844,1245],elementwis:[88,228,416,548,685,884],empti:[78,218,406,538,675,875],equal:[95,423,555,692,1062],erf:[511,831,1171],execute_with_gradi:[173,360,497,638,805,1134],exist:1063,exp:[832,1172],expand_dim:[328,762,1064],finfo:[85,225,413,545,682,881],firstlayersiren:1291,flip:[113,246,441,573,710,908],float_img_to_uint8_img:1148,floor:[329,763,1065],floormod:[330,764,1066],fomaml_step:1178,fork:43,fourier_encod:1067,framework:59,full:[152,331,476,614,765,1068],func:72,gather:[153,332,477,615,766,1069],gather_nd:[154,333,478,616,767,1070],geglu:1285,gelu:[393,524,853,1255,1286],gener:[22,141,311,464,602,740,1035],get_all_arrays_in_memori:1071,get_all_arrays_on_dev:995,get_framework:64,get_min_bas:1072,get_min_denomin:1073,get_num_dim:[768,1074],get_referrers_recurs:1075,glorotuniform:1292,gpu_is_avail:[996,1202],gradient:[24,172,359,496,637,804,1130],gradient_descent_upd:1135,gradient_imag:[177,366,503,644,812,1149],gym:53,handler:59,has_nan:1076,ident:[155,334,479,617,769,1077],iinfo:[86,226,414,546,683,882],imag:[26,175,364,501,642,810,1146],index_nest:1228,indices_wher:[156,335,480,770,1078],initi:1289,inplac:[11,131,263,459,592,729],inplace_arrays_support:1079,inplace_decr:[157,336,481,618,771,1080],inplace_incr:[158,337,482,619,772,1081],inplace_upd:[159,338,483,620,773,1082],inplace_variables_support:1083,inv:[816,1155],invalid_dtyp:1025,is_arrai:[160,339,484,621,774,1084],is_float_dtyp:1026,is_int_dtyp:1027,is_vari:[174,361,498,639,806,1136],isfinit:[96,232,424,556,693,891],isinf:[340,622,775,1085],isnan:[97,233,425,557,694,892],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,871,1323,1324,1327],ivymodul:[204,861],jax:74,keep:43,lamb:1316,lamb_upd:1137,lar:1317,lars_upd:1138,layer:[206,394,526,667,863,1262,1298],layer_norm:1280,layernorm:1313,leaky_relu:[854,1256],less:[98,234,426,558,695,893],less_equ:[99,427,559,696,894],linalg:[28,1153],linear:[108,179,241,368,436,505,568,646,705,814,903,1271,1308],linear_resampl:[161,341,485,623,776,1086],linspac:[162,342,486,624,777,1087],list:43,log1p:[100,428,560,697,895],log2:[101,429,561,698,896],log:[833,1173],logic:[30,183,373,509,650,821,1160],logical_and:[374,822,1161],logical_not:[102,235,430,562,699,897],logical_or:[375,823,1162],logspac:[163,343,487,625,778,1088],loss:1275,lstm:1307,lstm_updat:1272,maml_step:1179,manipul:[112,245,440,572,709,907],map:1229,map_nest_at_index:1230,map_nest_at_indic:1231,match_kwarg:1089,math:[32,184,376,510,651,824,1163],matmul:[344,626,779,1090],matrix_norm:[180,369,506,647,817,1156],maximum:[780,1091],mech:54,memori:55,meshgrid:[345,781,1092],meta:[34,1177],method:[107,240,435,567,704,902],min:[120,448,580,717,915],minimum:[782,1093],model:56,modul:[1310,1311,1323],multi:1181,multi_head_attent:1273,multi_index_nest:1232,multidevcontain:42,multidevit:974,multidevitem:973,multidevnest:975,multiheadattent:1309,multinodeit:1187,multinodeitem:1186,multinodenest:1188,multinomi:[186,378,513,653,837,1238],multiprocess:[783,1094],mxnet:214,nativ:1323,neg:[103,236,431,563,700,898],nest:1225,nested_indices_wher:1233,nested_map:1234,network:1323,next:1281,node:[1181,1203],node_dist:1204,node_dist_arrai:1205,node_dist_it:1206,node_str:1207,node_to_str:1208,node_util:1209,nodedistit:1190,nodedistitem:1189,nodedistnest:1191,nodemapp:1193,nodemappermultiproc:1194,norm:[1279,1312],num_arrays_in_memori:1095,num_arrays_on_dev:997,num_cpu_cor:998,num_gpu:[139,999,1210],numpi:402,nutshel:1281,one_hot:[164,488,627,784,1096],ones:[79,219,407,539,676,876,1097],ones_lik:[80,220,408,540,677,877],oper:[1,3,7,9,11,13,43,126,127,129,130,131,132,258,259,261,262,263,264,454,455,457,458,459,460,586,587,589,590,592,593,723,724,726,727,729,730],optim:[1314,1318],optimizer_upd:1139,overview:1281,percent_used_mem_on_dev:1000,percent_used_mem_on_nod:1211,pinv:[370,818,1157],portabl:1327,print_all_arrays_in_memori:1098,print_all_arrays_on_dev:1001,profil:[135,306,463,596,733,976,1195],pull:43,queue_timeout:1099,randint:[187,379,654,838,1239],random:[36,185,377,512,652,836,1237],random_crop:1150,random_norm:[188,380,655,839,1240],random_uniform:[189,381,656,840,1241],reduce_max:[194,384,516,659,845,1246],reduce_mean:[195,385,517,660,846,1247],reduce_min:[196,386,518,661,847,1248],reduce_prod:[197,387,519,662,848,1249],reduce_std:[388,1250],reduce_sum:[198,389,520,663,849,1251],reduce_var:[199,390,521,664,850,1252],reduct:[38,192,382,514,657,843,1244],reflect:[13,132,264,460,593,730],relu:[855,1257],repeat:[346,785,1100],reptile_step:1180,request:43,reshap:[786,1101],robot:57,round:[347,787,1102],run:1324,scaled_dot_product_attent:1274,scatter_flat:[165,348,489,628,788,1103],scatter_nd:[166,349,490,629,789,1104],search:[114,247,442,574,711,909],seed:[190,841,1242],sequenti:[1320,1321],set:[116,249,444,576,713,911],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:1002,set_default_dtyp:1028,set_default_float_dtyp:1029,set_default_int_dtyp:1030,set_default_nod:1212,set_exception_debug_mod:48,set_framework:65,set_min_bas:1105,set_min_denomin:1106,set_nest_at_index:1235,set_nest_at_indic:1236,set_queue_timeout:1107,set_split_factor:[1003,1213],set_tmp_dir:1108,set_with_grad:1140,sgd:1319,shape:[790,1109],shape_to_tupl:1110,shuffl:[191,842,1243],sigmoid:[856,1258],signatur:[107,240,435,567,704,902],sin:[104,237,432,564,701,899],sinh:[834,1174],siren:1295,softmax:[202,525,857,1259],softplu:[858,1260],sort:[117,250,445,577,714,912],sparse_cross_entropi:1278,split:[167,350,491,630,791,1111],split_factor:[1004,1214],split_func_cal:[1005,1215],sqrt:[105,238,433,565,702,900],squeez:[168,351,492,631,792,1112],stable_divid:1113,stable_pow:1114,stack:[352,793,1115],stack_imag:[178,367,504,645,813,1151],standard:43,statist:[119,252,447,579,716,914],stop_gradi:[362,499,640,807,1141],str_to_nod:1216,submodul:43,supports_inplac:1116,svd:[110,243,438,570,707,905],swapax:[632,794,1117],tan:[835,1175],tanh:[106,239,434,566,703,859,901,1176,1261],tensorflow:534,tile:[353,633,795,1118],tmp_dir:1119,to_dev:[140,310,600,738,1006],to_ivi:18,to_ivy_modul:[205,862,1288],to_list:[796,1120],to_n:19,to_nod:1217,to_numpi:[797,1121],to_scalar:[798,1122],todo:43,torch:671,total_mem_on_dev:1007,total_mem_on_nod:1218,tpu_is_avail:[601,739,1008,1219],train:1323,trainabl:1323,transpos:[169,354,493,799,1123],tree:1281,tril:[81,221,409,541,678,878],try_else_non:1124,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,223,227,411,415,543,547,680,684,880,883],uint8_img_to_float_img:1152,unifi:1220,unify_arrai:1221,unify_it:1222,unify_nest:1223,unset_debug_mod:49,unset_default_devic:1009,unset_default_dtyp:1031,unset_default_float_dtyp:1032,unset_default_int_dtyp:1033,unset_framework:71,unset_with_grad:1142,unstack:[170,355,494,634,800,1125],updat:43,used_mem_on_dev:1010,used_mem_on_nod:1224,util:[121,253,449,581,718,916],valid_dtyp:1034,value_is_nan:1126,variabl:[363,500,641,808,1143],variable_data:[809,1144],vector_norm:[111,244,439,571,708,906],vector_to_skew_symmetric_matrix:[182,372,508,649,820,1159],verbos:1325,vision:58,where:[356,801,1127,1281],why:1327,with_grad:1145,wrapper:72,write:1324,your:43,zero:[82,222,410,542,679,879,1297],zero_pad:[357,635,802,1128],zeros_lik:[171,358,495,636,803,1129]}})